{"version":3,"file":"index.js","sources":["../../src/grid/core/solidCompWrapper.tsx","../../src/grid/core/solidCompWrapperFactory.tsx","../../src/grid/core/beansContext.tsx","../../src/grid/core/utils.tsx","../../src/grid/cellRenderer/detailCellRenderer.tsx","../../src/grid/userComps/jsUserComp.tsx","../../src/grid/userComps/solidUserComp.tsx","../../src/grid/userComps/userComp.tsx","../../src/grid/cellRenderer/groupCellRenderer.tsx","../../src/grid/core/solidFrameworkOverrides.tsx","../../src/grid/header/headerCellComp.tsx","../../src/grid/header/headerFilterCellComp.tsx","../../src/grid/header/headerGroupCellComp.tsx","../../src/grid/header/headerRowComp.tsx","../../src/grid/header/headerRowContainerComp.tsx","../../src/grid/header/gridHeaderComp.tsx","../../src/grid/cells/popupEditorComp.tsx","../../src/grid/cells/showEditDetails.tsx","../../src/grid/cells/showRenderDetails.tsx","../../src/grid/cells/cellComp.tsx","../../src/grid/rows/rowComp.tsx","../../src/grid/rows/rowContainerComp.tsx","../../src/grid/gridBodyComp.tsx","../../src/grid/tabGuardComp.tsx","../../src/grid/gridComp.tsx","../../src/grid/agGridSolid.tsx","../../src/index.tsx"],"sourcesContent":["import { WrappableInterface } from \"ag-grid-community\";\nimport { PortalInfo, PortalManager } from \"../agGridSolid\";\n\nexport default class SolidCompWrapper implements WrappableInterface {\n\n    private eGui?: HTMLElement;\n    private SolidCompClass: any;\n\n    private portalManager: PortalManager;\n    private portalInfo?: PortalInfo;\n\n    private instance: any;\n\n    constructor(SolidCompClass: any, portalManager: PortalManager) {\n        this.SolidCompClass = SolidCompClass;        \n        this.portalManager = portalManager;\n    }\n\n    public init(props: any): void {\n        this.eGui = document.createElement('div');\n        this.eGui.className = 'ag-solid-container';\n        this.portalInfo = {\n            mount: this.eGui,\n            SolidClass: this.SolidCompClass,\n            props,\n            ref: instance => {\n                this.instance = instance;\n            }\n        };\n        this.portalManager.addPortal(this.portalInfo);\n    }\n\n    public destroy(): void {\n        this.portalInfo && this.portalManager.removePortal(this.portalInfo);\n    }\n\n    public getGui(): HTMLElement {\n        return this.eGui!;\n    }\n\n    public hasMethod(name: string): boolean {\n        return this.instance[name] != null;\n    }\n\n    public getFrameworkComponentInstance(): any {\n        return this.instance;\n    }\n\n    public callMethod(name: string, args: IArguments): void {\n        return this.instance[name].apply(this.instance, args);\n    }\n\n    public addMethod(name: string, callback: Function): void {\n        (this as any)[name] = callback;\n    }\n\n}\n","import { BaseComponentWrapper, FrameworkComponentWrapper, WrappableInterface } from \"ag-grid-community\";\nimport { PortalManager } from \"../agGridSolid\";\nimport SolidCompWrapper from \"./solidCompWrapper\";\n\nexport default class SolidCompWrapperFactory extends BaseComponentWrapper<WrappableInterface> implements FrameworkComponentWrapper {\n\n    private portalManager: PortalManager;\n\n    constructor(portalManager: PortalManager) {\n        super();\n        this.portalManager = portalManager;\n    }\n\n    createWrapper(SolidComponentClass: any): WrappableInterface {\n        return new SolidCompWrapper(SolidComponentClass, this.portalManager);\n    }\n}\n","import { Beans } from 'ag-grid-community';\nimport { createContext } from \"solid-js\";\n\nexport const BeansContext = createContext<Beans>({} as Beans);\n","export const classesList = (...list: (string | null | undefined)[]): string => {\n    const filtered = list.filter( s => s != null && s !== '');\n\n    return filtered.join(' ');\n}\n\nexport class CssClasses {\n\n    private classesMap: {[name: string]: boolean} = {};\n\n    constructor(...initialClasses: string[]) {\n        initialClasses.forEach(className => {\n            this.classesMap[className] = true;\n        });\n    }\n\n    public setClass(className: string, on: boolean): CssClasses {\n        // important to not make a copy if nothing has changed, so react\n        // won't trigger a render cycle on new object instance\n        const nothingHasChanged = !!this.classesMap[className] == on;\n        if (nothingHasChanged) { return this; }\n\n        const res = new CssClasses();\n        res.classesMap = {...this.classesMap};\n        res.classesMap[className] = on;\n        return res;\n    }\n\n    public toString(): string {\n        const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n        return res;\n    }\n\n}\n\nexport const isComponentStateless = (Component: any) => {\n    const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n    const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n\n    return (\n            typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent)\n        ) || (typeof Component === 'object' && Component.$$typeof === getMemoType());\n}\n\nexport interface RefPointer<T> {\n    instance?: T;\n    afterSet?: (ref: T)=>void;\n}","import { GridOptions, IDetailCellRenderer, IDetailCellRendererCtrl, IDetailCellRendererParams } from \"ag-grid-community\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport AgGridSolid, { AgGridSolidRef } from '../agGridSolid';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\n\nconst DetailCellRenderer = (props: IDetailCellRendererParams) => {\n\n    const {ctrlsFactory, context, \n        gridOptionsService, resizeObserverService, \n            clientSideRowModel, serverSideRowModel} = useContext(BeansContext);\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getGridCssClasses, setGridCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getDetailGridOptions, setDetailGridOptions] = createSignal<GridOptions>();\n    const [getDetailRowData, setDetailRowData] = createSignal<any[]>();\n\n    let ctrl: IDetailCellRendererCtrl;\n    let eGuiRef: HTMLDivElement;\n\n    const getCssClassesStr = createMemo(() => getCssClasses().toString() + ' ag-details-row');\n    const getGridCssClassesStr = createMemo(() => getGridCssClasses().toString() + ' ag-details-grid');\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return ctrl.refresh(); }\n    }));\n\n    onMount(() => {\n        if (props.template && typeof props.template === 'string') {\n            console.warn('AG Grid: detailCellRendererParams.template is not supported by Solid - this only works with frameworks that work against String templates. To change the template, please provide your own Solid Detail Cell Renderer.');\n        }\n\n        const compProxy: IDetailCellRenderer = {\n            addOrRemoveCssClass: (name: string, on: boolean) => setCssClasses(getCssClasses().setClass(name, on)),\n            addOrRemoveDetailGridCssClass: (name: string, on: boolean) => setGridCssClasses(getGridCssClasses().setClass(name, on)),\n            setDetailGrid: gridOptions => setDetailGridOptions(gridOptions),\n            setRowData: rowData => setDetailRowData(rowData),\n            getGui: () => eGuiRef\n        };\n\n        ctrl = ctrlsFactory.getInstance('detailCellRenderer') as IDetailCellRendererCtrl;\n        if (!ctrl) { return; } // should never happen, means master/detail module not loaded\n        context.createBean(ctrl);\n\n        ctrl.init(compProxy, props);\n\n        let resizeObserverDestroyFunc: () => void;\n\n        if (gridOptionsService.get('detailRowAutoHeight')) {\n            const checkRowSizeFunc = () => {\n                // when disposed, current is null, so nothing to do, and the resize observer will\n                // be disposed of soon\n                if (eGuiRef==null) { return; }\n\n                const clientHeight = eGuiRef.clientHeight;\n\n                // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n                // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n                // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n                // empty detail grid would still have some styling around it giving at least a few pixels.\n                if (clientHeight != null && clientHeight > 0) {\n                    // we do the update in a timeout, to make sure we are not calling from inside the grid\n                    // doing another update\n                    const updateRowHeightFunc = () => {\n                        props.node.setRowHeight(clientHeight);\n                        if (clientSideRowModel) {\n                            clientSideRowModel.onRowHeightChanged();\n                        } else if (serverSideRowModel) {\n                            serverSideRowModel.onRowHeightChanged();\n                        }\n                    };\n                    setTimeout(updateRowHeightFunc, 0);\n                }\n            };\n    \n            resizeObserverDestroyFunc = resizeObserverService.observeResize(eGuiRef, checkRowSizeFunc);\n            checkRowSizeFunc();\n        }\n\n        return () => {\n            context.destroyBean(ctrl);\n            if (resizeObserverDestroyFunc) {\n                resizeObserverDestroyFunc();\n            }\n        };\n    });\n\n    const setRef = (ref: AgGridSolidRef) => {\n        ctrl.registerDetailWithMaster(ref.api, ref.columnApi)\n    };\n\n    return (\n        <div class={getCssClassesStr()} ref={eGuiRef!}>\n            {\n                getDetailGridOptions() &&\n                <AgGridSolid class={getGridCssClassesStr()} {...getDetailGridOptions()} rowData={getDetailRowData()} ref={ setRef }></AgGridSolid> \n            }\n        </div>\n    );\n};\n\nexport default DetailCellRenderer;\n","import { UserCompDetails } from 'ag-grid-community';\nimport { onCleanup, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\n\nconst JsUserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: (ref: any)=>void\n})=> {\n    const { context } = useContext(BeansContext);\n\n    const promise = p.compDetails.newAgStackInstance();\n    if (!promise) { return <></>; }\n\n    const comp = promise.resolveNow(null, (x: any) => x); // js comps are never async\n    if (!comp) { return <></>; }\n    p.ref && p.ref(comp);\n\n    const gui = comp.getGui();\n\n    onCleanup( ()=> {\n        comp && context.destroyBean(comp);\n        p.ref && p.ref(undefined);\n    });\n\n    return <>{gui}</>;\n};\n\nexport default JsUserComp;","import { UserCompDetails } from 'ag-grid-community';\nimport { onCleanup } from 'solid-js';\n\nconst SolidUserComp = (props: {\n    compDetails: UserCompDetails, \n    ref?: any\n})=> {\n    const SolidClass = props.compDetails.componentClass;\n\n    let refSet = false;\n\n    const setRef = (ref: any)=> {\n        if (!props.ref) { return; }\n        props.ref(ref);\n        refSet = true;\n    };\n\n    onCleanup( ()=> {\n        if (refSet) {\n            props.ref && props.ref(undefined);\n        }\n    });\n\n    return <SolidClass ref={setRef} { ...props.compDetails.params }/>;\n};\n\nexport default SolidUserComp;\n","import { UserCompDetails } from 'ag-grid-community';\nimport { createMemo } from 'solid-js';\nimport JsUserComp from './jsUserComp';\nimport SolidUserComp from './solidUserComp';\n\nconst UserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: any\n})=> {\n    \n    const showSolidComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return details.componentFromFramework;\n    });\n\n    const showJsComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return !details.componentFromFramework;\n    });\n\n    return (\n        <>\n            { showSolidComp() \n                && <SolidUserComp compDetails={p.compDetails} ref={p.ref} /> }\n            { showJsComp() \n                && <JsUserComp compDetails={p.compDetails} ref={p.ref} /> }\n        </>\n    );\n};\n\nexport default UserComp;\n","import { GroupCellRendererCtrl, GroupCellRendererParams, IGroupCellRenderer, UserCompDetails, _ } from \"ag-grid-community\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport { BeansContext } from \"../core/beansContext\";\nimport { CssClasses } from \"../core/utils\";\nimport UserComp from \"../userComps/userComp\";\n\nconst GroupCellRenderer = (props: GroupCellRendererParams) => {\n\n    const context = useContext(BeansContext).context!;\n\n    let eGui: HTMLElement;\n    let eValueRef: HTMLElement;\n    let eCheckboxRef: HTMLElement;\n    let eExpandedRef: HTMLElement;\n    let eContractedRef: HTMLElement;\n    let role: any = 'gridcell';\n\n    const [getInnerCompDetails, setInnerCompDetails] = createSignal<UserCompDetails>();\n    const [getChildCount, setChildCount] = createSignal<string>();\n    const [getValue, setValue] = createSignal<any>();\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getExpandedCssClasses, setExpandedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getContractedCssClasses, setContractedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getCheckboxCssClasses, setCheckboxCssClasses] = createSignal<CssClasses>(new CssClasses('ag-invisible'));\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return false; }\n    }));\n\n    onMount(() => {\n        const compProxy: IGroupCellRenderer = {\n            setInnerRenderer: (details, valueToDisplay) => {\n                setInnerCompDetails(details);\n                const escapedValue = _.escapeString(valueToDisplay, true);\n                setValue(escapedValue);\n            },\n            setChildCount: count => setChildCount(count),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setContractedDisplayed: displayed => setContractedCssClasses(getContractedCssClasses().setClass('ag-hidden', !displayed)),\n            setExpandedDisplayed: displayed => setExpandedCssClasses(getExpandedCssClasses().setClass('ag-hidden', !displayed)),\n            setCheckboxVisible: visible => setCheckboxCssClasses(getCheckboxCssClasses().setClass('ag-invisible', !visible))\n        };\n\n        const ctrl = context.createBean(new GroupCellRendererCtrl());\n        ctrl.init(compProxy, eGui, eCheckboxRef, eExpandedRef, eContractedRef, GroupCellRenderer, props);\n        eGui.setAttribute('role', ctrl.getCellAriaRole());\n        role = ctrl.getCellAriaRole();\n\n        return () => { context.destroyBean(ctrl);};\n    });\n\n    const getClassName = createMemo(() => `ag-cell-wrapper ${getCssClasses().toString()}`);\n    const getExpandedClassName = createMemo(() => `ag-group-expanded ${getExpandedCssClasses().toString()}`);\n    const getContractedClassName = createMemo(() => `ag-group-contracted ${getContractedCssClasses().toString()}`);\n    const getCheckboxClassName = createMemo(() => `ag-group-checkbox ${getCheckboxCssClasses().toString()}`);\n\n    const isShowUserComp = ()=> getInnerCompDetails() != null;\n    const isShowValue = ()=> getInnerCompDetails() == null && getValue() != null;\n\n    return (\n        <span class={getClassName()} ref={eGui!} {...(!props.colDef ? { role } : {})}>\n            <span class={getExpandedClassName()} ref={eExpandedRef!}></span>\n            <span class={getContractedClassName()} ref={eContractedRef!}></span>\n            <span class={getCheckboxClassName()} ref={eCheckboxRef!}></span>\n            <span class=\"ag-group-value\" ref={eValueRef!}>\n                { isShowUserComp() && <UserComp compDetails={getInnerCompDetails()!}></UserComp>}\n                { isShowValue() && <>{getValue()}</> }\n            </span>\n            <span class=\"ag-group-child-count\">{getChildCount()}</span>\n        </span>\n    );\n};\n\n// we do not memo() here, as it would stop the forwardRef working\nexport default GroupCellRenderer;\n","import { VanillaFrameworkOverrides } from \"ag-grid-community\";\nimport DetailCellRenderer from \"../cellRenderer/detailCellRenderer\";\nimport GroupCellRenderer from \"../cellRenderer/groupCellRenderer\";\n\nexport class SolidFrameworkOverrides extends VanillaFrameworkOverrides {\n\n    constructor() {\n        super('solid');\n    }\n\n    private frameworkComponents: any = {\n        agGroupCellRenderer: GroupCellRenderer,\n        agGroupRowRenderer: GroupCellRenderer,\n        agDetailCellRenderer: DetailCellRenderer\n    };\n\n    public frameworkComponent(name: string): any {\n        return this.frameworkComponents[name];\n    }\n\n    isFrameworkComponent(comp: any): boolean {\n        if (!comp) { return false; }\n        const prototype = comp.prototype;\n        const isJsComp = prototype && 'getGui' in prototype;\n        return !isJsComp;\n    }\n}","import { ColumnSortState, CssClassManager, HeaderCellCtrl, IHeader, IHeaderCellComp, UserCompDetails } from 'ag-grid-community';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderCellComp = (props: {ctrl: HeaderCellCtrl})=> {\n\n    const { ctrl } = props;\n\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>(ctrl.getColId());\n    const [getAriaSort, setAriaSort] = createSignal<ColumnSortState>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement\n    let eHeaderCompWrapper: HTMLDivElement\n    \n    let userComp: IHeader | undefined;\n\n    const setRef = (ref: any) => {\n        userComp = ref;\n    }\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    onMount(() => {\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setAriaSort: sort => setAriaSort(sort),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            getUserCompInstance: () => userComp\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize, eHeaderCompWrapper);\n\n        const selectAllGui = ctrl.getSelectAllGui();\n        eResize.insertAdjacentElement('afterend', selectAllGui);\n        ctrl.setDragSource(eGui);\n    });\n\n    const style = createMemo(() => ({ width: getWidth() }));\n\n    return (\n        <div\n            ref={eGui!}\n            class=\"ag-header-cell\"\n            style={ style() }\n            col-id={ getColId() }\n            aria-sort={ getAriaSort() }\n            role=\"columnheader\"\n        >\n            <div ref={eResize!} class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div ref={eHeaderCompWrapper!} class=\"ag-header-cell-comp-wrapper\" role=\"presentation\">\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} ref={setRef} /> }\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderCellComp;\n","import { AgPromise, HeaderFilterCellCtrl, IFloatingFilter, IHeaderFilterCellComp, UserCompDetails } from 'ag-grid-community';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderFilterCellComp = (props: {ctrl: HeaderFilterCellCtrl}) => {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssBodyClasses, setBodyCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssButtonWrapperClasses, setButtonWrapperCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getButtonWrapperAriaHidden, setButtonWrapperAriaHidden] = createSignal<\"true\" | \"false\">(\"false\");\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails | null | undefined>();\n\n    let eGui: HTMLDivElement;\n    let eFloatingFilterBody: HTMLDivElement;\n    let eButtonWrapper: HTMLDivElement;\n    let eButtonShowMainFilter: HTMLButtonElement;\n\n    let alreadyResolved = false;\n    let userCompResolve: (value: IFloatingFilter)=>void;\n    let userCompPromise: AgPromise<IFloatingFilter>;\n    onMount( ()=> {\n        userCompPromise = new AgPromise<IFloatingFilter>( resolve => {\n            userCompResolve = resolve;\n        });\n    });\n    \n    const setRef = (value: IFloatingFilter) => {\n        // i don't know why, but react was calling this method multiple\n        // times, thus un-setting, them immediately setting the reference again.\n        // because we are resolving a promise, it's not good to be resolving\n        // the promise multiple times, so we only resolve the first time.\n        if (alreadyResolved) { return; }\n        // we also skip when it's un-setting\n        if (value==null) { return; }\n\n        userCompResolve && userCompResolve(value);\n        alreadyResolved = true;\n    };\n\n    const { ctrl } = props;\n\n    onMount(() => {\n\n        const compProxy: IHeaderFilterCellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses(prev => prev.setClass(name, on)),\n            setButtonWrapperDisplayed: (displayed) => {\n                setButtonWrapperCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n                setButtonWrapperAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setWidth: width => setWidth(width),\n            setCompDetails: compDetails => setUserCompDetails(compDetails),\n            getFloatingFilterComp: ()=> userCompPromise,\n            setMenuIcon: eIcon => eButtonShowMainFilter.appendChild(eIcon)\n        };\n\n        ctrl.setComp(compProxy, eGui, eButtonShowMainFilter, eFloatingFilterBody);\n\n    });\n\n    const getStyle = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getCssClassesString = createMemo( ()=> 'ag-header-cell ag-floating-filter ' + getCssClasses().toString() );\n    const getBodyCssClassesString = createMemo( ()=> getCssBodyClasses().toString(), );\n    const getButtonWrapperCssClassesString = createMemo( ()=> 'ag-floating-filter-button ' + getCssButtonWrapperClasses().toString() );\n    \n    return (\n        <div ref={eGui!} class={getCssClassesString()} style={getStyle()} role=\"gridcell\">\n            <div ref={eFloatingFilterBody!} class={getBodyCssClassesString()} role=\"presentation\">\n                { getUserCompDetails() && <UserComp compDetails={getUserCompDetails()!} ref={setRef}/> }\n            </div>\n            <div ref={eButtonWrapper!} aria-hidden={getButtonWrapperAriaHidden()} class={getButtonWrapperCssClassesString()} role=\"presentation\">\n                <button ref={eButtonShowMainFilter!} type=\"button\" class=\"ag-button ag-floating-filter-button-button\" tabIndex={-1}></button>\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderFilterCellComp;\n","import { HeaderGroupCellCtrl, IHeaderGroupCellComp, UserCompDetails } from 'ag-grid-community';\nimport { createEffect, createMemo, createSignal, onMount } from 'solid-js';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderGroupCellComp = (props: {ctrl: HeaderGroupCellCtrl}) => {\n    const { ctrl } = props;\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssResizableClasses, setResizableCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getResizableAriaHidden, setResizableAriaHidden] = createSignal<\"true\" | \"false\">(\"false\");\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>(ctrl.getColId());\n    const [getAriaExpanded, setAriaExpanded] = createSignal<'true'|'false'|undefined>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement;\n\n\n    onMount( () => {\n\n        const compProxy: IHeaderGroupCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            setResizableDisplayed: (displayed) => {\n                setResizableCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n                setResizableAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setAriaExpanded: expanded => setAriaExpanded(expanded)\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize);\n    });\n\n    // add drag handling, must be done after component is added to the dom\n    createEffect(()=> {\n        const userCompDetails = getUserCompDetails();\n        if (userCompDetails == null) { return; }\n\n        ctrl.setDragSource(eGui);\n    });\n\n    const style = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getClassName = createMemo( ()=> 'ag-header-group-cell ' + getCssClasses().toString() );\n    const getResizableClassName = createMemo( ()=> 'ag-header-cell-resize ' + getCssResizableClasses().toString() );\n\n    return (\n        <div ref={eGui!} class={getClassName()} style={style()} col-id={getColId()} \n                    role=\"columnheader\" aria-expanded={getAriaExpanded()}>\n\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} /> }\n\n            <div ref={eResize!} aria-hidden={getResizableAriaHidden()} class={getResizableClassName()}></div>\n        </div>\n    );\n};\n\nexport default HeaderGroupCellComp;","import { AbstractHeaderCellCtrl, HeaderCellCtrl, HeaderFilterCellCtrl, HeaderGroupCellCtrl, HeaderRowCtrl, HeaderRowType, IHeaderRowComp, _ } from 'ag-grid-community';\nimport { createMemo, createSignal, For, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport HeaderCellComp from './headerCellComp';\nimport HeaderFilterCellComp from './headerFilterCellComp';\nimport HeaderGroupCellComp from './headerGroupCellComp';\n\nconst HeaderRowComp = (props: {ctrl: HeaderRowCtrl}) => {\n\n    const { gridOptionsService } = useContext(BeansContext);\n    const { ctrl } = props;\n    \n    const [ getHeight, setHeight ] = createSignal<string>();\n    const [ getTop, setTop ] = createSignal<string>();\n    const [ getWidth, setWidth ] = createSignal<string>();\n    const [ getAriaRowIndex, setAriaRowIndex ] = createSignal<number>(ctrl.getAriaRowIndex());\n    const [ getCellCtrls, setCellCtrls ] = createSignal<AbstractHeaderCellCtrl[]>([]);\n\n    let eGui: HTMLDivElement;\n\n    const setCellCtrlsMaintainOrder = (next: AbstractHeaderCellCtrl[]) => {\n        const prev = getCellCtrls();\n        const isEnsureDomOrder = gridOptionsService.get('ensureDomOrder');\n        const isPrintLayout = gridOptionsService.isDomLayout('print');\n\n        // if we are ensuring dom order, we set the ctrls into the dom in the same order they appear on screen\n        if (isEnsureDomOrder || isPrintLayout) {\n            return next;\n        }\n\n        // if not maintaining order, we want to keep the dom elements we have and add new ones to the end,\n        // otherwise we will loose transition effects as elements are placed in different dom locations\n        const prevMap = _.mapById(prev, c => c.getInstanceId());\n        const nextMap = _.mapById(next, c => c.getInstanceId());\n\n        const oldCtrlsWeAreKeeping = prev.filter(c => nextMap.has(c.getInstanceId()));\n        const newCtrls = next.filter(c => !prevMap.has(c.getInstanceId()))\n\n        const nextOrderMaintained = [...oldCtrlsWeAreKeeping, ...newCtrls];\n        setCellCtrls(nextOrderMaintained);\n    };\n\n    onMount(() => {\n        const compProxy: IHeaderRowComp = {\n            setHeight: height => setHeight(height),\n            setTop: top => setTop(top),\n            setHeaderCtrls: ctrls => setCellCtrlsMaintainOrder(ctrls),\n            setWidth: width => setWidth(width)\n        };\n        ctrl.setComp(compProxy);\n    });\n\n    const style = createMemo( ()=> ({\n        height: getHeight(),\n        top: getTop(),\n        width: getWidth()\n    }));\n\n    const cssClasses = ctrl.getHeaderRowClass();\n\n    const createCellJsx = (cellCtrl: AbstractHeaderCellCtrl) => {\n        switch (ctrl.getType()) {\n            case HeaderRowType.COLUMN_GROUP :\n                return <HeaderGroupCellComp ctrl={cellCtrl as HeaderGroupCellCtrl} />;\n\n            case HeaderRowType.FLOATING_FILTER :\n                return <HeaderFilterCellComp ctrl={cellCtrl as HeaderFilterCellCtrl} />;\n                \n            default :\n                return <HeaderCellComp ctrl={cellCtrl as HeaderCellCtrl} />;\n        }\n    };\n\n    // below, we are not doing floating filters, not yet\n    return (\n        <div ref={eGui!} class={cssClasses} role=\"row\" style={style()} aria-rowindex={getAriaRowIndex()}>\n            <For each={getCellCtrls()}>{(cellCtrl, i) => createCellJsx(cellCtrl) }</For>\n        </div>\n    );\n};\n\nexport default HeaderRowComp;\n","import { ColumnPinnedType, HeaderRowContainerCtrl, HeaderRowCtrl, IHeaderRowContainerComp } from 'ag-grid-community';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowComp from './headerRowComp';\n\nconst HeaderRowContainerComp = (props: {pinned: ColumnPinnedType | null})=> {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getAriaHidden, setAriaHidden] = createSignal<true | false>(false);\n    const [getCenterContainerWidth, setCenterContainerWidth] = createSignal<string>();\n    const [getPinnedContainerWidth, setPinnedContainerWidth] = createSignal<string>();\n    const [getHeaderRowCtrls, setHeaderRowCtrls] = createSignal<HeaderRowCtrl[]>([]);\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const pinnedLeft = props.pinned === 'left';\n    const pinnedRight = props.pinned === 'right';\n    const centre = !pinnedLeft && !pinnedRight;\n\n    const destroyFuncs: (()=>void)[] = [];\n\n    onCleanup(() => {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount(() => {\n        const compProxy: IHeaderRowContainerComp = {\n            setDisplayed: (displayed) => {\n                setCssClasses(getCssClasses().setClass('ag-hidden', !displayed));\n                setAriaHidden(!displayed)\n            },\n            setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n\n            // centre only\n            setCenterWidth: width => setCenterContainerWidth(width),\n            setViewportScrollLeft: left => eGui.scrollLeft = left,\n\n            // pinned only\n            setPinnedContainerWidth: width => setPinnedContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n        ctrl.setComp(compProxy, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const getClassName = createMemo( ()=> getCssClasses().toString() );\n\n    const insertRowsJsx = ()=> \n    <For each={getHeaderRowCtrls()}>{ ctrl =>\n        <HeaderRowComp ctrl={ctrl}/>\n    }</For>;\n    \n    const eCenterContainerStyle = createMemo(()=> ({\n        width: getCenterContainerWidth()\n    }));\n\n    const ePinnedStyle = createMemo( ()=> ({\n        width: getPinnedContainerWidth(),\n        'min-width': getPinnedContainerWidth(),\n        'max-width': getPinnedContainerWidth()\n    }));\n\n    return (\n        <>\n            { \n                pinnedLeft && \n                <div ref={eGui!} class={\"ag-pinned-left-header \" + getClassName()} aria-hidden={getAriaHidden()} role=\"rowgroup\" style={ePinnedStyle()}>\n                    { insertRowsJsx() }\n                </div>\n            }\n            { \n                pinnedRight && \n                <div ref={eGui!} class={\"ag-pinned-right-header \" + getClassName()} aria-hidden={getAriaHidden()} role=\"rowgroup\" style={ePinnedStyle()}>\n                { insertRowsJsx() }\n            </div>\n            }\n            { \n                centre && \n                <div ref={eGui!} class={\"ag-header-viewport \" + getClassName()} role=\"presentation\">\n                    <div class=\"ag-header-container\" role=\"rowgroup\" style={eCenterContainerStyle()}>\n                        { insertRowsJsx() }\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default HeaderRowContainerComp;\n","import { GridHeaderCtrl, IGridHeaderComp } from 'ag-grid-community';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowContainerComp from './headerRowContainerComp';\n\nconst GridHeaderComp = ()=> {\n    \n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getHeight, setHeight] = createSignal<string>();\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount( () => {\n\n        const compProxy: IGridHeaderComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setHeightAndMinHeight: height => setHeight(height)\n        };\n\n        const ctrl = context.createBean(new GridHeaderCtrl());\n        ctrl.setComp(compProxy, eGui, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const className = createMemo( ()=> {\n        let res = getCssClasses().toString();\n        return 'ag-header ' + res;\n    });\n\n    const style = createMemo( ()=> ({\n        height: getHeight(),\n        'min-height': getHeight()\n    }));\n\n    return (\n        <div ref={eGui!} class={className()} style={style()} role=\"presentation\">\n            <HeaderRowContainerComp pinned={'left'} />\n            <HeaderRowContainerComp pinned={null}/>\n            <HeaderRowContainerComp pinned={'right'} />\n        </div>\n    );\n};\n\nexport default GridHeaderComp;\n","import { CellCtrl, PopupEditorWrapper } from 'ag-grid-community';\nimport { JSX, onCleanup, useContext } from 'solid-js';\nimport { Portal } from \"solid-js/web\";\nimport { BeansContext } from '../core/beansContext';\nimport { EditDetails } from './common';\n\nconst PopupEditorComp = (props: {\n            editDetails: EditDetails, \n            cellCtrl: CellCtrl, \n            eParentCell: HTMLElement,\n            children?: JSX.Element\n        }) => {\n\n    const { context, popupService, localeService, gridOptionsService } = useContext(BeansContext);\n\n    const {editDetails, cellCtrl, eParentCell} = props;\n    const {compDetails} = editDetails;\n\n    const useModelPopup = gridOptionsService.get('stopEditingWhenCellsLoseFocus');\n    \n    const wrapper = context.createBean(new PopupEditorWrapper(compDetails.params));\n    const ePopupGui = wrapper.getGui();\n\n    const positionParams = {\n        column: cellCtrl.getColumn(),\n        rowNode: cellCtrl.getRowNode(),\n        type: 'popupCellEditor',\n        eventSource: eParentCell,\n        ePopup: ePopupGui,\n        position: editDetails!.popupPosition,\n        keepWithinBounds: true\n    };\n\n    const positionCallback = popupService.positionPopupByComponent.bind(popupService, positionParams);\n\n    const translate = localeService.getLocaleTextFunc();\n\n    const addPopupRes = popupService.addPopup({\n        modal: useModelPopup,\n        eChild: ePopupGui,\n        closeOnEsc: true,\n        closedCallback: () => { cellCtrl.onPopupEditorClosed(); },\n        anchorToElement: eParentCell,\n        positionCallback,\n        ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n    });\n\n    const hideEditorPopup: (()=>void) | undefined = addPopupRes ? addPopupRes.hideFunc : undefined;\n\n    onCleanup( ()=> {\n        if (hideEditorPopup!=null) {\n            hideEditorPopup();\n        }\n        context.destroyBean(wrapper);\n    });\n\n    return (\n        <Portal mount={ePopupGui}>\n            { props.children }\n        </Portal>\n    );\n};\n\nexport default PopupEditorComp;\n","import { CellCtrl, ICellEditor } from 'ag-grid-community';\nimport { createMemo } from 'solid-js';\nimport UserComp from '../userComps/userComp';\nimport { EditDetails } from './common';\nimport PopupEditorComp from './popupEditorComp';\n\nconst ShowEditDetails = (props: {\n    editDetails: EditDetails,\n    cellCtrl: CellCtrl,\n    eGuiFn: () => HTMLDivElement,\n    setInlineRef: (ref: ICellEditor) => void,\n    setPopupRef: (ref: ICellEditor) => void\n}\n) => {\n\n    const getCompDetails = createMemo(() => props.editDetails.compDetails);\n    const compDetails = props.editDetails.compDetails;\n\n    // when editing, we must have a comp, otherwise doesn't work\n    if (!compDetails) { return <></>; }\n\n    const inPopup = props.editDetails.popup;\n    const eGui = props.eGuiFn();\n\n    return (\n        <>\n            {inPopup &&\n                <PopupEditorComp cellCtrl={props.cellCtrl} eParentCell={eGui} editDetails={props.editDetails}>\n                    <UserComp compDetails={getCompDetails()!} ref={props.setPopupRef} />\n                </PopupEditorComp>\n            }\n            {!inPopup &&\n                <UserComp compDetails={getCompDetails()!} ref={props.setInlineRef} />\n            }\n        </>\n    );\n};\n\nexport default ShowEditDetails;\n","import { CellCtrl, Component  } from 'ag-grid-community';\nimport { createMemo, onCleanup, Setter, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport UserComp from '../userComps/userComp';\nimport { RenderDetails } from './common';\n\nconst ToolsComp = (props: {\n    includeSelection: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    setSelectionCheckboxId: Setter<string | undefined>,\n    cellCtrl: CellCtrl\n}) => {\n\n    const { context } = useContext(BeansContext);\n\n    const CompWrapper = (innerProps: {\n        createFn: () => Component | undefined\n    }) => {\n        const comp = innerProps.createFn();\n        if (!comp) { return <></>; }\n\n        onCleanup(() => context.destroyBean(comp));\n        return <>{comp.getGui()}</>\n    };\n\n    return (\n        <>\n            { props.includeSelection && \n                <CompWrapper createFn={() => {\n                    const checkboxSelectionComp = props.cellCtrl.createSelectionCheckbox();\n                    props.setSelectionCheckboxId(checkboxSelectionComp.getCheckboxId());\n                    return checkboxSelectionComp;\n                }}/> }\n            { props.includeDndSource && \n                <CompWrapper createFn={() => props.cellCtrl.createDndSource()}/> }\n            { props.includeRowDrag && \n                <CompWrapper createFn={() => props.cellCtrl.createRowDragComp()}/> }\n        </>\n    );\n};\n\nconst ShowRenderDetails = (props: {\n    showDetails: RenderDetails,\n    ref: any,\n    showCellWrapper: boolean,\n    showTools: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    includeSelection: boolean,\n    setSelectionCheckboxId: Setter<string | undefined>\n    cellCtrl: CellCtrl,\n    cellInstanceId: string,\n    setECellValue: (eCellValue: HTMLElement) => void\n}) => {\n\n    const getCompDetails = createMemo(() => props.showDetails.compDetails);\n    const isNoCompDetails = createMemo(() => props.showDetails.compDetails == null);\n\n    // if we didn't do this, objects would cause error. we depend on objects for things\n    // like the aggregation functions avg and count, which return objects and depend on toString()\n    // getting called.\n    const valueForNoCellRenderer = () => {\n        const value = props.showDetails.value;\n        return (value && value.toString) ? value.toString() : value;\n    };\n\n    const bodyJsxFunc = () => (\n        <>\n            {isNoCompDetails() && <>{valueForNoCellRenderer()}</>}\n            {getCompDetails() && <UserComp compDetails={getCompDetails()!}\n                ref={props.ref}/>}\n        </>\n    );\n\n    return (\n        <>\n            {\n                props.showTools &&\n                <ToolsComp\n                    includeDndSource={props.includeDndSource}\n                    includeRowDrag={props.includeRowDrag}\n                    includeSelection={props.includeSelection}\n                    setSelectionCheckboxId={props.setSelectionCheckboxId}\n                    cellCtrl={props.cellCtrl} />\n            }\n            {\n                props.showCellWrapper\n                    ? (\n                        <span role=\"presentation\" id={`cell-${props.cellInstanceId}`} class=\"ag-cell-value\" ref={props.setECellValue}>\n                            {bodyJsxFunc()}\n                        </span>\n                    )\n                    : bodyJsxFunc()\n            }\n        </>\n    );\n}\n\nexport default ShowRenderDetails;\n","import { CellCtrl, CellStyle, CssClassManager, ICellComp, ICellEditor, ICellRenderer, _ } from 'ag-grid-community';\nimport { createEffect, createMemo, createSignal, For, onMount } from 'solid-js';\nimport { EditDetails, RenderDetails } from './common';\nimport ShowEditDetails from './showEditDetails';\nimport ShowRenderDetails from './showRenderDetails';\n\nconst checkCellEditorDeprecations = (popup: boolean, cellEditor: ICellEditor, cellCtrl: CellCtrl) => {\n\n    const col = cellCtrl.getColumn();\n\n    // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n    if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor is a popup using colDef.cellEditorPopup=true. AG Grid SolidJS cannot depend on the editor component specifying if it's in a popup (via the isPopup() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n    }\n\n    // cellEditor is a popup and is trying to position itself the deprecated way\n    if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition()!=null) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor popup position using colDef.cellEditorPopupPosition=true. AG Grid SolidJS cannot depend on the editor component specifying it's position (via the getPopupPosition() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n    }\n}\n\nconst CellComp = (props: {\n    cellCtrl: CellCtrl,\n    printLayout: boolean, \n    editingRow: boolean\n}) => {\n\n    const { cellCtrl, printLayout, editingRow } = props;\n\n    const [renderDetails, setRenderDetails ] = createSignal<RenderDetails>();\n    const [editDetails, setEditDetails ] = createSignal<EditDetails>();\n\n    let renderCompVersion = 0;\n    const [renderCompVersionList, setRenderCompVersionList] = createSignal<number[]>([renderCompVersion]);\n\n    const [userStyles, setUserStyles] = createSignal<CellStyle>();\n\n    const [tabIndex, setTabIndex] = createSignal<number|undefined>(cellCtrl.getTabIndex());\n    const [colId, setColId] = createSignal<string>(cellCtrl.getColumnIdSanitised());\n    const [selectionCheckboxId, setSelectionCheckboxId] = createSignal<string>();\n    const [includeSelection, setIncludeSelection] = createSignal<boolean>(false);\n    const [includeRowDrag, setIncludeRowDrag] = createSignal<boolean>(false);\n    const [includeDndSource, setIncludeDndSource] = createSignal<boolean>(false);\n\n    const forceWrapper = cellCtrl.isForceWrapper();\n\n    let eCellWrapper: HTMLDivElement;\n    let eCellValue: HTMLElement;\n    const setECellValue = (val: HTMLElement)=> {\n        eCellValue = val;\n    };\n\n    let eGui: HTMLDivElement;\n    let cellRenderer: ICellRenderer | null = null;\n\n    let cellEditor: ICellEditor | null = null;\n    const setEditorRef = (popup: boolean, ref: ICellEditor)=> {\n        cellEditor = ref;\n        if (!cellEditor) { return; }\n\n        checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n\n        const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n        if (editingCancelledByUserComp) {\n            // we cannot set state inside render, so hack is to do it in next VM turn\n            setTimeout(() => {\n                cellCtrl.stopEditing(true);\n                cellCtrl.focusCell(true);\n            });\n        }\n\n        const refAny = ref as any;\n        if (refAny.afterGuiAttached) {\n            setTimeout(() => refAny.afterGuiAttached(), 0);\n        }\n    }\n    const setPopupEditorRef = (ref: ICellEditor) => setEditorRef(true, ref);\n    const setInlineEditorRef = (ref: ICellEditor) => setEditorRef(false, ref);\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    const showTools = createMemo(() => renderDetails() != null && (includeSelection() || includeDndSource() || includeRowDrag()) );\n    const showCellWrapper = createMemo(() => forceWrapper || showTools());\n\n    const cellInstanceId = cellCtrl.getInstanceId();\n\n    onMount( () => {\n        if (!cellCtrl) { return; }\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setUserStyles: (styles: CellStyle) => setUserStyles(styles),\n            getFocusableElement: () => eGui,\n            setIncludeSelection: include => setIncludeSelection(include),\n            setIncludeRowDrag: include => setIncludeRowDrag(include),\n            setIncludeDndSource: include => setIncludeDndSource(include),\n            \n            getCellEditor: () => cellEditor,\n            getCellRenderer: () => cellRenderer ? cellRenderer : null,\n            getParentOfValue: () => eCellValue ? eCellValue : eCellWrapper ? eCellWrapper : eGui,\n\n            setRenderDetails: (compDetails, value, force) => {\n                setRenderDetails({\n                    value,\n                    compDetails,\n                    force\n                });\n            },\n            \n            setEditDetails: (compDetails, popup, popupPosition) => {\n                if (compDetails) {\n                    // start editing\n                    setEditDetails({\n                        compDetails: compDetails!,\n                        popup,\n                        popupPosition\n                    });\n                    if (!popup) {\n                        setRenderDetails(undefined);\n                    }\n                } else {\n                    // stop editing\n                    setEditDetails(undefined);\n                }\n            }\n        };\n\n        cellCtrl.setComp(compProxy, eGui, eCellWrapper, printLayout, editingRow);\n    });\n\n    createEffect(() => {\n        const isEditing = !!editDetails();\n        const isPopup = isEditing && !!editDetails()?.popup;\n\n        cssClassManager.addOrRemoveCssClass('ag-cell-value', !showCellWrapper());\n        cssClassManager.addOrRemoveCssClass('ag-cell-inline-editing', isEditing && !isPopup);\n        cssClassManager.addOrRemoveCssClass('ag-cell-popup-editing', isEditing && isPopup);\n        cssClassManager.addOrRemoveCssClass('ag-cell-not-inline-editing', !isEditing || isPopup);\n        cellCtrl.getRowCtrl()?.setInlineEditingCss(isEditing);\n    });\n\n    // we only do refreshing for JS Comps. for SolidJS, the props will change for the cell renderer.\n    let readyForRefresh = false;\n    createEffect(() => {\n        const details = renderDetails();\n        const isJsCellRenderer = details != null && details.compDetails != null && !details.compDetails.componentFromFramework;\n        if (!isJsCellRenderer) {\n            readyForRefresh = false;\n            return;\n        }\n        if (!readyForRefresh) {\n            readyForRefresh = true;\n            return;\n        }\n\n        if (!cellRenderer) { return; }\n\n        const params = details.compDetails!.params;\n        const result = cellRenderer.refresh ? cellRenderer.refresh(params) : false;\n        if (result != true) {\n            // increasing the render key forces a new instance of ShowRenderDetails,\n            // as we iteration through renderCompVersion, if the contents of\n            // renderCompVersion changes, that maps to a new ShowRenderDetails instance.\n            renderCompVersion++;\n            setRenderCompVersionList([renderCompVersion]);\n        }\n    });\n\n    // we pass in eGui as a function below as eGui is not ready\n    // when the template is built, only after it. so we defer\n    // reading eGui variable until it's needed, after ShowEditDetails\n    // is created.\n    const eGuiFn = () => eGui;\n\n    const bodyJsxFunc = () => (\n        <>\n                <For each={\n                    renderCompVersionList()}>{() =>\n                    <>\n                        { renderDetails() && <ShowRenderDetails \n                            showDetails={renderDetails()!}\n                            ref={cellRenderer}\n                            cellInstanceId={cellInstanceId}\n                            showCellWrapper={showCellWrapper()}\n                            cellCtrl={cellCtrl}\n                            includeDndSource={includeDndSource()}\n                            includeRowDrag={includeRowDrag()}\n                            includeSelection={includeSelection()}\n                            setSelectionCheckboxId={setSelectionCheckboxId}\n                            showTools={showTools()}\n                            setECellValue={setECellValue}\n                        /> }\n                    </>\n                }</For>\n                { editDetails() &&\n                    <ShowEditDetails\n                        editDetails={editDetails()!}\n                        cellCtrl={cellCtrl}\n                        eGuiFn={eGuiFn}\n                        setInlineRef={setInlineEditorRef}\n                        setPopupRef={setPopupEditorRef}\n                    /> \n                }\n        </>);\n\n    return (\n        <div\n            ref={ eGui! }\n            style={ userStyles() }\n            tabIndex={ tabIndex() }\n            role={ cellCtrl.getCellAriaRole() }\n            col-id={ colId() }\n        > {\n            showCellWrapper()\n                ? (\n                    <div class=\"ag-cell-wrapper\" role=\"presentation\" ref={ eCellWrapper! }>\n                        { bodyJsxFunc() }\n                    </div>\n                )\n                : bodyJsxFunc()\n            }\n        </div>\n    );\n}\n\nexport default CellComp;\n","import { CellCtrl, CssClassManager, ICellRenderer, IRowComp, RowContainerType, RowCtrl, RowStyle, UserCompDetails } from 'ag-grid-community';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount } from \"solid-js\";\nimport CellComp from '../cells/cellComp';\nimport UserComp from '../userComps/userComp';\n\ninterface CellCtrls {\n    list: CellCtrl[],\n    instanceIdMap: Map<string, CellCtrl>\n}\n\nconst maintainOrderOnColumns = (prev: CellCtrls, next: CellCtrl[], domOrder: boolean): CellCtrls => {\n    if (domOrder) {\n        const res: CellCtrls = { list: next, instanceIdMap: new Map() };\n        next.forEach(c => res.instanceIdMap.set(c.getInstanceId(), c));\n\n        return res;\n    }\n\n    // if dom order not important, we don't want to change the order\n    // of the elements in the dom, as this would break transition styles\n    const oldCellCtrls: CellCtrl[] = [];\n    const newCellCtrls: CellCtrl[] = [];\n    const newInstanceIdMap: Map<string, CellCtrl> = new Map();\n    const tempMap: Map<string, CellCtrl> = new Map();\n\n    next.forEach(c => tempMap.set(c.getInstanceId(), c));\n\n    prev.list.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (tempMap.has(instanceId)) {\n            oldCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    next.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (!prev.instanceIdMap.has(instanceId)) {\n            newCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    const res: CellCtrls = {\n        list: [...oldCellCtrls, ...newCellCtrls],\n        instanceIdMap: newInstanceIdMap\n    };\n\n    return res;\n}\n\nconst RowComp = (params: {rowCtrl: RowCtrl, containerType: RowContainerType}) => {\n\n    const { rowCtrl, containerType } = params;\n\n    const [getRowIndex, setRowIndex] = createSignal<string>();\n    const [getRowId, setRowId] = createSignal<string>();\n    const [getRowBusinessKey, setRowBusinessKey] = createSignal<string>();\n    const [getTabIndex, setTabIndex] = createSignal<number | undefined>(rowCtrl.getTabIndex());\n    const [getUserStyles, setUserStyles] = createSignal<RowStyle>();\n    const [getCellCtrls, setCellCtrls] = createSignal<CellCtrls>({ list: [], instanceIdMap: new Map() });\n    const [getFullWidthCompDetails, setFullWidthCompDetails] = createSignal<UserCompDetails>();\n    const [getDomOrder, setDomOrder] = createSignal<boolean>(false);\n\n    // these styles have initial values, so element is placed into the DOM with them,\n    // rather than an transition getting applied.\n    const [getTop, setTop] = createSignal<string | undefined>(rowCtrl.getInitialRowTop(containerType));\n    const [getTransform, setTransform] = createSignal<string | undefined>(rowCtrl.getInitialTransform(containerType));\n\n    let eGui: HTMLDivElement;\n    let fullWidthCompRef: ICellRenderer;\n\n    const setFullWidthRef = (newRef: ICellRenderer)=> {\n        fullWidthCompRef = newRef;\n    };\n\n    createEffect(() => {\n        const compDetails = getFullWidthCompDetails();\n        if (!compDetails) { return; }\n\n        let tryCount = 0;\n\n        // puts autoHeight onto full with detail rows. this needs trickery, as we need\n        // the HTMLElement for the provided Detail Cell Renderer. this pattern was copied\n        // from React, it's possible it's not needed here, however given it's hard to be\n        // sure on Solid's async behavious, keeping the patter here.\n        const trySetup = ()=> {\n            const eChild = eGui.firstChild as HTMLElement;\n            if (eChild) {\n                rowCtrl.setupDetailRowAutoHeight(eChild);\n                return;\n            }\n\n            if (tryCount>=10) { return; }\n\n            tryCount++;\n            setTimeout(trySetup, 0);\n        };\n\n        trySetup();\n    });\n\n    onMount(() => {\n        // because React is asychronous, it's possible the RowCtrl is no longer a valid RowCtrl. This can\n        // happen if user calls two API methods one after the other, with the second API invalidating the rows\n        // the first call created. Thus the rows for the first call could still get created even though no longer needed.\n        if (!rowCtrl.isAlive()) {  return; }\n\n        const cssClassManager = new CssClassManager(() => eGui);\n\n        const compProxy: IRowComp = {\n            // the rowTop is managed by state, instead of direct style manipulation by rowCtrl (like all the other styles)\n            // as we need to have an initial value when it's placed into he DOM for the first time, for animation to work.\n            setTop: value => setTop(value),\n            setTransform: value => setTransform(value),\n\n            // i found using React for managing classes at the row level was to slow, as modifying classes caused a lot of\n            // React code to execute, so avoiding React for managing CSS Classes made the grid go much faster.\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setRowIndex: value => setRowIndex(value),\n            setRowId: value => setRowId(value),\n            setRowBusinessKey: value => setRowBusinessKey(value),\n            setUserStyles: (styles: RowStyle) => setUserStyles(styles),\n            // if we don't maintain the order, then cols will be ripped out and into the dom\n            // when cols reordered, which would stop the CSS transitions from working\n            setCellCtrls: next => setCellCtrls(maintainOrderOnColumns(getCellCtrls(), next, getDomOrder())),\n            showFullWidth: compDetails => setFullWidthCompDetails(compDetails),\n            getFullWidthCellRenderer: ()=> fullWidthCompRef,\n            refreshFullWidth: getUpdatedParams => {\n                if (!fullWidthCompRef || !fullWidthCompRef.refresh) {\n                    return false;\n                }\n                return fullWidthCompRef.refresh(getUpdatedParams());\n            }\n        };\n        rowCtrl.setComp(compProxy, eGui, containerType);\n        onCleanup(() => rowCtrl.unsetComp(containerType));\n    });\n\n\n    const getRowStyles = createMemo(() => {\n        const res = { \n            top: getTop(), \n            transform: getTransform(),\n        };\n\n        Object.assign(res, getUserStyles());\n        return res;\n    });\n\n    const isShowCells = createMemo( ()=> getCellCtrls()!=null );\n    const isShowFullWidth = createMemo( ()=> getFullWidthCompDetails()!=null );\n\n    const showCellsJsx = ()=> (\n            <For each={getCellCtrls().list}>{ cellCtrl =>\n                <CellComp\n                        cellCtrl={ cellCtrl }\n                        editingRow={ rowCtrl.isEditing() }\n                        printLayout={ rowCtrl.isPrintLayout() }\n                    />\n            }</For>\n    );\n\n    const showFullWidthJsx = ()=> (\n        <UserComp compDetails={ getFullWidthCompDetails()! } ref={setFullWidthRef}/>\n    );\n\n    return (\n        <div\n            ref={ eGui! }\n            role='row'\n            style={ getRowStyles() }\n            row-index={ getRowIndex() }\n            row-id={ getRowId() }\n            row-business-key={ getRowBusinessKey() }\n            tabIndex={ getTabIndex() }\n        >\n            { isShowFullWidth() && showFullWidthJsx() }\n            { isShowCells() && showCellsJsx() }\n\n        </div>\n    );\n};\n\nexport default RowComp;\n","import { getRowContainerTypeForName, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from 'ag-grid-community';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from '../core/beansContext';\nimport { classesList } from '../core/utils';\nimport RowComp from './rowComp';\n\nconst RowContainerComp = (props: {name: RowContainerName})=> {\n\n    const {context} = useContext(BeansContext);\n\n    const [viewportHeight, setViewportHeight] = createSignal<string>('');\n    const [rowCtrlsOrdered, setRowCtrlsOrdered] = createSignal<RowCtrl[]>([]);\n    const [rowCtrls, setRowCtrls] = createSignal<RowCtrl[]>([]);\n    const [domOrder, setDomOrder] = createSignal<boolean>(false);\n\n    const { name } = props;\n    const containerType = createMemo(() => getRowContainerTypeForName(name));\n\n    let eViewport: HTMLDivElement;\n    let eContainer: HTMLDivElement;\n\n    const cssClasses = createMemo(() => RowContainerCtrl.getRowContainerCssClasses(name));\n    const viewportClasses = createMemo(() => classesList(cssClasses().viewport));\n    const containerClasses = createMemo(() => classesList(cssClasses().container));\n\n    // no need to useMemo for boolean types\n    const centerTemplate = name === RowContainerName.CENTER\n        || name === RowContainerName.TOP_CENTER \n        || name === RowContainerName.BOTTOM_CENTER \n        || name === RowContainerName.STICKY_TOP_CENTER;\n\n    // if domOrder=true, then we just copy rowCtrls into rowCtrlsOrdered observing order,\n    // however if false, then we need to keep the order as they are in the dom, otherwise rowAnimation breaks\n    let rowCtrlsOrderedCopy: RowCtrl[] = [];\n    createEffect(() => {\n        if (domOrder()) {\n            setRowCtrlsOrdered(rowCtrls());\n            return;\n        }\n        // if dom order not important, we don't want to change the order\n        // of the elements in the dom, as this would break transition styles\n        // \n        // we use the rowCtrlsOrderedCopy, to avoid this effect depending on and\n        // setting the same value, hence causing an infinite loop\n        const prev = rowCtrlsOrderedCopy; \n        const oldRows = prev.filter(r => rowCtrls().indexOf(r) >= 0);\n        const newRows = rowCtrls().filter(r => oldRows.indexOf(r) < 0);\n        const next = [...oldRows, ...newRows];\n        setRowCtrlsOrdered(next);\n        rowCtrlsOrderedCopy = next;\n    });\n\n    onMount(() => {\n        const compProxy: IRowContainerComp = {\n            setViewportHeight: setViewportHeight,\n            setRowCtrls: ({ rowCtrls }) => setRowCtrls(rowCtrls),\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setContainerWidth: width => {\n                if (eContainer) {\n                    eContainer.style.width = width;\n                }\n            }\n        };\n\n        const ctrl = context.createBean(new RowContainerCtrl(name));\n        onCleanup(() => context.destroyBean(ctrl));\n\n        ctrl.setComp(compProxy, eContainer, eViewport);\n    });\n\n    const viewportStyle = createMemo(() => ({\n        height: viewportHeight()\n    }));\n\n    const buildContainer = () => (\n        <div\n            class={ containerClasses() }\n            ref={ eContainer }\n            role={ \"rowgroup\" }\n            >\n                <For each={rowCtrlsOrdered()}>{(rowCtrl, i) =>\n                    <RowComp rowCtrl={ rowCtrl } containerType={ containerType() }></RowComp>\n                }</For>\n        </div>\n    );\n\n    return (\n        <>\n            {\n                centerTemplate ?\n                <div class={ viewportClasses() } ref= { eViewport! } role=\"presentation\" style={ viewportStyle() }>\n                    { buildContainer() }\n                </div> :\n                buildContainer()\n            }\n        </>\n    );\n\n};\n\nexport default RowContainerComp;\n","import { GridBodyCtrl, IGridBodyComp, RowContainerName } from 'ag-grid-community';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridHeaderComp from \"./header/gridHeaderComp\";\nimport RowContainerComp from \"./rows/rowContainerComp\";\n\nconst GridBodyComp = () => {\n\n    const {context, agStackComponentsRegistry, resizeObserverService} = useContext(BeansContext);\n\n    const [getRowAnimationClass, setRowAnimationClass] = createSignal<string>('');\n    const [getAriaColCount, setAriaColCount] = createSignal<number>(0);\n    const [getAriaRowCount, setAriaRowCount] = createSignal<number>(0);\n    const [getTopHeight, setTopHeight] = createSignal<number>(0);\n    const [getBottomHeight, setBottomHeight] = createSignal<number>(0);\n    const [getStickyTopHeight, setStickyTopHeight] = createSignal<string>('0px');\n    const [getStickyTopTop, setStickyTopTop] = createSignal<string>('0px');\n    const [getStickyTopWidth, setStickyTopWidth] = createSignal<string>('100%');\n    const [getTopDisplay, setTopDisplay] = createSignal<string>('');\n    const [getBottomDisplay, setBottomDisplay] = createSignal<string>('');\n    const [getBodyViewportWidth, setBodyViewportWidth] = createSignal<string>('');\n\n    const [getMovingCss, setMovingCss] = createSignal<string | null>(null);\n    const [getForceVerticalScrollClass, setForceVerticalScrollClass] = createSignal<string | null>(null);\n    const [getTopAndBottomOverflowY, setTopAndBottomOverflowY] = createSignal<'scroll' | 'hidden' | null>(null);\n    const [getCellSelectableCss, setCellSelectableCss] = createSignal<string | null>(null);\n\n    // we initialise layoutClass to 'ag-layout-normal', because if we don't, the comp will initially\n    // render with no width (as ag-layout-normal sets width to 0, which is needed for flex) which\n    // gives the grid a massive width, which then renders a massive amount of columns. this problem\n    // is due to React been async, for the non-async version (ie when not using React) this is not a\n    // problem as the UI will finish initialising before we set data.\n    const [getLayoutClass, setLayoutClass] = createSignal<string>('ag-layout-normal');\n\n    let eRoot: HTMLDivElement;\n    let eTop: HTMLDivElement;\n    let eStickyTop: HTMLDivElement;\n    let eBody: HTMLDivElement;\n    let eBodyViewport: HTMLDivElement;\n    let eBottom: HTMLDivElement;\n\n    const destroyFuncs: (() => void)[] = [];\n    onCleanup(() => {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount(() => {\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            onCleanup( ()=> context.destroyBean(comp) );\n            return comp;\n        };\n\n        eRoot.appendChild(newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n        eRoot.appendChild(newComp('AG-OVERLAY-WRAPPER').getGui());\n        eBody.appendChild(newComp('AG-FAKE-VERTICAL-SCROLL').getGui());\n\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: setAriaColCount,\n            setRowCount: setAriaRowCount,\n            setTopHeight,\n            setBottomHeight,\n            setStickyTopHeight,\n            setStickyTopTop,\n            setStickyTopWidth,\n            setTopDisplay,\n            setBottomDisplay,\n            setColumnMovingCss: setMovingCss,\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: (cssClass: string | null, flag: boolean) => setCellSelectableCss(flag ? cssClass : null),\n            setBodyViewportWidth: setBodyViewportWidth,\n\n            registerBodyViewportResizeListener: (listener: () => void) => {\n                const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport!, listener);\n                destroyFuncs.push(() => unsubscribeFromResize());\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        onCleanup(() => context.destroyBean(ctrl) );\n\n        // fixme - should not be in a timeout,\n        // was because we need GridHeaderComp to be created first\n        setTimeout(() => \n            ctrl.setComp(\n                compProxy,\n                eRoot,\n                eBodyViewport,\n                eTop,\n                eBottom,\n                eStickyTop\n            ), 0);\n    });\n\n    const getRootClasses = createMemo(() =>\n        classesList('ag-root','ag-unselectable', getMovingCss(), getLayoutClass())\n    );\n    const getBodyClasses = createMemo(() => \n        classesList('ag-body', getLayoutClass())\n    );\n    const getBodyViewportClasses = createMemo(() =>\n        classesList('ag-body-viewport', getRowAnimationClass(), getLayoutClass(), getForceVerticalScrollClass(), getCellSelectableCss())\n    );\n    const getTopClasses = createMemo(() =>\n        classesList('ag-floating-top', getCellSelectableCss())\n    );\n    const getStickyTopClasses = createMemo(() =>\n        classesList('ag-sticky-top', getCellSelectableCss())\n    );\n    const getBottomClasses = createMemo(() =>\n        classesList('ag-floating-bottom', getCellSelectableCss())\n    );\n\n    const getTopStyle : any = createMemo(() => ({\n       height: getTopHeight(),\n        'min-height': getTopHeight(),\n        display: getTopDisplay(),\n        'overflow-y': getTopAndBottomOverflowY()\n    }));\n\n    const getStickyTopStyle = createMemo(() => ({\n        height: getStickyTopHeight(),\n        top: getStickyTopTop(),\n        width: getStickyTopWidth()\n    }));\n\n    const getBottomStyle: any = createMemo(() => ({\n        height: getBottomHeight(),\n        'min-height': getBottomHeight(),\n        display: getBottomDisplay(),\n        'overflow-y': getTopAndBottomOverflowY()\n    }));\n\n    const getBodyViewportStyle = createMemo(() => ({\n        width: getBodyViewportWidth()\n    }));\n\n\n\n    return (\n        <div ref={ eRoot! } class={ getRootClasses() } role=\"treegrid\" aria-colcount={ getAriaColCount() } aria-rowcount={ getAriaRowCount() }>\n            <GridHeaderComp/>\n            <div ref={ eTop! } class={ getTopClasses() } role=\"presentation\" style={ getTopStyle() }>\n                <RowContainerComp name={ RowContainerName.TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.TOP_FULL_WIDTH } />\n            </div>\n            <div class={getBodyClasses()} ref={eBody!} role=\"presentation\">\n                <div ref={ eBodyViewport! } class={ getBodyViewportClasses() } role=\"presentation\" style={ getBodyViewportStyle() }>\n                    <RowContainerComp name={ RowContainerName.LEFT } />\n                    <RowContainerComp name={ RowContainerName.CENTER } />\n                    <RowContainerComp name={ RowContainerName.RIGHT } />\n                    <RowContainerComp name={ RowContainerName.FULL_WIDTH } />\n                </div>\n            </div>\n            <div ref={ eStickyTop! } class={ getStickyTopClasses() } role=\"presentation\" style={ getStickyTopStyle() }>\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_FULL_WIDTH } />\n            </div>\n            <div ref={ eBottom! } class={ getBottomClasses() } role=\"presentation\" style={ getBottomStyle() }>\n                <RowContainerComp name={ RowContainerName.BOTTOM_LEFT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_CENTER } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_RIGHT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_FULL_WIDTH } />\n            </div>\n        </div>\n    );\n};\n\nexport default GridBodyComp;\n","import { GridCtrl, ITabGuard, TabGuardClassNames, TabGuardCtrl } from 'ag-grid-community';\nimport { createSignal, JSX, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from \"./core/beansContext\";\n\ninterface TabGuardProps {\n    children: JSX.Element,\n    eFocusableElement: HTMLDivElement,\n    gridCtrl: GridCtrl,\n    forceFocusOutWhenTabGuardsAreEmpty?: boolean;\n    onTabKeyDown: (e: KeyboardEvent) => void,\n    ref: (ref: TabGuardRef)=>void\n}\n\nexport interface TabGuardRef {\n    forceFocusOutOfContainer(up?: boolean): void;\n}\n\nconst TabGuardComp = (props: TabGuardProps)=> {\n\n    const { children, eFocusableElement, onTabKeyDown, gridCtrl, forceFocusOutWhenTabGuardsAreEmpty } = props;\n    const [tabIndex, setTabIndex] = createSignal<number>();\n\n    let eTopGuard: HTMLDivElement;\n    let eBottomGuard: HTMLDivElement;\n    let ctrl: TabGuardCtrl;\n\n    const { context } = useContext(BeansContext);\n\n    onMount(() => {\n\n        const compProxy: ITabGuard = {\n            setTabIndex: value => value == null ? setTabIndex(undefined) : setTabIndex(parseInt(value, 10))\n        }\n\n        ctrl = context.createBean(new TabGuardCtrl({\n            comp: compProxy,\n            eTopGuard: eTopGuard,\n            eBottomGuard: eBottomGuard,\n            eFocusableElement: eFocusableElement,\n            onTabKeyDown: onTabKeyDown,\n            forceFocusOutWhenTabGuardsAreEmpty: forceFocusOutWhenTabGuardsAreEmpty,\n            focusInnerElement: fromBottom => gridCtrl.focusInnerElement(fromBottom)\n        }));\n\n        props.ref({\n            forceFocusOutOfContainer(up?: boolean) {\n                ctrl.forceFocusOutOfContainer(up);\n            }\n        });\n    });\n\n    onCleanup(() => context.destroyBean(ctrl) );\n\n    return (\n        <>\n            <div class={ `${TabGuardClassNames.TAB_GUARD} ${TabGuardClassNames.TAB_GUARD_TOP}` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eTopGuard! }></div>\n\n            { children }\n\n            <div class={ `${TabGuardClassNames.TAB_GUARD} ${TabGuardClassNames.TAB_GUARD_BOTTOM}` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eBottomGuard! }></div>\n        </>\n    )\n};\n\nexport default TabGuardComp;","import {\n    Context,\n    FocusService,\n    GridCtrl,\n    IGridComp\n} from 'ag-grid-community';\nimport { createMemo, createSignal, onCleanup, onMount } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridBodyComp from './gridBodyComp';\nimport TabGuardComp, { TabGuardRef } from './tabGuardComp';\n\nconst GridComp = (props: {context: Context, class?: string})=> {\n\n    const [rtlClass, setRtlClass] = createSignal<string>('');\n    const [keyboardFocusClass, setKeyboardFocusClass] = createSignal<string>('');\n    const [layoutClass, setLayoutClass] = createSignal<string>('');\n    const [cursor, setCursor] = createSignal<string | null>(null);\n    const [userSelect, setUserSelect] = createSignal<string | null>(null);\n    const [initialised, setInitialised] = createSignal<boolean>(false);\n\n    const {context} = props;\n    const beans = context.getBean('beans');\n\n    let tabGuardRef: TabGuardRef;\n    const setTabGuardRef = (newRef: TabGuardRef)=> {\n        tabGuardRef = newRef;\n        tabGuardRef && tabGuardReady();\n    };\n\n    let eGui: HTMLDivElement;\n    let eBody: HTMLDivElement;\n    let gridCtrl: GridCtrl;\n\n    const onTabKeyDown = () => undefined;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    const tabGuardReady = ()=> {\n\n        const beansToDestroy: any[] = [];\n\n        const {agStackComponentsRegistry} = beans;\n\n        const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n        const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n        const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n        const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n        const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n        const additionalEls: HTMLDivElement[] = [];\n\n        if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n            const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n            const el = headerDropZonesComp.getGui();\n            eGui.insertAdjacentElement('afterbegin', el);\n            additionalEls.push(el);\n            beansToDestroy.push(headerDropZonesComp);\n        }\n\n        if (gridCtrl.showSideBar() && SideBarClass) {\n            const sideBarComp = context.createBean(new SideBarClass());\n            const el = sideBarComp.getGui();\n            const bottomTabGuard = eBody.querySelector('.ag-tab-guard-bottom');\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', el);\n                additionalEls.push(el);\n            }\n\n            beansToDestroy.push(sideBarComp);\n        }\n\n        if (gridCtrl.showStatusBar() && StatusBarClass) {\n            const statusBarComp = context.createBean(new StatusBarClass());\n            const el = statusBarComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(statusBarComp);\n        }\n\n        if (PaginationClass) {\n            const paginationComp = context.createBean(new PaginationClass());\n            const el = paginationComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(paginationComp);\n        }\n\n        if (gridCtrl.showWatermark() && WatermarkClass) {\n            const watermarkComp = context.createBean(new WatermarkClass());\n            const el = watermarkComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(watermarkComp);\n        }\n\n        destroyFuncs.push( ()=> {\n            context.destroyBeans(beansToDestroy);\n            additionalEls.forEach(el => {\n                if (el.parentElement) {\n                    el.parentElement.removeChild(el);\n                }\n            });\n        });\n    };\n\n    onMount(() => {\n        gridCtrl = context.createBean(new GridCtrl());\n        destroyFuncs.push( ()=> context.destroyBean(gridCtrl) );\n\n        const compProxy: IGridComp = {\n            destroyGridUi:\n                () => {}, // do nothing, as framework users destroy grid by removing the comp\n            setRtlClass: setRtlClass,\n            forceFocusOutOfContainer: (up?: boolean) => {\n                tabGuardRef && tabGuardRef.forceFocusOutOfContainer(up);\n            },\n            updateLayoutClasses: setLayoutClass,\n            getFocusableContainers: () => {\n                const els: HTMLElement[] = [];\n\n                const gridBodyCompEl = eGui.querySelector('.ag-root');\n                const sideBarEl = eGui.querySelector('.ag-side-bar:not(.ag-hidden)');\n\n                if (gridBodyCompEl) {\n                    els.push(gridBodyCompEl as HTMLElement);\n                }\n\n                if (sideBarEl) {\n                    els.push(sideBarEl as HTMLElement);\n                }\n\n                return els;\n            },\n            setCursor,\n            setUserSelect\n        };\n\n        gridCtrl.setComp(compProxy, eGui, eGui);\n        setInitialised(true);\n    });\n    \n    const cssClasses = createMemo( () => classesList('ag-root-wrapper', rtlClass(), keyboardFocusClass(), layoutClass(), props.class) );\n    const bodyCssClasses = createMemo( () => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass()));\n\n    const topStyle: any = createMemo( () => ({\n        userSelect: userSelect != null ? userSelect() : '',\n        WebkitUserSelect: userSelect != null ? userSelect() : '',\n        cursor: cursor != null ? cursor() : ''\n    }));\n\n    return (\n        <div ref={ eGui! } class={ cssClasses() } style={ topStyle() }>\n            <div class={ bodyCssClasses() } ref={ eBody! }>\n                { initialised() &&\n                    // we wait for initialised before rending the children, so GridComp has created and registered with it's\n                    // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n                    // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n                    // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n                    // hangs the UI)\n                    <BeansContext.Provider value={beans}>\n                        <TabGuardComp\n                            ref={ setTabGuardRef }\n                            eFocusableElement= { eGui! }\n                            onTabKeyDown={ onTabKeyDown }\n                            gridCtrl={ gridCtrl! }\n                            forceFocusOutWhenTabGuardsAreEmpty={ true }>\n                            <GridBodyComp/>\n                        </TabGuardComp>\n                    </BeansContext.Provider>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default GridComp;","import {ColumnApi, ComponentUtil, Context, CtrlsService, GridApi, GridCoreCreator, GridOptions, GridParams, Module} from 'ag-grid-community';\nimport {createEffect, createSignal, For, onCleanup, onMount} from \"solid-js\";\nimport {Portal} from 'solid-js/web';\nimport SolidCompWrapperFactory from './core/solidCompWrapperFactory';\nimport {SolidFrameworkOverrides} from './core/solidFrameworkOverrides';\nimport GridComp from './gridComp';\n\nexport interface AgGridSolidRef {\n    api: GridApi;\n    /** @deprecated v31 - The `columnApi` has been deprecated and all the methods are now present of the `api`. */\n    columnApi: ColumnApi;\n}\n\nexport interface AgGridSolidProps extends GridOptions {\n    gridOptions?: GridOptions;\n    ref?: AgGridSolidRef | ((ref: AgGridSolidRef) => void);\n    modules?: Module[];\n    class?: string;\n}\n\nexport interface PortalInfo {\n    mount: HTMLElement;\n    SolidClass: any;\n    props: any;\n    ref: (instance: any) => void;\n}\n\nexport interface PortalManager {\n    addPortal(info: PortalInfo): void;\n\n    removePortal(info: PortalInfo): void;\n}\n\nconst AgGridSolid = (props: AgGridSolidProps) => {\n    let eGui: HTMLDivElement;\n    let api: GridApi;\n\n    const [context, setContext] = createSignal<Context>();\n    const [getPortals, setPortals] = createSignal<PortalInfo[]>([]);\n\n    const destroyFuncs: (() => void)[] = [];\n    onCleanup(() => {\n        destroyFuncs.forEach(f => f());\n        destroyFuncs.length = 0;\n    });\n\n    // we check for property changes. to get things started, we take a copy\n    // of all the properties at the start, and then compare against this for\n    // changes.\n    const propsCopy: any = {};\n    Object.keys(props).forEach(key => propsCopy[key] = (props as any)[key]);\n\n    createEffect(() => {\n        const keys = Object.keys(props);\n        const changes: { [key: string]: { currentValue: any, previousValue: any } } = {};\n        let changesExist = false;\n\n        keys.forEach(key => {\n            // this line reads from the prop, which in turn makes\n            // this prop a dependency for the effect.\n            const currentValue = (props as any)[key];\n\n            const previousValue = propsCopy[key];\n            if (previousValue !== currentValue) {\n                changes[key] = currentValue;\n                propsCopy[key] = currentValue;\n                changesExist = true;\n            }\n        });\n\n        if (changesExist) {\n            ComponentUtil.processOnChange(changes, api!);\n        }\n    });\n\n    onMount(() => {\n\n        const modules = props.modules || [];\n\n        const portalManager: PortalManager = {\n            addPortal: info => {\n                setPortals([...getPortals(), info]);\n            },\n            removePortal: info => {\n                setPortals(getPortals().filter(item => item != info));\n            }\n        };\n\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new SolidCompWrapperFactory(portalManager)\n            },\n            modules,\n            frameworkOverrides: new SolidFrameworkOverrides()\n        };\n\n        const gridOptions = ComponentUtil.combineAttributesAndGridOptions(props.gridOptions, props);\n\n        const createUiCallback = (context: Context) => {\n            setContext(context);\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                const refCallback = props.ref && (props.ref as (ref: AgGridSolidRef) => void);\n                if (refCallback) {\n                    const gridRef: AgGridSolidRef = {\n                        api: api!,\n                        columnApi: new ColumnApi(api!)\n                    };\n                    refCallback(gridRef);\n                }\n                destroyFuncs.push(() => api!.destroy());\n            });\n        };\n\n        const acceptChangesCallback = () => {\n            // todo, what goes here?\n        };\n\n        const gridCoreCreator = new GridCoreCreator();\n        api = gridCoreCreator.create(eGui, gridOptions, createUiCallback, acceptChangesCallback, gridParams);\n    });\n\n    return (\n        <div ref={eGui!} style={{height: '100%'}}>\n            {context() &&\n                <GridComp class={props.class} context={context()!}></GridComp>\n            }\n            <For each={getPortals()}>{(info, i) =>\n                <Portal mount={info.mount}>\n                    <info.SolidClass {...info.props} ref={info.ref}/>\n                </Portal>\n            }</For>\n        </div>\n    );\n}\n\nexport default AgGridSolid;\n","import AgGridSolid from \"./grid/agGridSolid\";\nexport default AgGridSolid;\n\nexport * from \"./grid/agGridSolid\";\n\n// /* @refresh reload */\n// import { render } from 'solid-js/web';\n//\n// import './index.css';\n// import App from './sampleApp/App';\n//\n// render(() => <App />, document.getElementById('root') as HTMLElement);\n"],"names":["SolidCompWrapper","constructor","SolidCompClass","portalManager","init","props","eGui","document","createElement","className","portalInfo","mount","SolidClass","ref","instance","addPortal","destroy","removePortal","getGui","hasMethod","name","getFrameworkComponentInstance","callMethod","args","apply","addMethod","callback","SolidCompWrapperFactory","BaseComponentWrapper","createWrapper","SolidComponentClass","BeansContext","createContext","classesList","list","filtered","filter","s","join","CssClasses","classesMap","initialClasses","forEach","setClass","on","nothingHasChanged","res","toString","Object","keys","key","DetailCellRenderer","ctrlsFactory","context","gridOptionsService","resizeObserverService","clientSideRowModel","serverSideRowModel","useContext","getCssClasses","setCssClasses","createSignal","getGridCssClasses","setGridCssClasses","getDetailGridOptions","setDetailGridOptions","getDetailRowData","setDetailRowData","ctrl","eGuiRef","getCssClassesStr","createMemo","getGridCssClassesStr","refresh","onMount","template","console","warn","compProxy","addOrRemoveCssClass","addOrRemoveDetailGridCssClass","setDetailGrid","gridOptions","setRowData","rowData","getInstance","createBean","resizeObserverDestroyFunc","get","checkRowSizeFunc","clientHeight","updateRowHeightFunc","node","setRowHeight","onRowHeightChanged","setTimeout","observeResize","destroyBean","setRef","registerDetailWithMaster","api","columnApi","_el$","_tmpl$","_ref$","_$use","_$insert","_c$","_$memo","_$createComponent","AgGridSolid","_$mergeProps","class","_$effect","_$className","JsUserComp","p","promise","compDetails","newAgStackInstance","comp","resolveNow","x","gui","onCleanup","undefined","SolidUserComp","componentClass","refSet","params","UserComp","showSolidComp","details","componentFromFramework","showJsComp","r$","_c$2","_ref$2","GroupCellRenderer","eValueRef","eCheckboxRef","eExpandedRef","eContractedRef","role","getInnerCompDetails","setInnerCompDetails","getChildCount","setChildCount","getValue","setValue","getExpandedCssClasses","setExpandedCssClasses","getContractedCssClasses","setContractedCssClasses","getCheckboxCssClasses","setCheckboxCssClasses","setInnerRenderer","valueToDisplay","escapedValue","_","escapeString","count","setContractedDisplayed","displayed","setExpandedDisplayed","setCheckboxVisible","visible","GroupCellRendererCtrl","setAttribute","getCellAriaRole","getClassName","getExpandedClassName","getContractedClassName","getCheckboxClassName","isShowUserComp","isShowValue","_el$2","firstChild","_el$3","nextSibling","_el$4","_el$5","_el$6","_$spread","colDef","_ref$3","_ref$4","_ref$5","_p$","_v$","_v$2","_v$3","e","t","a","SolidFrameworkOverrides","VanillaFrameworkOverrides","frameworkComponents","agGroupCellRenderer","agGroupRowRenderer","agDetailCellRenderer","frameworkComponent","isFrameworkComponent","prototype","isJsComp","HeaderCellComp","getWidth","setWidth","getColId","setColId","getAriaSort","setAriaSort","getUserCompDetails","setUserCompDetails","eResize","eHeaderCompWrapper","userComp","cssClassManager","CssClassManager","width","sort","getUserCompInstance","setComp","selectAllGui","getSelectAllGui","insertAdjacentElement","setDragSource","style","_$style","_$setAttribute","HeaderFilterCellComp","getCssBodyClasses","setBodyCssClasses","getCssButtonWrapperClasses","setButtonWrapperCssClasses","getButtonWrapperAriaHidden","setButtonWrapperAriaHidden","eFloatingFilterBody","eButtonWrapper","eButtonShowMainFilter","alreadyResolved","userCompResolve","userCompPromise","AgPromise","resolve","value","prev","addOrRemoveBodyCssClass","setButtonWrapperDisplayed","setCompDetails","getFloatingFilterComp","setMenuIcon","eIcon","appendChild","getStyle","getCssClassesString","getBodyCssClassesString","getButtonWrapperCssClassesString","_v$4","_v$5","o","i","HeaderGroupCellComp","getCssResizableClasses","setResizableCssClasses","getResizableAriaHidden","setResizableAriaHidden","getAriaExpanded","setAriaExpanded","setResizableDisplayed","expanded","createEffect","userCompDetails","getResizableClassName","_v$6","n","HeaderRowComp","getHeight","setHeight","getTop","setTop","getAriaRowIndex","setAriaRowIndex","getCellCtrls","setCellCtrls","setCellCtrlsMaintainOrder","next","isEnsureDomOrder","isPrintLayout","isDomLayout","prevMap","mapById","c","getInstanceId","nextMap","oldCtrlsWeAreKeeping","has","newCtrls","nextOrderMaintained","height","top","setHeaderCtrls","ctrls","cssClasses","getHeaderRowClass","createCellJsx","cellCtrl","getType","HeaderRowType","COLUMN_GROUP","FLOATING_FILTER","For","each","children","HeaderRowContainerComp","getAriaHidden","setAriaHidden","getCenterContainerWidth","setCenterContainerWidth","getPinnedContainerWidth","setPinnedContainerWidth","getHeaderRowCtrls","setHeaderRowCtrls","pinnedLeft","pinned","pinnedRight","centre","destroyFuncs","f","length","setDisplayed","setCtrls","setCenterWidth","setViewportScrollLeft","left","scrollLeft","HeaderRowContainerCtrl","push","insertRowsJsx","eCenterContainerStyle","ePinnedStyle","_tmpl$2","_v$7","_v$8","GridHeaderComp","setHeightAndMinHeight","GridHeaderCtrl","PopupEditorComp","popupService","localeService","editDetails","eParentCell","useModelPopup","wrapper","PopupEditorWrapper","ePopupGui","positionParams","column","getColumn","rowNode","getRowNode","type","eventSource","ePopup","position","popupPosition","keepWithinBounds","positionCallback","positionPopupByComponent","bind","translate","getLocaleTextFunc","addPopupRes","addPopup","modal","eChild","closeOnEsc","closedCallback","onPopupEditorClosed","anchorToElement","ariaLabel","hideEditorPopup","hideFunc","Portal","ShowEditDetails","getCompDetails","inPopup","popup","eGuiFn","setPopupRef","setInlineRef","ToolsComp","CompWrapper","innerProps","createFn","includeSelection","checkboxSelectionComp","createSelectionCheckbox","setSelectionCheckboxId","getCheckboxId","includeDndSource","createDndSource","_c$3","includeRowDrag","createRowDragComp","ShowRenderDetails","showDetails","isNoCompDetails","valueForNoCellRenderer","bodyJsxFunc","_c$4","_c$5","_c$6","showTools","_c$7","showCellWrapper","setECellValue","cellInstanceId","checkCellEditorDeprecations","cellEditor","col","isPopup","msg","doOnce","getPopupPosition","CellComp","printLayout","editingRow","renderDetails","setRenderDetails","setEditDetails","renderCompVersion","renderCompVersionList","setRenderCompVersionList","userStyles","setUserStyles","tabIndex","setTabIndex","getTabIndex","colId","getColumnIdSanitised","selectionCheckboxId","setIncludeSelection","setIncludeRowDrag","setIncludeDndSource","forceWrapper","isForceWrapper","eCellWrapper","eCellValue","val","cellRenderer","setEditorRef","editingCancelledByUserComp","isCancelBeforeStart","stopEditing","focusCell","refAny","afterGuiAttached","setPopupEditorRef","setInlineEditorRef","styles","getFocusableElement","include","getCellEditor","getCellRenderer","getParentOfValue","force","isEditing","getRowCtrl","setInlineEditingCss","readyForRefresh","isJsCellRenderer","result","maintainOrderOnColumns","domOrder","instanceIdMap","Map","set","oldCellCtrls","newCellCtrls","newInstanceIdMap","tempMap","instanceId","RowComp","rowCtrl","containerType","getRowIndex","setRowIndex","getRowId","setRowId","getRowBusinessKey","setRowBusinessKey","getUserStyles","getFullWidthCompDetails","setFullWidthCompDetails","getDomOrder","setDomOrder","getInitialRowTop","getTransform","setTransform","getInitialTransform","fullWidthCompRef","setFullWidthRef","newRef","tryCount","trySetup","setupDetailRowAutoHeight","isAlive","showFullWidth","getFullWidthCellRenderer","refreshFullWidth","getUpdatedParams","unsetComp","getRowStyles","transform","assign","isShowCells","isShowFullWidth","showCellsJsx","showFullWidthJsx","RowContainerComp","viewportHeight","setViewportHeight","rowCtrlsOrdered","setRowCtrlsOrdered","rowCtrls","setRowCtrls","getRowContainerTypeForName","eViewport","eContainer","RowContainerCtrl","getRowContainerCssClasses","viewportClasses","viewport","containerClasses","container","centerTemplate","RowContainerName","CENTER","TOP_CENTER","BOTTOM_CENTER","STICKY_TOP_CENTER","rowCtrlsOrderedCopy","oldRows","r","indexOf","newRows","setContainerWidth","viewportStyle","buildContainer","GridBodyComp","agStackComponentsRegistry","getRowAnimationClass","setRowAnimationClass","getAriaColCount","setAriaColCount","getAriaRowCount","setAriaRowCount","getTopHeight","setTopHeight","getBottomHeight","setBottomHeight","getStickyTopHeight","setStickyTopHeight","getStickyTopTop","setStickyTopTop","getStickyTopWidth","setStickyTopWidth","getTopDisplay","setTopDisplay","getBottomDisplay","setBottomDisplay","getBodyViewportWidth","setBodyViewportWidth","getMovingCss","setMovingCss","getForceVerticalScrollClass","setForceVerticalScrollClass","getTopAndBottomOverflowY","setTopAndBottomOverflowY","getCellSelectableCss","setCellSelectableCss","getLayoutClass","setLayoutClass","eRoot","eTop","eStickyTop","eBody","eBodyViewport","eBottom","newComp","tag","CompClass","getComponentClass","setRowAnimationCssOnBodyViewport","setColumnCount","setRowCount","setColumnMovingCss","updateLayoutClasses","setAlwaysVerticalScrollClass","setPinnedTopBottomOverflowY","cssClass","flag","registerBodyViewportResizeListener","listener","unsubscribeFromResize","GridBodyCtrl","getRootClasses","getBodyClasses","getBodyViewportClasses","getTopClasses","getStickyTopClasses","getBottomClasses","getTopStyle","display","getStickyTopStyle","getBottomStyle","getBodyViewportStyle","TOP_LEFT","TOP_RIGHT","TOP_FULL_WIDTH","LEFT","RIGHT","FULL_WIDTH","STICKY_TOP_LEFT","STICKY_TOP_RIGHT","STICKY_TOP_FULL_WIDTH","_ref$6","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_FULL_WIDTH","_v$9","_v$10","_v$11","_v$12","h","d","l","u","TabGuardComp","eFocusableElement","onTabKeyDown","gridCtrl","forceFocusOutWhenTabGuardsAreEmpty","eTopGuard","eBottomGuard","parseInt","TabGuardCtrl","focusInnerElement","fromBottom","forceFocusOutOfContainer","up","TabGuardClassNames","TAB_GUARD","TAB_GUARD_TOP","TAB_GUARD_BOTTOM","GridComp","rtlClass","setRtlClass","keyboardFocusClass","setKeyboardFocusClass","layoutClass","cursor","setCursor","userSelect","setUserSelect","initialised","setInitialised","beans","getBean","tabGuardRef","setTabGuardRef","tabGuardReady","beansToDestroy","HeaderDropZonesClass","SideBarClass","StatusBarClass","WatermarkClass","PaginationClass","additionalEls","showDropZones","headerDropZonesComp","el","showSideBar","sideBarComp","bottomTabGuard","querySelector","showStatusBar","statusBarComp","paginationComp","showWatermark","watermarkComp","destroyBeans","parentElement","removeChild","GridCtrl","destroyGridUi","getFocusableContainers","els","gridBodyCompEl","sideBarEl","bodyCssClasses","topStyle","WebkitUserSelect","Provider","setContext","getPortals","setPortals","propsCopy","changes","changesExist","currentValue","previousValue","ComponentUtil","processOnChange","modules","info","item","gridParams","providedBeanInstances","frameworkComponentWrapper","frameworkOverrides","combineAttributesAndGridOptions","createUiCallback","ctrlsService","CtrlsService","NAME","whenReady","refCallback","gridRef","ColumnApi","acceptChangesCallback","gridCoreCreator","GridCoreCreator","create","setProperty"],"mappings":";;;;AAGe,MAAMA,gBAAgB,CAA+B;AAUhEC,EAAAA,WAAWA,CAACC,cAAmB,EAAEC,aAA4B,EAAE;IAC3D,IAAI,CAACD,cAAc,GAAGA,cAAc,CAAA;IACpC,IAAI,CAACC,aAAa,GAAGA,aAAa,CAAA;AACtC,GAAA;EAEOC,IAAIA,CAACC,KAAU,EAAQ;IAC1B,IAAI,CAACC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;AACzC,IAAA,IAAI,CAACF,IAAI,CAACG,SAAS,GAAG,oBAAoB,CAAA;IAC1C,IAAI,CAACC,UAAU,GAAG;MACdC,KAAK,EAAE,IAAI,CAACL,IAAI;MAChBM,UAAU,EAAE,IAAI,CAACV,cAAc;MAC/BG,KAAK;MACLQ,GAAG,EAAEC,QAAQ,IAAI;QACb,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAA;AAC5B,OAAA;KACH,CAAA;IACD,IAAI,CAACX,aAAa,CAACY,SAAS,CAAC,IAAI,CAACL,UAAU,CAAC,CAAA;AACjD,GAAA;AAEOM,EAAAA,OAAOA,GAAS;AACnB,IAAA,IAAI,CAACN,UAAU,IAAI,IAAI,CAACP,aAAa,CAACc,YAAY,CAAC,IAAI,CAACP,UAAU,CAAC,CAAA;AACvE,GAAA;AAEOQ,EAAAA,MAAMA,GAAgB;IACzB,OAAO,IAAI,CAACZ,IAAI,CAAA;AACpB,GAAA;EAEOa,SAASA,CAACC,IAAY,EAAW;AACpC,IAAA,OAAO,IAAI,CAACN,QAAQ,CAACM,IAAI,CAAC,IAAI,IAAI,CAAA;AACtC,GAAA;AAEOC,EAAAA,6BAA6BA,GAAQ;IACxC,OAAO,IAAI,CAACP,QAAQ,CAAA;AACxB,GAAA;AAEOQ,EAAAA,UAAUA,CAACF,IAAY,EAAEG,IAAgB,EAAQ;AACpD,IAAA,OAAO,IAAI,CAACT,QAAQ,CAACM,IAAI,CAAC,CAACI,KAAK,CAAC,IAAI,CAACV,QAAQ,EAAES,IAAI,CAAC,CAAA;AACzD,GAAA;AAEOE,EAAAA,SAASA,CAACL,IAAY,EAAEM,QAAkB,EAAQ;AACpD,IAAA,IAAI,CAASN,IAAI,CAAC,GAAGM,QAAQ,CAAA;AAClC,GAAA;AAEJ;;ACpDe,MAAMC,uBAAuB,SAASC,oBAAoB,CAA0D;EAI/H3B,WAAWA,CAACE,aAA4B,EAAE;AACtC,IAAA,KAAK,EAAE,CAAA;IACP,IAAI,CAACA,aAAa,GAAGA,aAAa,CAAA;AACtC,GAAA;EAEA0B,aAAaA,CAACC,mBAAwB,EAAsB;IACxD,OAAO,IAAI9B,gBAAgB,CAAC8B,mBAAmB,EAAE,IAAI,CAAC3B,aAAa,CAAC,CAAA;AACxE,GAAA;AACJ;;ACbO,MAAM4B,YAAY,GAAGC,aAAa,CAAQ,EAAW,CAAC;;ACHtD,MAAMC,WAAW,GAAGA,CAAC,GAAGC,IAAmC,KAAa;AAC3E,EAAA,MAAMC,QAAQ,GAAGD,IAAI,CAACE,MAAM,CAAEC,CAAC,IAAIA,CAAC,IAAI,IAAI,IAAIA,CAAC,KAAK,EAAE,CAAC,CAAA;AAEzD,EAAA,OAAOF,QAAQ,CAACG,IAAI,CAAC,GAAG,CAAC,CAAA;AAC7B,CAAC,CAAA;AAEM,MAAMC,UAAU,CAAC;EAEZC,UAAU,GAA8B,EAAE,CAAA;EAElDvC,WAAWA,CAAC,GAAGwC,cAAwB,EAAE;AACrCA,IAAAA,cAAc,CAACC,OAAO,CAACjC,SAAS,IAAI;AAChC,MAAA,IAAI,CAAC+B,UAAU,CAAC/B,SAAS,CAAC,GAAG,IAAI,CAAA;AACrC,KAAC,CAAC,CAAA;AACN,GAAA;AAEOkC,EAAAA,QAAQA,CAAClC,SAAiB,EAAEmC,EAAW,EAAc;AACxD;AACA;IACA,MAAMC,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAACL,UAAU,CAAC/B,SAAS,CAAC,IAAImC,EAAE,CAAA;AAC5D,IAAA,IAAIC,iBAAiB,EAAE;AAAE,MAAA,OAAO,IAAI,CAAA;AAAE,KAAA;AAEtC,IAAA,MAAMC,GAAG,GAAG,IAAIP,UAAU,EAAE,CAAA;IAC5BO,GAAG,CAACN,UAAU,GAAG;AAAC,MAAA,GAAG,IAAI,CAACA,UAAAA;KAAW,CAAA;AACrCM,IAAAA,GAAG,CAACN,UAAU,CAAC/B,SAAS,CAAC,GAAGmC,EAAE,CAAA;AAC9B,IAAA,OAAOE,GAAG,CAAA;AACd,GAAA;AAEOC,EAAAA,QAAQA,GAAW;IACtB,MAAMD,GAAG,GAAGE,MAAM,CAACC,IAAI,CAAC,IAAI,CAACT,UAAU,CAAC,CAACJ,MAAM,CAACc,GAAG,IAAI,IAAI,CAACV,UAAU,CAACU,GAAG,CAAC,CAAC,CAACZ,IAAI,CAAC,GAAG,CAAC,CAAA;AACtF,IAAA,OAAOQ,GAAG,CAAA;AACd,GAAA;AAEJ;;;AC3BA,MAAMK,kBAAkB,GAAI9C,KAAgC,IAAK;EAE7D,MAAM;IAAC+C,YAAY;IAAEC,OAAO;IACxBC,kBAAkB;IAAEC,qBAAqB;IACrCC,kBAAkB;AAAEC,IAAAA,kBAAAA;AAAkB,GAAC,GAAGC,UAAU,CAAC3B,YAAY,CAAC,CAAA;AAE1E,EAAA,MAAM,CAAC4B,aAAa,EAAEC,aAAa,CAAC,GAAGC,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;AACjF,EAAA,MAAM,CAACuB,iBAAiB,EAAEC,iBAAiB,CAAC,GAAGF,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;EACzF,MAAM,CAACyB,oBAAoB,EAAEC,oBAAoB,CAAC,GAAGJ,YAAY,EAAe,CAAA;EAChF,MAAM,CAACK,gBAAgB,EAAEC,gBAAgB,CAAC,GAAGN,YAAY,EAAS,CAAA;AAElE,EAAA,IAAIO,IAA6B,CAAA;AACjC,EAAA,IAAIC,OAAuB,CAAA;AAE3B,EAAA,MAAMC,gBAAgB,GAAGC,UAAU,CAAC,MAAMZ,aAAa,EAAE,CAACZ,QAAQ,EAAE,GAAG,iBAAiB,CAAC,CAAA;AACzF,EAAA,MAAMyB,oBAAoB,GAAGD,UAAU,CAAC,MAAMT,iBAAiB,EAAE,CAACf,QAAQ,EAAE,GAAG,kBAAkB,CAAC,CAAA;EAEjG1C,KAAK,CAASQ,GAAG,CAAE,OAAO;AACvB;AACA4D,IAAAA,OAAOA,GAAG;AAAE,MAAA,OAAOL,IAAI,CAACK,OAAO,EAAE,CAAA;AAAE,KAAA;AACvC,GAAC,CAAC,CAAC,CAAA;AAEHC,EAAAA,OAAO,CAAC,MAAM;IACV,IAAIrE,KAAK,CAACsE,QAAQ,IAAI,OAAOtE,KAAK,CAACsE,QAAQ,KAAK,QAAQ,EAAE;AACtDC,MAAAA,OAAO,CAACC,IAAI,CAAC,wNAAwN,CAAC,CAAA;AAC1O,KAAA;AAEA,IAAA,MAAMC,SAA8B,GAAG;AACnCC,MAAAA,mBAAmB,EAAEA,CAAC3D,IAAY,EAAEwB,EAAW,KAAKgB,aAAa,CAACD,aAAa,EAAE,CAAChB,QAAQ,CAACvB,IAAI,EAAEwB,EAAE,CAAC,CAAC;AACrGoC,MAAAA,6BAA6B,EAAEA,CAAC5D,IAAY,EAAEwB,EAAW,KAAKmB,iBAAiB,CAACD,iBAAiB,EAAE,CAACnB,QAAQ,CAACvB,IAAI,EAAEwB,EAAE,CAAC,CAAC;AACvHqC,MAAAA,aAAa,EAAEC,WAAW,IAAIjB,oBAAoB,CAACiB,WAAW,CAAC;AAC/DC,MAAAA,UAAU,EAAEC,OAAO,IAAIjB,gBAAgB,CAACiB,OAAO,CAAC;MAChDlE,MAAM,EAAEA,MAAMmD,OAAAA;KACjB,CAAA;AAEDD,IAAAA,IAAI,GAAGhB,YAAY,CAACiC,WAAW,CAAC,oBAAoB,CAA4B,CAAA;IAChF,IAAI,CAACjB,IAAI,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAC;AACtBf,IAAAA,OAAO,CAACiC,UAAU,CAAClB,IAAI,CAAC,CAAA;AAExBA,IAAAA,IAAI,CAAChE,IAAI,CAAC0E,SAAS,EAAEzE,KAAK,CAAC,CAAA;AAE3B,IAAA,IAAIkF,yBAAqC,CAAA;AAEzC,IAAA,IAAIjC,kBAAkB,CAACkC,GAAG,CAAC,qBAAqB,CAAC,EAAE;MAC/C,MAAMC,gBAAgB,GAAGA,MAAM;AAC3B;AACA;QACA,IAAIpB,OAAO,IAAE,IAAI,EAAE;AAAE,UAAA,OAAA;AAAQ,SAAA;AAE7B,QAAA,MAAMqB,YAAY,GAAGrB,OAAO,CAACqB,YAAY,CAAA;;AAEzC;AACA;AACA;AACA;AACA,QAAA,IAAIA,YAAY,IAAI,IAAI,IAAIA,YAAY,GAAG,CAAC,EAAE;AAC1C;AACA;UACA,MAAMC,mBAAmB,GAAGA,MAAM;AAC9BtF,YAAAA,KAAK,CAACuF,IAAI,CAACC,YAAY,CAACH,YAAY,CAAC,CAAA;AACrC,YAAA,IAAIlC,kBAAkB,EAAE;cACpBA,kBAAkB,CAACsC,kBAAkB,EAAE,CAAA;aAC1C,MAAM,IAAIrC,kBAAkB,EAAE;cAC3BA,kBAAkB,CAACqC,kBAAkB,EAAE,CAAA;AAC3C,aAAA;WACH,CAAA;AACDC,UAAAA,UAAU,CAACJ,mBAAmB,EAAE,CAAC,CAAC,CAAA;AACtC,SAAA;OACH,CAAA;MAEDJ,yBAAyB,GAAGhC,qBAAqB,CAACyC,aAAa,CAAC3B,OAAO,EAAEoB,gBAAgB,CAAC,CAAA;AAC1FA,MAAAA,gBAAgB,EAAE,CAAA;AACtB,KAAA;AAEA,IAAA,OAAO,MAAM;AACTpC,MAAAA,OAAO,CAAC4C,WAAW,CAAC7B,IAAI,CAAC,CAAA;AACzB,MAAA,IAAImB,yBAAyB,EAAE;AAC3BA,QAAAA,yBAAyB,EAAE,CAAA;AAC/B,OAAA;KACH,CAAA;AACL,GAAC,CAAC,CAAA;EAEF,MAAMW,MAAM,GAAIrF,GAAmB,IAAK;IACpCuD,IAAI,CAAC+B,wBAAwB,CAACtF,GAAG,CAACuF,GAAG,EAAEvF,GAAG,CAACwF,SAAS,CAAC,CAAA;GACxD,CAAA;AAED,EAAA,OAAA,CAAA,MAAA;IAAA,IAAAC,IAAA,GAAAC,QAAA,EAAA,CAAA;IAAA,IAAAC,KAAA,GACyCnC,OAAO,CAAA;IAAA,OAAAmC,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAPjC,OAAO,GAAAiC,IAAA,CAAA;AAAAI,IAAAA,MAAA,CAAAJ,IAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAAK,GAAA,GAAAC,IAAA,CAEpC5C,MAAAA,CAAAA,CAAAA,oBAAoB,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAAtB2C,GAAA,EAAAE,IAAAA,eAAA,CACCC,WAAW,EAAAC,UAAA,CAAA;AAAA,QAAA,KAAA,OAAA,CAAAC,GAAA;UAAA,OAAQxC,oBAAoB,EAAE,CAAA;AAAA,SAAA;AAAA,OAAA,EAAMR,oBAAoB,EAAA;AAAA,QAAA,IAAIoB,OAAOA,GAAA;UAAA,OAAElB,gBAAgB,EAAE,CAAA;AAAA,SAAA;AAAArD,QAAAA,GAAA,EAAQqF,MAAAA;OAAuB,CAAA,CAAA,CAAA;AAAA,KAAA,GAAA,CAAA,CAAA;AAAAe,IAAAA,MAAA,OAAAC,SAAA,CAAAZ,IAAA,EAH9HhC,gBAAgB,EAAE,CAAA,CAAA,CAAA;AAAA,IAAA,OAAAgC,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAOtC,CAAC;;AChGD,MAAMa,UAAU,GAAIC,CAGnB,IAAI;EACD,MAAM;AAAE/D,IAAAA,OAAAA;AAAQ,GAAC,GAAGK,UAAU,CAAC3B,YAAY,CAAC,CAAA;EAE5C,MAAMsF,OAAO,GAAGD,CAAC,CAACE,WAAW,CAACC,kBAAkB,EAAE,CAAA;EAClD,IAAI,CAACF,OAAO,EAAE;AAAE,IAAA,OAAA,EAAA,CAAA;AAAc,GAAA;AAE9B,EAAA,MAAMG,IAAI,GAAGH,OAAO,CAACI,UAAU,CAAC,IAAI,EAAGC,CAAM,IAAKA,CAAC,CAAC,CAAC;EACrD,IAAI,CAACF,IAAI,EAAE;AAAE,IAAA,OAAA,EAAA,CAAA;AAAc,GAAA;EAC3BJ,CAAC,CAACvG,GAAG,IAAIuG,CAAC,CAACvG,GAAG,CAAC2G,IAAI,CAAC,CAAA;AAEpB,EAAA,MAAMG,GAAG,GAAGH,IAAI,CAACtG,MAAM,EAAE,CAAA;AAEzB0G,EAAAA,SAAS,CAAE,MAAK;AACZJ,IAAAA,IAAI,IAAInE,OAAO,CAAC4C,WAAW,CAACuB,IAAI,CAAC,CAAA;IACjCJ,CAAC,CAACvG,GAAG,IAAIuG,CAAC,CAACvG,GAAG,CAACgH,SAAS,CAAC,CAAA;AAC7B,GAAC,CAAC,CAAA;AAEF,EAAA,OAAUF,GAAG,CAAA;AACjB,CAAC;;ACtBD,MAAMG,aAAa,GAAIzH,KAGtB,IAAI;AACD,EAAA,MAAMO,UAAU,GAAGP,KAAK,CAACiH,WAAW,CAACS,cAAc,CAAA;EAEnD,IAAIC,MAAM,GAAG,KAAK,CAAA;EAElB,MAAM9B,MAAM,GAAIrF,GAAQ,IAAI;AACxB,IAAA,IAAI,CAACR,KAAK,CAACQ,GAAG,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAA;AAC1BR,IAAAA,KAAK,CAACQ,GAAG,CAACA,GAAG,CAAC,CAAA;AACdmH,IAAAA,MAAM,GAAG,IAAI,CAAA;GAChB,CAAA;AAEDJ,EAAAA,SAAS,CAAE,MAAK;AACZ,IAAA,IAAII,MAAM,EAAE;MACR3H,KAAK,CAACQ,GAAG,IAAIR,KAAK,CAACQ,GAAG,CAACgH,SAAS,CAAC,CAAA;AACrC,KAAA;AACJ,GAAC,CAAC,CAAA;AAEF,EAAA,OAAAhB,eAAA,CAAQjG,UAAU,EAAAmG,UAAA,CAAA;AAAAlG,IAAAA,GAAA,EAAMqF,MAAAA;AAAM,GAAA,EAAA,MAAO7F,KAAK,CAACiH,WAAW,CAACW,MAAM,CAAA,CAAA,CAAA;AACjE,CAAC;;ACnBD,MAAMC,QAAQ,GAAId,CAGjB,IAAI;AAED,EAAA,MAAMe,aAAa,GAAG5D,UAAU,CAAE,MAAK;AACnC,IAAA,MAAM6D,OAAO,GAAGhB,CAAC,CAACE,WAAW,CAAA;IAC7B,IAAI,CAACc,OAAO,EAAE;AAAE,MAAA,OAAO,KAAK,CAAA;AAAE,KAAA;IAC9B,OAAOA,OAAO,CAACC,sBAAsB,CAAA;AACzC,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMC,UAAU,GAAG/D,UAAU,CAAE,MAAK;AAChC,IAAA,MAAM6D,OAAO,GAAGhB,CAAC,CAACE,WAAW,CAAA;IAC7B,IAAI,CAACc,OAAO,EAAE;AAAE,MAAA,OAAO,KAAK,CAAA;AAAE,KAAA;IAC9B,OAAO,CAACA,OAAO,CAACC,sBAAsB,CAAA;AAC1C,GAAC,CAAC,CAAA;AAEF,EAAA,OAAA,CAAAzB,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAAD,GAAA,GAAAC,IAAA,CAEUuB,MAAAA,CAAAA,CAAAA,aAAa,EAAE,CAAA,CAAA;AAAA,IAAA,OAAA,MAAfxB,GAAA,EAAA,IAAAE,eAAA,CACMiB,aAAa,EAAA;AAAA,MAAA,IAACR,WAAWA,GAAA;QAAA,OAAEF,CAAC,CAACE,WAAW,CAAA;AAAA,OAAA;AAAAzG,MAAAA,GAAAA,CAAA0H,EAAA,EAAA;AAAA,QAAA,IAAA/B,KAAA,GAAOY,CAAC,CAACvG,GAAG,CAAA;QAAA,OAAA2F,KAAA,KAAAA,UAAAA,GAAAA,KAAA,CAAA+B,EAAA,IAALnB,CAAC,CAACvG,GAAG,GAAA0H,EAAA,CAAA;AAAA,OAAA;KAAI,CAAA,CAAA;AAAA,GAAA,GAAA,CAAA,EAAA3B,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAA4B,IAAA,GAAA5B,IAAA,CAC9D0B,MAAAA,CAAAA,CAAAA,UAAU,EAAE,CAAA,CAAA;AAAA,IAAA,OAAA,MAAZE,IAAA,EAAA,IAAA3B,eAAA,CACMM,UAAU,EAAA;AAAA,MAAA,IAACG,WAAWA,GAAA;QAAA,OAAEF,CAAC,CAACE,WAAW,CAAA;AAAA,OAAA;AAAAzG,MAAAA,GAAAA,CAAA0H,EAAA,EAAA;AAAA,QAAA,IAAAE,MAAA,GAAOrB,CAAC,CAACvG,GAAG,CAAA;QAAA,OAAA4H,MAAA,KAAAA,UAAAA,GAAAA,MAAA,CAAAF,EAAA,IAALnB,CAAC,CAACvG,GAAG,GAAA0H,EAAA,CAAA;AAAA,OAAA;KAAI,CAAA,CAAA;AAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAGzE,CAAC;;;ACxBD,MAAMG,iBAAiB,GAAIrI,KAA8B,IAAK;AAE1D,EAAA,MAAMgD,OAAO,GAAGK,UAAU,CAAC3B,YAAY,CAAC,CAACsB,OAAQ,CAAA;AAEjD,EAAA,IAAI/C,IAAiB,CAAA;AACrB,EAAA,IAAIqI,SAAsB,CAAA;AAC1B,EAAA,IAAIC,YAAyB,CAAA;AAC7B,EAAA,IAAIC,YAAyB,CAAA;AAC7B,EAAA,IAAIC,cAA2B,CAAA;EAC/B,IAAIC,IAAS,GAAG,UAAU,CAAA;EAE1B,MAAM,CAACC,mBAAmB,EAAEC,mBAAmB,CAAC,GAAGpF,YAAY,EAAmB,CAAA;EAClF,MAAM,CAACqF,aAAa,EAAEC,aAAa,CAAC,GAAGtF,YAAY,EAAU,CAAA;EAC7D,MAAM,CAACuF,QAAQ,EAAEC,QAAQ,CAAC,GAAGxF,YAAY,EAAO,CAAA;AAChD,EAAA,MAAM,CAACF,aAAa,EAAEC,aAAa,CAAC,GAAGC,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;AACjF,EAAA,MAAM,CAAC+G,qBAAqB,EAAEC,qBAAqB,CAAC,GAAG1F,YAAY,CAAa,IAAItB,UAAU,CAAC,WAAW,CAAC,CAAC,CAAA;AAC5G,EAAA,MAAM,CAACiH,uBAAuB,EAAEC,uBAAuB,CAAC,GAAG5F,YAAY,CAAa,IAAItB,UAAU,CAAC,WAAW,CAAC,CAAC,CAAA;AAChH,EAAA,MAAM,CAACmH,qBAAqB,EAAEC,qBAAqB,CAAC,GAAG9F,YAAY,CAAa,IAAItB,UAAU,CAAC,cAAc,CAAC,CAAC,CAAA;EAE9GlC,KAAK,CAASQ,GAAG,CAAE,OAAO;AACvB;AACA4D,IAAAA,OAAOA,GAAG;AAAE,MAAA,OAAO,KAAK,CAAA;AAAE,KAAA;AAC9B,GAAC,CAAC,CAAC,CAAA;AAEHC,EAAAA,OAAO,CAAC,MAAM;AACV,IAAA,MAAMI,SAA6B,GAAG;AAClC8E,MAAAA,gBAAgB,EAAEA,CAACxB,OAAO,EAAEyB,cAAc,KAAK;QAC3CZ,mBAAmB,CAACb,OAAO,CAAC,CAAA;QAC5B,MAAM0B,YAAY,GAAGC,CAAC,CAACC,YAAY,CAACH,cAAc,EAAE,IAAI,CAAC,CAAA;QACzDR,QAAQ,CAACS,YAAY,CAAC,CAAA;OACzB;AACDX,MAAAA,aAAa,EAAEc,KAAK,IAAId,aAAa,CAACc,KAAK,CAAC;AAC5ClF,MAAAA,mBAAmB,EAAEA,CAAC3D,IAAI,EAAEwB,EAAE,KAAKgB,aAAa,CAACD,aAAa,EAAE,CAAChB,QAAQ,CAACvB,IAAI,EAAEwB,EAAE,CAAC,CAAC;AACpFsH,MAAAA,sBAAsB,EAAEC,SAAS,IAAIV,uBAAuB,CAACD,uBAAuB,EAAE,CAAC7G,QAAQ,CAAC,WAAW,EAAE,CAACwH,SAAS,CAAC,CAAC;AACzHC,MAAAA,oBAAoB,EAAED,SAAS,IAAIZ,qBAAqB,CAACD,qBAAqB,EAAE,CAAC3G,QAAQ,CAAC,WAAW,EAAE,CAACwH,SAAS,CAAC,CAAC;AACnHE,MAAAA,kBAAkB,EAAEC,OAAO,IAAIX,qBAAqB,CAACD,qBAAqB,EAAE,CAAC/G,QAAQ,CAAC,cAAc,EAAE,CAAC2H,OAAO,CAAC,CAAA;KAClH,CAAA;IAED,MAAMlG,IAAI,GAAGf,OAAO,CAACiC,UAAU,CAAC,IAAIiF,qBAAqB,EAAE,CAAC,CAAA;AAC5DnG,IAAAA,IAAI,CAAChE,IAAI,CAAC0E,SAAS,EAAExE,IAAI,EAAEsI,YAAY,EAAEC,YAAY,EAAEC,cAAc,EAAEJ,iBAAiB,EAAErI,KAAK,CAAC,CAAA;IAChGC,IAAI,CAACkK,YAAY,CAAC,MAAM,EAAEpG,IAAI,CAACqG,eAAe,EAAE,CAAC,CAAA;AACjD1B,IAAAA,IAAI,GAAG3E,IAAI,CAACqG,eAAe,EAAE,CAAA;AAE7B,IAAA,OAAO,MAAM;AAAEpH,MAAAA,OAAO,CAAC4C,WAAW,CAAC7B,IAAI,CAAC,CAAA;KAAE,CAAA;AAC9C,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMsG,YAAY,GAAGnG,UAAU,CAAC,MAAO,CAAkBZ,gBAAAA,EAAAA,aAAa,EAAE,CAACZ,QAAQ,EAAG,EAAC,CAAC,CAAA;AACtF,EAAA,MAAM4H,oBAAoB,GAAGpG,UAAU,CAAC,MAAO,CAAoB+E,kBAAAA,EAAAA,qBAAqB,EAAE,CAACvG,QAAQ,EAAG,EAAC,CAAC,CAAA;AACxG,EAAA,MAAM6H,sBAAsB,GAAGrG,UAAU,CAAC,MAAO,CAAsBiF,oBAAAA,EAAAA,uBAAuB,EAAE,CAACzG,QAAQ,EAAG,EAAC,CAAC,CAAA;AAC9G,EAAA,MAAM8H,oBAAoB,GAAGtG,UAAU,CAAC,MAAO,CAAoBmF,kBAAAA,EAAAA,qBAAqB,EAAE,CAAC3G,QAAQ,EAAG,EAAC,CAAC,CAAA;EAExG,MAAM+H,cAAc,GAAGA,MAAK9B,mBAAmB,EAAE,IAAI,IAAI,CAAA;AACzD,EAAA,MAAM+B,WAAW,GAAGA,MAAK/B,mBAAmB,EAAE,IAAI,IAAI,IAAII,QAAQ,EAAE,IAAI,IAAI,CAAA;AAE5E,EAAA,OAAA,CAAA,MAAA;IAAA,IAAA9C,IAAA,GAAAC,QAAA,EAAA;MAAAyE,KAAA,GAAA1E,IAAA,CAAA2E,UAAA;MAAAC,KAAA,GAAAF,KAAA,CAAAG,WAAA;MAAAC,KAAA,GAAAF,KAAA,CAAAC,WAAA;MAAAE,KAAA,GAAAD,KAAA,CAAAD,WAAA;MAAAG,KAAA,GAAAD,KAAA,CAAAF,WAAA,CAAA;IAAA,IAAA3E,KAAA,GACsClG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;IAAAiF,MAAA,CAAAjF,IAAA,EAAAS,UAAA,CAAA;AAAA,MAAA,KAAA,OAAA,CAAAC,GAAA;QAAA,OAAzB0D,YAAY,EAAE,CAAA;AAAA,OAAA;AAAA,KAAA,EAAA,MAAmB,CAACrK,KAAK,CAACmL,MAAM,GAAG;AAAEzC,MAAAA,IAAAA;KAAM,GAAG,EAAE,CAAA,EAAA,KAAA,EAAA,IAAA,CAAA,CAAA;IAAA,IAAAN,MAAA,GAC7BI,YAAY,CAAA;IAAA,OAAAJ,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAuC,KAAA,CAAA,GAAZnC,YAAY,GAAAmC,KAAA,CAAA;IAAA,IAAAS,MAAA,GACV3C,cAAc,CAAA;IAAA,OAAA2C,MAAA,KAAAhF,UAAAA,GAAAA,GAAA,CAAAgF,MAAA,EAAAP,KAAA,CAAA,GAAdpC,cAAc,GAAAoC,KAAA,CAAA;IAAA,IAAAQ,MAAA,GAChB9C,YAAY,CAAA;IAAA,OAAA8C,MAAA,KAAAjF,UAAAA,GAAAA,GAAA,CAAAiF,MAAA,EAAAN,KAAA,CAAA,GAAZxC,YAAY,GAAAwC,KAAA,CAAA;IAAA,IAAAO,MAAA,GACpBhD,SAAS,CAAA;IAAA,OAAAgD,MAAA,KAAAlF,UAAAA,GAAAA,GAAA,CAAAkF,MAAA,EAAAN,KAAA,CAAA,GAAT1C,SAAS,GAAA0C,KAAA,CAAA;AAAA3E,IAAAA,MAAA,CAAA2E,KAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAA1E,GAAA,GAAAC,IAAA,CACrCkE,MAAAA,CAAAA,CAAAA,cAAc,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAAhBnE,GAAA,EAAA,IAAAE,eAAA,CAAqBqB,QAAQ,EAAA;AAAA,QAAA,IAACZ,WAAWA,GAAA;UAAA,OAAE0B,mBAAmB,EAAE,CAAA;AAAA,SAAA;OAAc,CAAA,CAAA;AAAA,KAAA,GAAA,EAAA,IAAA,CAAA,CAAA;AAAAtC,IAAAA,MAAA,CAAA2E,KAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAA7C,IAAA,GAAA5B,IAAA,CAC9EmE,MAAAA,CAAAA,CAAAA,WAAW,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAAbvC,IAAA,EAAA,IAAA5B,IAAA,CAAoBwC,QAAQ,CAAM,CAAA;AAAA,KAAA,GAAA,EAAA,IAAA,CAAA,CAAA;IAAA1C,MAAA,CAAA4E,KAAA,EAEJpC,aAAa,CAAA,CAAA;AAAAjC,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GAPpClB,oBAAoB,EAAE;QAAAmB,IAAA,GACtBlB,sBAAsB,EAAE;QAAAmB,IAAA,GACxBlB,oBAAoB,EAAE,CAAA;AAAAgB,MAAAA,GAAA,KAAAD,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAA8D,KAAA,EAAAY,GAAA,CAAAI,CAAA,GAAAH,GAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAF,GAAA,CAAAK,CAAA,IAAA/E,SAAA,CAAAgE,KAAA,EAAAU,GAAA,CAAAK,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAH,GAAA,CAAAM,CAAA,IAAAhF,SAAA,CAAAkE,KAAA,EAAAQ,GAAA,CAAAM,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAH,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAQ/C,CAAC;;ACpEM,MAAM6F,uBAAuB,SAASC,yBAAyB,CAAC;AAEnEnM,EAAAA,WAAWA,GAAG;IACV,KAAK,CAAC,OAAO,CAAC,CAAA;AAClB,GAAA;AAEQoM,EAAAA,mBAAmB,GAAQ;AAC/BC,IAAAA,mBAAmB,EAAE5D,iBAAiB;AACtC6D,IAAAA,kBAAkB,EAAE7D,iBAAiB;AACrC8D,IAAAA,oBAAoB,EAAErJ,kBAAAA;GACzB,CAAA;EAEMsJ,kBAAkBA,CAACrL,IAAY,EAAO;AACzC,IAAA,OAAO,IAAI,CAACiL,mBAAmB,CAACjL,IAAI,CAAC,CAAA;AACzC,GAAA;EAEAsL,oBAAoBA,CAAClF,IAAS,EAAW;IACrC,IAAI,CAACA,IAAI,EAAE;AAAE,MAAA,OAAO,KAAK,CAAA;AAAE,KAAA;AAC3B,IAAA,MAAMmF,SAAS,GAAGnF,IAAI,CAACmF,SAAS,CAAA;AAChC,IAAA,MAAMC,QAAQ,GAAGD,SAAS,IAAI,QAAQ,IAAIA,SAAS,CAAA;AACnD,IAAA,OAAO,CAACC,QAAQ,CAAA;AACpB,GAAA;AACJ;;;ACtBA,MAAMC,cAAc,GAAIxM,KAA6B,IAAI;EAErD,MAAM;AAAE+D,IAAAA,IAAAA;AAAK,GAAC,GAAG/D,KAAK,CAAA;EAEtB,MAAM,CAACyM,QAAQ,EAAEC,QAAQ,CAAC,GAAGlJ,YAAY,EAAU,CAAA;AACnD,EAAA,MAAM,CAACmJ,QAAQ,EAAEC,QAAQ,CAAC,GAAGpJ,YAAY,CAASO,IAAI,CAAC4I,QAAQ,EAAE,CAAC,CAAA;EAClE,MAAM,CAACE,WAAW,EAAEC,WAAW,CAAC,GAAGtJ,YAAY,EAAmB,CAAA;EAClE,MAAM,CAACuJ,kBAAkB,EAAEC,kBAAkB,CAAC,GAAGxJ,YAAY,EAAmB,CAAA;AAEhF,EAAA,IAAIvD,IAAoB,CAAA;AACxB,EAAA,IAAIgN,OAAuB,CAAA;AAC3B,EAAA,IAAIC,kBAAkC,CAAA;AAEtC,EAAA,IAAIC,QAA6B,CAAA;EAEjC,MAAMtH,MAAM,GAAIrF,GAAQ,IAAK;AACzB2M,IAAAA,QAAQ,GAAG3M,GAAG,CAAA;GACjB,CAAA;AAED,EAAA,MAAM4M,eAAe,GAAG,IAAIC,eAAe,CAAC,MAAMpN,IAAI,CAAC,CAAA;AAEvDoE,EAAAA,OAAO,CAAC,MAAM;AACV,IAAA,MAAMI,SAA0B,GAAG;AAC/BiI,MAAAA,QAAQ,EAAEY,KAAK,IAAIZ,QAAQ,CAACY,KAAK,CAAC;AAClC5I,MAAAA,mBAAmB,EAAEA,CAAC3D,IAAI,EAAEwB,EAAE,KAAK6K,eAAe,CAAC1I,mBAAmB,CAAC3D,IAAI,EAAEwB,EAAE,CAAC;AAChFuK,MAAAA,WAAW,EAAES,IAAI,IAAIT,WAAW,CAACS,IAAI,CAAC;AACtCP,MAAAA,kBAAkB,EAAE/F,WAAW,IAAI+F,kBAAkB,CAAC/F,WAAW,CAAC;MAClEuG,mBAAmB,EAAEA,MAAML,QAAAA;KAC9B,CAAA;IAEDpJ,IAAI,CAAC0J,OAAO,CAAChJ,SAAS,EAAExE,IAAI,EAAEgN,OAAO,EAAEC,kBAAkB,CAAC,CAAA;AAE1D,IAAA,MAAMQ,YAAY,GAAG3J,IAAI,CAAC4J,eAAe,EAAE,CAAA;AAC3CV,IAAAA,OAAO,CAACW,qBAAqB,CAAC,UAAU,EAAEF,YAAY,CAAC,CAAA;AACvD3J,IAAAA,IAAI,CAAC8J,aAAa,CAAC5N,IAAI,CAAC,CAAA;AAC5B,GAAC,CAAC,CAAA;AAEF,EAAA,MAAM6N,OAAK,GAAG5J,UAAU,CAAC,OAAO;IAAEoJ,KAAK,EAAEb,QAAQ,EAAC;AAAE,GAAC,CAAC,CAAC,CAAA;AAEvD,EAAA,OAAA,CAAA,MAAA;IAAA,IAAAxG,IAAA,GAAAC,QAAA,EAAA;MAAAyE,KAAA,GAAA1E,IAAA,CAAA2E,UAAA;MAAAC,KAAA,GAAAF,KAAA,CAAAG,WAAA,CAAA;IAAA,IAAA3E,KAAA,GAEalG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;IAAA,IAAAmC,MAAA,GAOC6E,OAAO,CAAA;IAAA,OAAA7E,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAuC,KAAA,CAAA,GAAPsC,OAAO,GAAAtC,KAAA,CAAA;IAAA,IAAAS,MAAA,GACP8B,kBAAkB,CAAA;IAAA,OAAA9B,MAAA,KAAAhF,UAAAA,GAAAA,GAAA,CAAAgF,MAAA,EAAAP,KAAA,CAAA,GAAlBqC,kBAAkB,GAAArC,KAAA,CAAA;AAAAxE,IAAAA,MAAA,CAAAwE,KAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAAvE,GAAA,GAAAC,IAAA,CAC1BwG,MAAAA,CAAAA,CAAAA,kBAAkB,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAApBzG,GAAA,EAAA,IAAAE,eAAA,CACMqB,QAAQ,EAAA;AAAA,QAAA,IAACZ,WAAWA,GAAA;UAAA,OAAE8F,kBAAkB,EAAE,CAAA;AAAA,SAAA;AAAAvM,QAAAA,GAAA,EAAQqF,MAAAA;OAAU,CAAA,CAAA;AAAA,KAAA,GAAA,CAAA,CAAA;AAAAe,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GAR5DsC,OAAK,EAAE;QAAArC,IAAA,GACNkB,QAAQ,EAAE;QAAAjB,IAAA,GACPmB,WAAW,EAAE,CAAA;MAAAtB,GAAA,CAAAI,CAAA,GAAAoC,KAAA,CAAA9H,IAAA,EAAAuF,GAAA,EAAAD,GAAA,CAAAI,CAAA,CAAA,CAAA;AAAAF,MAAAA,IAAA,KAAAF,GAAA,CAAAK,CAAA,IAAAoC,YAAA,CAAA/H,IAAA,EAAAsF,QAAAA,EAAAA,GAAA,CAAAK,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAH,GAAA,CAAAM,CAAA,IAAAmC,YAAA,CAAA/H,IAAA,EAAAsF,WAAAA,EAAAA,GAAA,CAAAM,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAH,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAUrC,CAAC;;;ACtDD,MAAMgI,oBAAoB,GAAIjO,KAAmC,IAAK;AAElE,EAAA,MAAM,CAACsD,aAAa,EAAEC,aAAa,CAAC,GAAGC,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;AACjF,EAAA,MAAM,CAACgM,iBAAiB,EAAEC,iBAAiB,CAAC,GAAG3K,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;AACzF,EAAA,MAAM,CAACkM,0BAA0B,EAAEC,0BAA0B,CAAC,GAAG7K,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;EAC3G,MAAM,CAACoM,0BAA0B,EAAEC,0BAA0B,CAAC,GAAG/K,YAAY,CAAmB,OAAO,CAAC,CAAA;EACxG,MAAM,CAACiJ,QAAQ,EAAEC,QAAQ,CAAC,GAAGlJ,YAAY,EAAU,CAAA;EACnD,MAAM,CAACuJ,kBAAkB,EAAEC,kBAAkB,CAAC,GAAGxJ,YAAY,EAAsC,CAAA;AAEnG,EAAA,IAAIvD,IAAoB,CAAA;AACxB,EAAA,IAAIuO,mBAAmC,CAAA;AACvC,EAAA,IAAIC,cAA8B,CAAA;AAClC,EAAA,IAAIC,qBAAwC,CAAA;EAE5C,IAAIC,eAAe,GAAG,KAAK,CAAA;AAC3B,EAAA,IAAIC,eAA+C,CAAA;AACnD,EAAA,IAAIC,eAA2C,CAAA;AAC/CxK,EAAAA,OAAO,CAAE,MAAK;AACVwK,IAAAA,eAAe,GAAG,IAAIC,SAAS,CAAmBC,OAAO,IAAI;AACzDH,MAAAA,eAAe,GAAGG,OAAO,CAAA;AAC7B,KAAC,CAAC,CAAA;AACN,GAAC,CAAC,CAAA;EAEF,MAAMlJ,MAAM,GAAImJ,KAAsB,IAAK;AACvC;AACA;AACA;AACA;AACA,IAAA,IAAIL,eAAe,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAA;AAC/B;IACA,IAAIK,KAAK,IAAE,IAAI,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAA;AAE3BJ,IAAAA,eAAe,IAAIA,eAAe,CAACI,KAAK,CAAC,CAAA;AACzCL,IAAAA,eAAe,GAAG,IAAI,CAAA;GACzB,CAAA;EAED,MAAM;AAAE5K,IAAAA,IAAAA;AAAK,GAAC,GAAG/D,KAAK,CAAA;AAEtBqE,EAAAA,OAAO,CAAC,MAAM;AAEV,IAAA,MAAMI,SAAgC,GAAG;AACrCC,MAAAA,mBAAmB,EAAEA,CAAC3D,IAAI,EAAEwB,EAAE,KAAKgB,aAAa,CAAC0L,IAAI,IAAIA,IAAI,CAAC3M,QAAQ,CAACvB,IAAI,EAAEwB,EAAE,CAAC,CAAC;AACjF2M,MAAAA,uBAAuB,EAAEA,CAACnO,IAAI,EAAEwB,EAAE,KAAK4L,iBAAiB,CAACc,IAAI,IAAIA,IAAI,CAAC3M,QAAQ,CAACvB,IAAI,EAAEwB,EAAE,CAAC,CAAC;MACzF4M,yBAAyB,EAAGrF,SAAS,IAAK;AACtCuE,QAAAA,0BAA0B,CAACY,IAAI,IAAIA,IAAI,CAAC3M,QAAQ,CAAC,WAAW,EAAE,CAACwH,SAAS,CAAC,CAAC,CAAA;AAC1EyE,QAAAA,0BAA0B,CAAC,CAACzE,SAAS,GAAG,MAAM,GAAG,OAAO,CAAC,CAAA;OAC5D;AACD4C,MAAAA,QAAQ,EAAEY,KAAK,IAAIZ,QAAQ,CAACY,KAAK,CAAC;AAClC8B,MAAAA,cAAc,EAAEnI,WAAW,IAAI+F,kBAAkB,CAAC/F,WAAW,CAAC;MAC9DoI,qBAAqB,EAAEA,MAAKR,eAAe;AAC3CS,MAAAA,WAAW,EAAEC,KAAK,IAAIb,qBAAqB,CAACc,WAAW,CAACD,KAAK,CAAA;KAChE,CAAA;IAEDxL,IAAI,CAAC0J,OAAO,CAAChJ,SAAS,EAAExE,IAAI,EAAEyO,qBAAqB,EAAEF,mBAAmB,CAAC,CAAA;AAE7E,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMiB,QAAQ,GAAGvL,UAAU,CAAE,OAAM;IAC/BoJ,KAAK,EAAEb,QAAQ,EAAC;AACpB,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,MAAMiD,mBAAmB,GAAGxL,UAAU,CAAE,MAAK,oCAAoC,GAAGZ,aAAa,EAAE,CAACZ,QAAQ,EAAG,CAAC,CAAA;AAChH,EAAA,MAAMiN,uBAAuB,GAAGzL,UAAU,CAAE,MAAKgK,iBAAiB,EAAE,CAACxL,QAAQ,EAAI,CAAC,CAAA;AAClF,EAAA,MAAMkN,gCAAgC,GAAG1L,UAAU,CAAE,MAAK,4BAA4B,GAAGkK,0BAA0B,EAAE,CAAC1L,QAAQ,EAAG,CAAC,CAAA;AAElI,EAAA,OAAA,CAAA,MAAA;IAAA,IAAAuD,IAAA,GAAAC,QAAA,EAAA;MAAAyE,KAAA,GAAA1E,IAAA,CAAA2E,UAAA;MAAAC,KAAA,GAAAF,KAAA,CAAAG,WAAA;MAAAC,KAAA,GAAAF,KAAA,CAAAD,UAAA,CAAA;IAAA,IAAAzE,KAAA,GACclG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;IAAA,IAAAmC,MAAA,GACAoG,mBAAmB,CAAA;IAAA,OAAApG,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAuC,KAAA,CAAA,GAAnB6D,mBAAmB,GAAA7D,KAAA,CAAA;AAAAtE,IAAAA,MAAA,CAAAsE,KAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAArE,GAAA,GAAAC,IAAA,CACvBwG,MAAAA,CAAAA,CAAAA,kBAAkB,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAApBzG,GAAA,EAAA,IAAAE,eAAA,CAAyBqB,QAAQ,EAAA;AAAA,QAAA,IAACZ,WAAWA,GAAA;UAAA,OAAE8F,kBAAkB,EAAE,CAAA;AAAA,SAAA;AAAAvM,QAAAA,GAAA,EAAQqF,MAAAA;OAAS,CAAA,CAAA;AAAA,KAAA,GAAA,CAAA,CAAA;IAAA,IAAAuF,MAAA,GAEhFqD,cAAc,CAAA;IAAA,OAAArD,MAAA,KAAAhF,UAAAA,GAAAA,GAAA,CAAAgF,MAAA,EAAAP,KAAA,CAAA,GAAd4D,cAAc,GAAA5D,KAAA,CAAA;IAAA,IAAAQ,MAAA,GACPqD,qBAAqB,CAAA;IAAA,OAAArD,MAAA,KAAAjF,UAAAA,GAAAA,GAAA,CAAAiF,MAAA,EAAAN,KAAA,CAAA,GAArB2D,qBAAqB,GAAA3D,KAAA,CAAA;AAAAnE,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GALlBkE,mBAAmB,EAAE;QAAAjE,IAAA,GAASgE,QAAQ,EAAE;QAAA/D,IAAA,GACrBiE,uBAAuB,EAAE;QAAAE,IAAA,GAGxBvB,0BAA0B,EAAE;QAAAwB,IAAA,GAASF,gCAAgC,EAAE,CAAA;AAAApE,MAAAA,GAAA,KAAAD,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAAZ,IAAA,EAAAsF,GAAA,CAAAI,CAAA,GAAAH,GAAA,CAAA,CAAA;MAAAD,GAAA,CAAAK,CAAA,GAAAmC,KAAA,CAAA9H,IAAA,EAAAwF,IAAA,EAAAF,GAAA,CAAAK,CAAA,CAAA,CAAA;AAAAF,MAAAA,IAAA,KAAAH,GAAA,CAAAM,CAAA,IAAAhF,SAAA,CAAA8D,KAAA,EAAAY,GAAA,CAAAM,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAmE,MAAAA,IAAA,KAAAtE,GAAA,CAAAwE,CAAA,IAAA/B,YAAA,CAAAnD,KAAA,EAAAU,aAAAA,EAAAA,GAAA,CAAAwE,CAAA,GAAAF,IAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAvE,GAAA,CAAAyE,CAAA,IAAAnJ,SAAA,CAAAgE,KAAA,EAAAU,GAAA,CAAAyE,CAAA,GAAAF,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAvE,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAA;AAAAuI,MAAAA,CAAA,EAAAvI,SAAA;AAAAwI,MAAAA,CAAA,EAAAxI,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAK3H,CAAC;;;AC3ED,MAAMgK,mBAAmB,GAAIjQ,KAAkC,IAAK;EAChE,MAAM;AAAE+D,IAAAA,IAAAA;AAAK,GAAC,GAAG/D,KAAK,CAAA;AAEtB,EAAA,MAAM,CAACsD,aAAa,EAAEC,aAAa,CAAC,GAAGC,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;AACjF,EAAA,MAAM,CAACgO,sBAAsB,EAAEC,sBAAsB,CAAC,GAAG3M,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;EACnG,MAAM,CAACkO,sBAAsB,EAAEC,sBAAsB,CAAC,GAAG7M,YAAY,CAAmB,OAAO,CAAC,CAAA;EAChG,MAAM,CAACiJ,QAAQ,EAAEC,QAAQ,CAAC,GAAGlJ,YAAY,EAAU,CAAA;AACnD,EAAA,MAAM,CAACmJ,QAAQ,EAAEC,QAAQ,CAAC,GAAGpJ,YAAY,CAASO,IAAI,CAAC4I,QAAQ,EAAE,CAAC,CAAA;EAClE,MAAM,CAAC2D,eAAe,EAAEC,eAAe,CAAC,GAAG/M,YAAY,EAA4B,CAAA;EACnF,MAAM,CAACuJ,kBAAkB,EAAEC,kBAAkB,CAAC,GAAGxJ,YAAY,EAAmB,CAAA;AAEhF,EAAA,IAAIvD,IAAoB,CAAA;AACxB,EAAA,IAAIgN,OAAuB,CAAA;AAG3B5I,EAAAA,OAAO,CAAE,MAAM;AAEX,IAAA,MAAMI,SAA+B,GAAG;AACpCiI,MAAAA,QAAQ,EAAEY,KAAK,IAAIZ,QAAQ,CAACY,KAAK,CAAC;AAClC5I,MAAAA,mBAAmB,EAAEA,CAAC3D,IAAI,EAAEwB,EAAE,KAAKgB,aAAa,CAACD,aAAa,EAAE,CAAChB,QAAQ,CAACvB,IAAI,EAAEwB,EAAE,CAAC,CAAC;AACpFyK,MAAAA,kBAAkB,EAAE/F,WAAW,IAAI+F,kBAAkB,CAAC/F,WAAW,CAAC;MAClEuJ,qBAAqB,EAAG1G,SAAS,IAAK;AAClCqG,QAAAA,sBAAsB,CAAClB,IAAI,IAAIA,IAAI,CAAC3M,QAAQ,CAAC,WAAW,EAAE,CAACwH,SAAS,CAAC,CAAC,CAAA;AACtEuG,QAAAA,sBAAsB,CAAC,CAACvG,SAAS,GAAG,MAAM,GAAG,OAAO,CAAC,CAAA;OACxD;AACDyG,MAAAA,eAAe,EAAEE,QAAQ,IAAIF,eAAe,CAACE,QAAQ,CAAA;KACxD,CAAA;IAED1M,IAAI,CAAC0J,OAAO,CAAChJ,SAAS,EAAExE,IAAI,EAAEgN,OAAO,CAAC,CAAA;AAC1C,GAAC,CAAC,CAAA;;AAEF;AACAyD,EAAAA,YAAY,CAAC,MAAK;AACd,IAAA,MAAMC,eAAe,GAAG5D,kBAAkB,EAAE,CAAA;IAC5C,IAAI4D,eAAe,IAAI,IAAI,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAA;AAEvC5M,IAAAA,IAAI,CAAC8J,aAAa,CAAC5N,IAAI,CAAC,CAAA;AAC5B,GAAC,CAAC,CAAA;AAEF,EAAA,MAAM6N,OAAK,GAAG5J,UAAU,CAAE,OAAM;IAC5BoJ,KAAK,EAAEb,QAAQ,EAAC;AACpB,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,MAAMpC,YAAY,GAAGnG,UAAU,CAAE,MAAK,uBAAuB,GAAGZ,aAAa,EAAE,CAACZ,QAAQ,EAAG,CAAC,CAAA;AAC5F,EAAA,MAAMkO,qBAAqB,GAAG1M,UAAU,CAAE,MAAK,wBAAwB,GAAGgM,sBAAsB,EAAE,CAACxN,QAAQ,EAAG,CAAC,CAAA;AAE/G,EAAA,OAAA,CAAA,MAAA;IAAA,IAAAuD,IAAA,GAAAC,QAAA,EAAA;MAAAyE,KAAA,GAAA1E,IAAA,CAAA2E,UAAA,CAAA;IAAA,IAAAzE,KAAA,GACclG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;AAAAI,IAAAA,MAAA,CAAAJ,IAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAAK,GAAA,GAAAC,IAAA,CAGRwG,MAAAA,CAAAA,CAAAA,kBAAkB,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAApBzG,GAAA,EAAA,IAAAE,eAAA,CACMqB,QAAQ,EAAA;AAAA,QAAA,IAACZ,WAAWA,GAAA;UAAA,OAAE8F,kBAAkB,EAAE,CAAA;AAAA,SAAA;OAAK,CAAA,CAAA;AAAA,KAAA,GAAA,EAAApC,KAAA,CAAA,CAAA;IAAA,IAAAvC,MAAA,GAE7C6E,OAAO,CAAA;IAAA,OAAA7E,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAuC,KAAA,CAAA,GAAPsC,OAAO,GAAAtC,KAAA,CAAA;AAAA/D,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GANGnB,YAAY,EAAE;QAAAoB,IAAA,GAASqC,OAAK,EAAE;QAAApC,IAAA,GAAUiB,QAAQ,EAAE;QAAAkD,IAAA,GAC3BS,eAAe,EAAE;QAAAR,IAAA,GAK3BM,sBAAsB,EAAE;QAAAS,IAAA,GAASD,qBAAqB,EAAE,CAAA;AAAApF,MAAAA,GAAA,KAAAD,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAAZ,IAAA,EAAAsF,GAAA,CAAAI,CAAA,GAAAH,GAAA,CAAA,CAAA;MAAAD,GAAA,CAAAK,CAAA,GAAAmC,KAAA,CAAA9H,IAAA,EAAAwF,IAAA,EAAAF,GAAA,CAAAK,CAAA,CAAA,CAAA;AAAAF,MAAAA,IAAA,KAAAH,GAAA,CAAAM,CAAA,IAAAmC,YAAA,CAAA/H,IAAA,EAAAsF,QAAAA,EAAAA,GAAA,CAAAM,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAmE,MAAAA,IAAA,KAAAtE,GAAA,CAAAwE,CAAA,IAAA/B,YAAA,CAAA/H,IAAA,EAAAsF,eAAAA,EAAAA,GAAA,CAAAwE,CAAA,GAAAF,IAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAvE,GAAA,CAAAyE,CAAA,IAAAhC,YAAA,CAAArD,KAAA,EAAAY,aAAAA,EAAAA,GAAA,CAAAyE,CAAA,GAAAF,IAAA,CAAA,CAAA;AAAAe,MAAAA,IAAA,KAAAtF,GAAA,CAAAuF,CAAA,IAAAjK,SAAA,CAAA8D,KAAA,EAAAY,GAAA,CAAAuF,CAAA,GAAAD,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAtF,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAA;AAAAuI,MAAAA,CAAA,EAAAvI,SAAA;AAAAwI,MAAAA,CAAA,EAAAxI,SAAA;AAAAsJ,MAAAA,CAAA,EAAAtJ,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAGrG,CAAC;;;ACtDD,MAAM8K,aAAa,GAAI/Q,KAA4B,IAAK;EAEpD,MAAM;AAAEiD,IAAAA,kBAAAA;AAAmB,GAAC,GAAGI,UAAU,CAAC3B,YAAY,CAAC,CAAA;EACvD,MAAM;AAAEqC,IAAAA,IAAAA;AAAK,GAAC,GAAG/D,KAAK,CAAA;EAEtB,MAAM,CAAEgR,SAAS,EAAEC,SAAS,CAAE,GAAGzN,YAAY,EAAU,CAAA;EACvD,MAAM,CAAE0N,MAAM,EAAEC,MAAM,CAAE,GAAG3N,YAAY,EAAU,CAAA;EACjD,MAAM,CAAEiJ,QAAQ,EAAEC,QAAQ,CAAE,GAAGlJ,YAAY,EAAU,CAAA;AACrD,EAAA,MAAM,CAAE4N,eAAe,EAAEC,eAAe,CAAE,GAAG7N,YAAY,CAASO,IAAI,CAACqN,eAAe,EAAE,CAAC,CAAA;EACzF,MAAM,CAAEE,YAAY,EAAEC,YAAY,CAAE,GAAG/N,YAAY,CAA2B,EAAE,CAAC,CAAA;AAEjF,EAAA,IAAIvD,IAAoB,CAAA;EAExB,MAAMuR,yBAAyB,GAAIC,IAA8B,IAAK;AAClE,IAAA,MAAMxC,IAAI,GAAGqC,YAAY,EAAE,CAAA;AAC3B,IAAA,MAAMI,gBAAgB,GAAGzO,kBAAkB,CAACkC,GAAG,CAAC,gBAAgB,CAAC,CAAA;AACjE,IAAA,MAAMwM,aAAa,GAAG1O,kBAAkB,CAAC2O,WAAW,CAAC,OAAO,CAAC,CAAA;;AAE7D;IACA,IAAIF,gBAAgB,IAAIC,aAAa,EAAE;AACnC,MAAA,OAAOF,IAAI,CAAA;AACf,KAAA;;AAEA;AACA;AACA,IAAA,MAAMI,OAAO,GAAGnI,CAAC,CAACoI,OAAO,CAAC7C,IAAI,EAAE8C,CAAC,IAAIA,CAAC,CAACC,aAAa,EAAE,CAAC,CAAA;AACvD,IAAA,MAAMC,OAAO,GAAGvI,CAAC,CAACoI,OAAO,CAACL,IAAI,EAAEM,CAAC,IAAIA,CAAC,CAACC,aAAa,EAAE,CAAC,CAAA;AAEvD,IAAA,MAAME,oBAAoB,GAAGjD,IAAI,CAAClN,MAAM,CAACgQ,CAAC,IAAIE,OAAO,CAACE,GAAG,CAACJ,CAAC,CAACC,aAAa,EAAE,CAAC,CAAC,CAAA;AAC7E,IAAA,MAAMI,QAAQ,GAAGX,IAAI,CAAC1P,MAAM,CAACgQ,CAAC,IAAI,CAACF,OAAO,CAACM,GAAG,CAACJ,CAAC,CAACC,aAAa,EAAE,CAAC,CAAC,CAAA;IAElE,MAAMK,mBAAmB,GAAG,CAAC,GAAGH,oBAAoB,EAAE,GAAGE,QAAQ,CAAC,CAAA;IAClEb,YAAY,CAACc,mBAAmB,CAAC,CAAA;GACpC,CAAA;AAEDhO,EAAAA,OAAO,CAAC,MAAM;AACV,IAAA,MAAMI,SAAyB,GAAG;AAC9BwM,MAAAA,SAAS,EAAEqB,MAAM,IAAIrB,SAAS,CAACqB,MAAM,CAAC;AACtCnB,MAAAA,MAAM,EAAEoB,GAAG,IAAIpB,MAAM,CAACoB,GAAG,CAAC;AAC1BC,MAAAA,cAAc,EAAEC,KAAK,IAAIjB,yBAAyB,CAACiB,KAAK,CAAC;AACzD/F,MAAAA,QAAQ,EAAEY,KAAK,IAAIZ,QAAQ,CAACY,KAAK,CAAA;KACpC,CAAA;AACDvJ,IAAAA,IAAI,CAAC0J,OAAO,CAAChJ,SAAS,CAAC,CAAA;AAC3B,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMqJ,OAAK,GAAG5J,UAAU,CAAE,OAAM;IAC5BoO,MAAM,EAAEtB,SAAS,EAAE;IACnBuB,GAAG,EAAErB,MAAM,EAAE;IACb5D,KAAK,EAAEb,QAAQ,EAAC;AACpB,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,MAAMiG,UAAU,GAAG3O,IAAI,CAAC4O,iBAAiB,EAAE,CAAA;EAE3C,MAAMC,aAAa,GAAIC,QAAgC,IAAK;AACxD,IAAA,QAAQ9O,IAAI,CAAC+O,OAAO,EAAE;MAClB,KAAKC,aAAa,CAACC,YAAY;QAC3B,OAAAxM,eAAA,CAAQyJ,mBAAmB,EAAA;AAAClM,UAAAA,IAAI,EAAE8O,QAAAA;AAAQ,SAAA,CAAA,CAAA;MAE9C,KAAKE,aAAa,CAACE,eAAe;QAC9B,OAAAzM,eAAA,CAAQyH,oBAAoB,EAAA;AAAClK,UAAAA,IAAI,EAAE8O,QAAAA;AAAQ,SAAA,CAAA,CAAA;AAE/C,MAAA;QACI,OAAArM,eAAA,CAAQgG,cAAc,EAAA;AAACzI,UAAAA,IAAI,EAAE8O,QAAAA;AAAQ,SAAA,CAAA,CAAA;AAC7C,KAAA;GACH,CAAA;;AAED;AACA,EAAA,OAAA,CAAA,MAAA;IAAA,IAAA5M,IAAA,GAAAC,QAAA,EAAA,CAAA;IAAA,IAAAC,KAAA,GACclG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;IAAAY,SAAA,CAAAZ,IAAA,EAAUyM,UAAU,CAAA,CAAA;AAAArM,IAAAA,MAAA,CAAAJ,IAAA,EAAAO,eAAA,CAC7B0M,GAAG,EAAA;AAAA,MAAA,IAACC,IAAIA,GAAA;QAAA,OAAE7B,YAAY,EAAE,CAAA;AAAA,OAAA;MAAA8B,QAAA,EAAGA,CAACP,QAAQ,EAAE7C,CAAC,KAAK4C,aAAa,CAACC,QAAQ,CAAA;AAAC,KAAA,CAAA,CAAA,CAAA;AAAAjM,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GADlBsC,OAAK,EAAE;QAAArC,IAAA,GAAiB2F,eAAe,EAAE,CAAA;MAAA7F,GAAA,CAAAI,CAAA,GAAAoC,KAAA,CAAA9H,IAAA,EAAAuF,GAAA,EAAAD,GAAA,CAAAI,CAAA,CAAA,CAAA;AAAAF,MAAAA,IAAA,KAAAF,GAAA,CAAAK,CAAA,IAAAoC,YAAA,CAAA/H,IAAA,EAAAsF,eAAAA,EAAAA,GAAA,CAAAK,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAF,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAIvG,CAAC;;;;ACzED,MAAMoN,sBAAsB,GAAIrT,KAAwC,IAAI;AAExE,EAAA,MAAM,CAACsD,aAAa,EAAEC,aAAa,CAAC,GAAGC,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;EACjF,MAAM,CAACoR,aAAa,EAAEC,aAAa,CAAC,GAAG/P,YAAY,CAAe,KAAK,CAAC,CAAA;EACxE,MAAM,CAACgQ,uBAAuB,EAAEC,uBAAuB,CAAC,GAAGjQ,YAAY,EAAU,CAAA;EACjF,MAAM,CAACkQ,uBAAuB,EAAEC,uBAAuB,CAAC,GAAGnQ,YAAY,EAAU,CAAA;EACjF,MAAM,CAACoQ,iBAAiB,EAAEC,iBAAiB,CAAC,GAAGrQ,YAAY,CAAkB,EAAE,CAAC,CAAA;EAEhF,MAAM;AAACR,IAAAA,OAAAA;AAAO,GAAC,GAAGK,UAAU,CAAC3B,YAAY,CAAC,CAAA;AAC1C,EAAA,IAAIzB,IAAoB,CAAA;AAExB,EAAA,MAAM6T,UAAU,GAAG9T,KAAK,CAAC+T,MAAM,KAAK,MAAM,CAAA;AAC1C,EAAA,MAAMC,WAAW,GAAGhU,KAAK,CAAC+T,MAAM,KAAK,OAAO,CAAA;AAC5C,EAAA,MAAME,MAAM,GAAG,CAACH,UAAU,IAAI,CAACE,WAAW,CAAA;EAE1C,MAAME,YAA0B,GAAG,EAAE,CAAA;AAErC3M,EAAAA,SAAS,CAAC,MAAM;IACZ2M,YAAY,CAAC7R,OAAO,CAAE8R,CAAC,IAAIA,CAAC,EAAG,CAAC,CAAA;IAChCD,YAAY,CAACE,MAAM,GAAG,CAAC,CAAA;AAC3B,GAAC,CAAC,CAAA;AAEF/P,EAAAA,OAAO,CAAC,MAAM;AACV,IAAA,MAAMI,SAAkC,GAAG;MACvC4P,YAAY,EAAGvK,SAAS,IAAK;AACzBvG,QAAAA,aAAa,CAACD,aAAa,EAAE,CAAChB,QAAQ,CAAC,WAAW,EAAE,CAACwH,SAAS,CAAC,CAAC,CAAA;QAChEyJ,aAAa,CAAC,CAACzJ,SAAS,CAAC,CAAA;OAC5B;AACDwK,MAAAA,QAAQ,EAAE7B,KAAK,IAAIoB,iBAAiB,CAACpB,KAAK,CAAC;AAE3C;AACA8B,MAAAA,cAAc,EAAEjH,KAAK,IAAImG,uBAAuB,CAACnG,KAAK,CAAC;AACvDkH,MAAAA,qBAAqB,EAAEC,IAAI,IAAIxU,IAAI,CAACyU,UAAU,GAAGD,IAAI;AAErD;AACAd,MAAAA,uBAAuB,EAAErG,KAAK,IAAIqG,uBAAuB,CAACrG,KAAK,CAAA;KAClE,CAAA;AAED,IAAA,MAAMvJ,IAAI,GAAGf,OAAO,CAACiC,UAAU,CAAC,IAAI0P,sBAAsB,CAAC3U,KAAK,CAAC+T,MAAM,CAAC,CAAC,CAAA;AACzEhQ,IAAAA,IAAI,CAAC0J,OAAO,CAAChJ,SAAS,EAAExE,IAAI,CAAC,CAAA;IAE7BiU,YAAY,CAACU,IAAI,CAAE,MAAK5R,OAAO,CAAC4C,WAAW,CAAC7B,IAAI,CAAE,CAAC,CAAA;AACvD,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMsG,YAAY,GAAGnG,UAAU,CAAE,MAAKZ,aAAa,EAAE,CAACZ,QAAQ,EAAG,CAAC,CAAA;AAElE,EAAA,MAAMmS,aAAa,GAAGA,MAAArO,eAAA,CACrB0M,GAAG,EAAA;AAAA,IAAA,IAACC,IAAIA,GAAA;MAAA,OAAES,iBAAiB,EAAE,CAAA;AAAA,KAAA;AAAAR,IAAAA,QAAA,EAAIrP,IAAI,IAAAyC,eAAA,CACjCuK,aAAa,EAAA;AAAChN,MAAAA,IAAI,EAAEA,IAAAA;AAAI,KAAA,CAAA;GACtB,CAAA,CAAA;AAEP,EAAA,MAAM+Q,qBAAqB,GAAG5Q,UAAU,CAAC,OAAM;IAC3CoJ,KAAK,EAAEkG,uBAAuB,EAAC;AACnC,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,MAAMuB,YAAY,GAAG7Q,UAAU,CAAE,OAAM;IACnCoJ,KAAK,EAAEoG,uBAAuB,EAAE;IAChC,WAAW,EAAEA,uBAAuB,EAAE;IACtC,WAAW,EAAEA,uBAAuB,EAAC;AACzC,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,OAAA,CAGYI,UAAU,IAAA,CAAA,MAAA;IAAA,IAAA7N,IAAA,GAAAC,QAAA,EAAA,CAAA;IAAA,IAAAC,KAAA,GACAlG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;IAAAI,MAAA,CAAAJ,IAAA,EACR4O,aAAa,CAAA,CAAA;AAAAjO,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GADK,wBAAwB,GAAGnB,YAAY,EAAE;QAAAoB,IAAA,GAAe6H,aAAa,EAAE;QAAA5H,IAAA,GAAyBqJ,YAAY,EAAE,CAAA;AAAAvJ,MAAAA,GAAA,KAAAD,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAAZ,IAAA,EAAAsF,GAAA,CAAAI,CAAA,GAAAH,GAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAF,GAAA,CAAAK,CAAA,IAAAoC,YAAA,CAAA/H,IAAA,EAAAsF,aAAAA,EAAAA,GAAA,CAAAK,CAAA,GAAAH,IAAA,CAAA,CAAA;MAAAF,GAAA,CAAAM,CAAA,GAAAkC,KAAA,CAAA9H,IAAA,EAAAyF,IAAA,EAAAH,GAAA,CAAAM,CAAA,CAAA,CAAA;AAAA,MAAA,OAAAN,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAEhI,EAGN+N,WAAW,IAAA,CAAA,MAAA;IAAA,IAAArJ,KAAA,GAAAzE,QAAA,EAAA,CAAA;IAAA,IAAAkC,MAAA,GACDnI,IAAI,CAAA;IAAA,OAAAmI,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAuC,KAAA,CAAA,GAAJ1K,IAAI,GAAA0K,KAAA,CAAA;IAAAtE,MAAA,CAAAsE,KAAA,EACZkK,aAAa,CAAA,CAAA;AAAAjO,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAsE,IAAA,GADS,yBAAyB,GAAGxF,YAAY,EAAE;QAAAyF,IAAA,GAAewD,aAAa,EAAE;QAAAzC,IAAA,GAAyBkE,YAAY,EAAE,CAAA;AAAAlF,MAAAA,IAAA,KAAAtE,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAA8D,KAAA,EAAAY,GAAA,CAAAI,CAAA,GAAAkE,IAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAvE,GAAA,CAAAK,CAAA,IAAAoC,YAAA,CAAArD,KAAA,EAAAY,aAAAA,EAAAA,GAAA,CAAAK,CAAA,GAAAkE,IAAA,CAAA,CAAA;MAAAvE,GAAA,CAAAM,CAAA,GAAAkC,KAAA,CAAApD,KAAA,EAAAkG,IAAA,EAAAtF,GAAA,CAAAM,CAAA,CAAA,CAAA;AAAA,MAAA,OAAAN,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAmD,KAAA,CAAA;AAAA,GAAA,GAErI,EAGFsJ,MAAM,IAAA,CAAA,MAAA;IAAA,IAAApJ,KAAA,GAAAmK,SAAA,EAAA;MAAAjK,KAAA,GAAAF,KAAA,CAAAD,UAAA,CAAA;IAAA,IAAAQ,MAAA,GACInL,IAAI,CAAA;IAAA,OAAAmL,MAAA,KAAAhF,UAAAA,GAAAA,GAAA,CAAAgF,MAAA,EAAAP,KAAA,CAAA,GAAJ5K,IAAI,GAAA4K,KAAA,CAAA;IAAAxE,MAAA,CAAA0E,KAAA,EAEJ8J,aAAa,CAAA,CAAA;AAAAjO,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAA0J,IAAA,GAFC,qBAAqB,GAAG5K,YAAY,EAAE;QAAA6K,IAAA,GACFJ,qBAAqB,EAAE,CAAA;AAAAG,MAAAA,IAAA,KAAA1J,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAAgE,KAAA,EAAAU,GAAA,CAAAI,CAAA,GAAAsJ,IAAA,CAAA,CAAA;MAAA1J,GAAA,CAAAK,CAAA,GAAAmC,KAAA,CAAAhD,KAAA,EAAAmK,IAAA,EAAA3J,GAAA,CAAAK,CAAA,CAAA,CAAA;AAAA,MAAA,OAAAL,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAqD,KAAA,CAAA;GAG7E,GAAA,CAAA,CAAA;AAItB,CAAC;;;ACrFD,MAAMsK,cAAc,GAAGA,MAAK;AAExB,EAAA,MAAM,CAAC7R,aAAa,EAAEC,aAAa,CAAC,GAAGC,YAAY,CAAa,IAAItB,UAAU,EAAE,CAAC,CAAA;EACjF,MAAM,CAAC8O,SAAS,EAAEC,SAAS,CAAC,GAAGzN,YAAY,EAAU,CAAA;EAErD,MAAM;AAACR,IAAAA,OAAAA;AAAO,GAAC,GAAGK,UAAU,CAAC3B,YAAY,CAAC,CAAA;AAC1C,EAAA,IAAIzB,IAAoB,CAAA;EAExB,MAAMiU,YAA0B,GAAG,EAAE,CAAA;AACrC3M,EAAAA,SAAS,CAAE,MAAK;IACZ2M,YAAY,CAAC7R,OAAO,CAAE8R,CAAC,IAAIA,CAAC,EAAG,CAAC,CAAA;IAChCD,YAAY,CAACE,MAAM,GAAG,CAAC,CAAA;AAC3B,GAAC,CAAC,CAAA;AAEF/P,EAAAA,OAAO,CAAE,MAAM;AAEX,IAAA,MAAMI,SAA0B,GAAG;AAC/BC,MAAAA,mBAAmB,EAAEA,CAAC3D,IAAI,EAAEwB,EAAE,KAAKgB,aAAa,CAACD,aAAa,EAAE,CAAChB,QAAQ,CAACvB,IAAI,EAAEwB,EAAE,CAAC,CAAC;AACpF6S,MAAAA,qBAAqB,EAAE9C,MAAM,IAAIrB,SAAS,CAACqB,MAAM,CAAA;KACpD,CAAA;IAED,MAAMvO,IAAI,GAAGf,OAAO,CAACiC,UAAU,CAAC,IAAIoQ,cAAc,EAAE,CAAC,CAAA;IACrDtR,IAAI,CAAC0J,OAAO,CAAChJ,SAAS,EAAExE,IAAI,EAAEA,IAAI,CAAC,CAAA;IAEnCiU,YAAY,CAACU,IAAI,CAAE,MAAK5R,OAAO,CAAC4C,WAAW,CAAC7B,IAAI,CAAE,CAAC,CAAA;AACvD,GAAC,CAAC,CAAA;AAEF,EAAA,MAAM3D,WAAS,GAAG8D,UAAU,CAAE,MAAK;IAC/B,IAAIzB,GAAG,GAAGa,aAAa,EAAE,CAACZ,QAAQ,EAAE,CAAA;IACpC,OAAO,YAAY,GAAGD,GAAG,CAAA;AAC7B,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMqL,OAAK,GAAG5J,UAAU,CAAE,OAAM;IAC5BoO,MAAM,EAAEtB,SAAS,EAAE;IACnB,YAAY,EAAEA,SAAS,EAAC;AAC5B,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,OAAA,CAAA,MAAA;IAAA,IAAA/K,IAAA,GAAAC,QAAA,EAAA,CAAA;IAAA,IAAAC,KAAA,GACclG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;AAAAI,IAAAA,MAAA,CAAAJ,IAAA,EAAAO,eAAA,CACT6M,sBAAsB,EAAA;AAACU,MAAAA,MAAM,EAAE,MAAA;AAAM,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAA1N,IAAAA,MAAA,CAAAJ,IAAA,EAAAO,eAAA,CACrC6M,sBAAsB,EAAA;AAACU,MAAAA,MAAM,EAAE,IAAA;AAAI,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAA1N,IAAAA,MAAA,CAAAJ,IAAA,EAAAO,eAAA,CACnC6M,sBAAsB,EAAA;AAACU,MAAAA,MAAM,EAAE,OAAA;AAAO,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAnN,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GAHnBpL,WAAS,EAAE;QAAAqL,IAAA,GAASqC,OAAK,EAAE,CAAA;AAAAtC,MAAAA,GAAA,KAAAD,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAAZ,IAAA,EAAAsF,GAAA,CAAAI,CAAA,GAAAH,GAAA,CAAA,CAAA;MAAAD,GAAA,CAAAK,CAAA,GAAAmC,KAAA,CAAA9H,IAAA,EAAAwF,IAAA,EAAAF,GAAA,CAAAK,CAAA,CAAA,CAAA;AAAA,MAAA,OAAAL,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAM3D,CAAC;;AC5CD,MAAMqP,eAAe,GAAItV,KAKhB,IAAK;EAEV,MAAM;IAAEgD,OAAO;IAAEuS,YAAY;IAAEC,aAAa;AAAEvS,IAAAA,kBAAAA;AAAmB,GAAC,GAAGI,UAAU,CAAC3B,YAAY,CAAC,CAAA;EAE7F,MAAM;IAAC+T,WAAW;IAAE5C,QAAQ;AAAE6C,IAAAA,WAAAA;AAAW,GAAC,GAAG1V,KAAK,CAAA;EAClD,MAAM;AAACiH,IAAAA,WAAAA;AAAW,GAAC,GAAGwO,WAAW,CAAA;AAEjC,EAAA,MAAME,aAAa,GAAG1S,kBAAkB,CAACkC,GAAG,CAAC,+BAA+B,CAAC,CAAA;AAE7E,EAAA,MAAMyQ,OAAO,GAAG5S,OAAO,CAACiC,UAAU,CAAC,IAAI4Q,kBAAkB,CAAC5O,WAAW,CAACW,MAAM,CAAC,CAAC,CAAA;AAC9E,EAAA,MAAMkO,SAAS,GAAGF,OAAO,CAAC/U,MAAM,EAAE,CAAA;AAElC,EAAA,MAAMkV,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAEnD,QAAQ,CAACoD,SAAS,EAAE;AAC5BC,IAAAA,OAAO,EAAErD,QAAQ,CAACsD,UAAU,EAAE;AAC9BC,IAAAA,IAAI,EAAE,iBAAiB;AACvBC,IAAAA,WAAW,EAAEX,WAAW;AACxBY,IAAAA,MAAM,EAAER,SAAS;IACjBS,QAAQ,EAAEd,WAAW,CAAEe,aAAa;AACpCC,IAAAA,gBAAgB,EAAE,IAAA;GACrB,CAAA;EAED,MAAMC,gBAAgB,GAAGnB,YAAY,CAACoB,wBAAwB,CAACC,IAAI,CAACrB,YAAY,EAAEQ,cAAc,CAAC,CAAA;AAEjG,EAAA,MAAMc,SAAS,GAAGrB,aAAa,CAACsB,iBAAiB,EAAE,CAAA;AAEnD,EAAA,MAAMC,WAAW,GAAGxB,YAAY,CAACyB,QAAQ,CAAC;AACtCC,IAAAA,KAAK,EAAEtB,aAAa;AACpBuB,IAAAA,MAAM,EAAEpB,SAAS;AACjBqB,IAAAA,UAAU,EAAE,IAAI;IAChBC,cAAc,EAAEA,MAAM;MAAEvE,QAAQ,CAACwE,mBAAmB,EAAE,CAAA;KAAG;AACzDC,IAAAA,eAAe,EAAE5B,WAAW;IAC5BgB,gBAAgB;AAChBa,IAAAA,SAAS,EAAEV,SAAS,CAAC,qBAAqB,EAAE,aAAa,CAAA;AAC7D,GAAC,CAAC,CAAA;EAEF,MAAMW,eAAuC,GAAGT,WAAW,GAAGA,WAAW,CAACU,QAAQ,GAAGjQ,SAAS,CAAA;AAE9FD,EAAAA,SAAS,CAAE,MAAK;IACZ,IAAIiQ,eAAe,IAAE,IAAI,EAAE;AACvBA,MAAAA,eAAe,EAAE,CAAA;AACrB,KAAA;AACAxU,IAAAA,OAAO,CAAC4C,WAAW,CAACgQ,OAAO,CAAC,CAAA;AAChC,GAAC,CAAC,CAAA;EAEF,OAAApP,eAAA,CACKkR,MAAM,EAAA;AAACpX,IAAAA,KAAK,EAAEwV,SAAS;AAAA,IAAA,IAAA1C,QAAA,GAAA;MAAA,OAClBpT,KAAK,CAACoT,QAAQ,CAAA;AAAA,KAAA;AAAA,GAAA,CAAA,CAAA;AAG5B,CAAC;;ACvDD,MAAMuE,eAAe,GAAI3X,KAMxB,IACI;EAED,MAAM4X,cAAc,GAAG1T,UAAU,CAAC,MAAMlE,KAAK,CAACyV,WAAW,CAACxO,WAAW,CAAC,CAAA;AACtE,EAAA,MAAMA,WAAW,GAAGjH,KAAK,CAACyV,WAAW,CAACxO,WAAW,CAAA;;AAEjD;EACA,IAAI,CAACA,WAAW,EAAE;AAAE,IAAA,OAAA,EAAA,CAAA;AAAc,GAAA;AAElC,EAAA,MAAM4Q,OAAO,GAAG7X,KAAK,CAACyV,WAAW,CAACqC,KAAK,CAAA;AACvC,EAAA,MAAM7X,IAAI,GAAGD,KAAK,CAAC+X,MAAM,EAAE,CAAA;AAE3B,EAAA,OAAA,CAESF,OAAO,IAAArR,eAAA,CACH8O,eAAe,EAAA;AAAA,IAAA,IAACzC,QAAQA,GAAA;MAAA,OAAE7S,KAAK,CAAC6S,QAAQ,CAAA;AAAA,KAAA;AAAE6C,IAAAA,WAAW,EAAEzV,IAAI;AAAA,IAAA,IAAEwV,WAAWA,GAAA;MAAA,OAAEzV,KAAK,CAACyV,WAAW,CAAA;AAAA,KAAA;AAAA,IAAA,IAAArC,QAAA,GAAA;MAAA,OAAA5M,eAAA,CACvFqB,QAAQ,EAAA;AAAA,QAAA,IAACZ,WAAWA,GAAA;UAAA,OAAE2Q,cAAc,EAAE,CAAA;AAAA,SAAA;AAAApX,QAAAA,GAAAA,CAAA0H,EAAA,EAAA;AAAA,UAAA,IAAA/B,KAAA,GAAQnG,KAAK,CAACgY,WAAW,CAAA;UAAA,OAAA7R,KAAA,KAAAA,UAAAA,GAAAA,KAAA,CAAA+B,EAAA,IAAjBlI,KAAK,CAACgY,WAAW,GAAA9P,EAAA,CAAA;AAAA,SAAA;AAAA,OAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA,CAClD,EAErB,CAAC2P,OAAO,IAAArR,eAAA,CACJqB,QAAQ,EAAA;AAAA,IAAA,IAACZ,WAAWA,GAAA;MAAA,OAAE2Q,cAAc,EAAE,CAAA;AAAA,KAAA;AAAApX,IAAAA,GAAAA,CAAA0H,EAAA,EAAA;AAAA,MAAA,IAAAE,MAAA,GAAQpI,KAAK,CAACiY,YAAY,CAAA;MAAA,OAAA7P,MAAA,KAAAA,UAAAA,GAAAA,MAAA,CAAAF,EAAA,IAAlBlI,KAAK,CAACiY,YAAY,GAAA/P,EAAA,CAAA;AAAA,KAAA;GAAI,CAAA,CAAA,CAAA;AAIrF,CAAC;;;AC9BD,MAAMgQ,SAAS,GAAIlY,KAMlB,IAAK;EAEF,MAAM;AAAEgD,IAAAA,OAAAA;AAAQ,GAAC,GAAGK,UAAU,CAAC3B,YAAY,CAAC,CAAA;EAE5C,MAAMyW,WAAW,GAAIC,UAEpB,IAAK;AACF,IAAA,MAAMjR,IAAI,GAAGiR,UAAU,CAACC,QAAQ,EAAE,CAAA;IAClC,IAAI,CAAClR,IAAI,EAAE;AAAE,MAAA,OAAA,EAAA,CAAA;AAAc,KAAA;IAE3BI,SAAS,CAAC,MAAMvE,OAAO,CAAC4C,WAAW,CAACuB,IAAI,CAAC,CAAC,CAAA;AAC1C,IAAA,OAAAZ,IAAA,CAAUY,MAAAA,IAAI,CAACtG,MAAM,EAAE,CAAA,CAAA;GAC1B,CAAA;AAED,EAAA,OAAA,CAAA0F,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAAD,GAAA,GAAAC,IAAA,CAEUvG,MAAAA,CAAAA,CAAAA,KAAK,CAACsY,gBAAgB,CAAA,CAAA;AAAA,IAAA,OAAA,MAAtBhS,GAAA,EAAA,IAAAE,eAAA,CACG2R,WAAW,EAAA;MAACE,QAAQ,EAAEA,MAAM;QACzB,MAAME,qBAAqB,GAAGvY,KAAK,CAAC6S,QAAQ,CAAC2F,uBAAuB,EAAE,CAAA;QACtExY,KAAK,CAACyY,sBAAsB,CAACF,qBAAqB,CAACG,aAAa,EAAE,CAAC,CAAA;AACnE,QAAA,OAAOH,qBAAqB,CAAA;AAChC,OAAA;KAAI,CAAA,CAAA;AAAA,GAAA,GAAA,CAAA,EAAAhS,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAA4B,IAAA,GAAA5B,IAAA,CACNvG,MAAAA,CAAAA,CAAAA,KAAK,CAAC2Y,gBAAgB,CAAA,CAAA;AAAA,IAAA,OAAA,MAAtBxQ,IAAA,EAAA,IAAA3B,eAAA,CACG2R,WAAW,EAAA;MAACE,QAAQ,EAAEA,MAAMrY,KAAK,CAAC6S,QAAQ,CAAC+F,eAAe,EAAC;KAAI,CAAA,CAAA;AAAA,GAAA,GAAA,CAAA,EAAArS,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAAsS,IAAA,GAAAtS,IAAA,CAClEvG,MAAAA,CAAAA,CAAAA,KAAK,CAAC8Y,cAAc,CAAA,CAAA;AAAA,IAAA,OAAA,MAApBD,IAAA,EAAA,IAAArS,eAAA,CACG2R,WAAW,EAAA;MAACE,QAAQ,EAAEA,MAAMrY,KAAK,CAAC6S,QAAQ,CAACkG,iBAAiB,EAAC;KAAI,CAAA,CAAA;AAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAGlF,CAAC,CAAA;AAED,MAAMC,iBAAiB,GAAIhZ,KAY1B,IAAK;EAEF,MAAM4X,cAAc,GAAG1T,UAAU,CAAC,MAAMlE,KAAK,CAACiZ,WAAW,CAAChS,WAAW,CAAC,CAAA;AACtE,EAAA,MAAMiS,eAAe,GAAGhV,UAAU,CAAC,MAAMlE,KAAK,CAACiZ,WAAW,CAAChS,WAAW,IAAI,IAAI,CAAC,CAAA;;AAE/E;AACA;AACA;EACA,MAAMkS,sBAAsB,GAAGA,MAAM;AACjC,IAAA,MAAMnK,KAAK,GAAGhP,KAAK,CAACiZ,WAAW,CAACjK,KAAK,CAAA;AACrC,IAAA,OAAQA,KAAK,IAAIA,KAAK,CAACtM,QAAQ,GAAIsM,KAAK,CAACtM,QAAQ,EAAE,GAAGsM,KAAK,CAAA;GAC9D,CAAA;AAED,EAAA,MAAMoK,WAAW,GAAGA,MAAA,CAAA7S,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAA8S,IAAA,GAAA9S,IAAA,CAEX2S,MAAAA,CAAAA,CAAAA,eAAe,EAAE,CAAA,CAAA;AAAA,IAAA,OAAA,MAAjBG,IAAA,EAAA,IAAA9S,IAAA,CAAwB4S,sBAAsB,CAAM,CAAA;AAAA,GAAA,GAAA,CAAA,EAAA5S,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAA+S,IAAA,GAAA/S,IAAA,CACpDqR,MAAAA,CAAAA,CAAAA,cAAc,EAAE,CAAA,CAAA;AAAA,IAAA,OAAA,MAAhB0B,IAAA,EAAA,IAAA9S,eAAA,CAAqBqB,QAAQ,EAAA;AAAA,MAAA,IAACZ,WAAWA,GAAA;QAAA,OAAE2Q,cAAc,EAAE,CAAA;AAAA,OAAA;AAAApX,MAAAA,GAAAA,CAAA0H,EAAA,EAAA;AAAA,QAAA,IAAA/B,KAAA,GACnDnG,KAAK,CAACQ,GAAG,CAAA;QAAA,OAAA2F,KAAA,KAAAA,UAAAA,GAAAA,KAAA,CAAA+B,EAAA,IAATlI,KAAK,CAACQ,GAAG,GAAA0H,EAAA,CAAA;AAAA,OAAA;KAAG,CAAA,CAAA;GAE5B,GAAA,CAAA,CAAA,CAAA;AAED,EAAA,OAAA,CAAA3B,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAAgT,IAAA,GAAAhT,IAAA,CAGYvG,MAAAA,CAAAA,CAAAA,KAAK,CAACwZ,SAAS,CAAA,CAAA;AAAA,IAAA,OAAA,MAAfD,IAAA,EAAA,IAAA/S,eAAA,CACC0R,SAAS,EAAA;AAAA,MAAA,IACNS,gBAAgBA,GAAA;QAAA,OAAE3Y,KAAK,CAAC2Y,gBAAgB,CAAA;AAAA,OAAA;AAAA,MAAA,IACxCG,cAAcA,GAAA;QAAA,OAAE9Y,KAAK,CAAC8Y,cAAc,CAAA;AAAA,OAAA;AAAA,MAAA,IACpCR,gBAAgBA,GAAA;QAAA,OAAEtY,KAAK,CAACsY,gBAAgB,CAAA;AAAA,OAAA;AAAA,MAAA,IACxCG,sBAAsBA,GAAA;QAAA,OAAEzY,KAAK,CAACyY,sBAAsB,CAAA;AAAA,OAAA;AAAA,MAAA,IACpD5F,QAAQA,GAAA;QAAA,OAAE7S,KAAK,CAAC6S,QAAQ,CAAA;AAAA,OAAA;KAAI,CAAA,CAAA;AAAA,GAAA,GAAA,CAAA,EAAAtM,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAAkT,IAAA,GAAAlT,IAAA,CAGhCvG,MAAAA,CAAAA,CAAAA,KAAK,CAAC0Z,eAAe,CAAA,CAAA;AAAA,IAAA,OAAA,MAArBD,IAAA,EAAA,GAAA,CAAA,MAAA;MAAA,IAAAxT,IAAA,GAAAC,QAAA,EAAA,CAAA;AAAA,MAAA,IAAAkC,MAAA,GAEiGpI,KAAK,CAAC2Z,aAAa,CAAA;AAAA,MAAA,OAAAvR,MAAA,KAAA,UAAA,GAAAhC,GAAA,CAAAgC,MAAA,EAAAnC,IAAA,CAAA,GAAnBjG,KAAK,CAAC2Z,aAAa,GAAA1T,IAAA,CAAA;MAAAI,MAAA,CAAAJ,IAAA,EACvGmT,WAAW,CAAA,CAAA;MAAAxS,MAAA,CAAA,MAAAoH,YAAA,CAAA/H,IAAA,QADe,CAAOjG,KAAAA,EAAAA,KAAK,CAAC4Z,cAAe,CAAC,CAAA,CAAA,CAAA,CAAA;AAAA,MAAA,OAAA3T,IAAA,CAAA;KAI9DmT,GAAAA,GAAAA,WAAW,EAAE,CAAA;AAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAInC,CAAC;;;;AC3FD,MAAMS,2BAA2B,GAAGA,CAAC/B,KAAc,EAAEgC,UAAuB,EAAEjH,QAAkB,KAAK;AAEjG,EAAA,MAAMkH,GAAG,GAAGlH,QAAQ,CAACoD,SAAS,EAAE,CAAA;;AAEhC;AACA,EAAA,IAAI,CAAC6B,KAAK,IAAIgC,UAAU,CAACE,OAAO,IAAIF,UAAU,CAACE,OAAO,EAAE,EAAE;IACtD,MAAMC,GAAG,GAAI,CAAoCF,kCAAAA,EAAAA,GAAG,CAACpN,QAAQ,EAAG,CAA6R,4RAAA,CAAA,CAAA;IAC7VjD,CAAC,CAACwQ,MAAM,CAAC,MAAM3V,OAAO,CAACC,IAAI,CAACyV,GAAG,CAAC,EAAE,uBAAuB,GAAGpH,QAAQ,CAACoD,SAAS,EAAE,CAACtJ,QAAQ,EAAE,CAAC,CAAA;AAChG,GAAA;;AAEA;AACA,EAAA,IAAImL,KAAK,IAAIgC,UAAU,CAACK,gBAAgB,IAAIL,UAAU,CAACK,gBAAgB,EAAE,IAAE,IAAI,EAAE;IAC7E,MAAMF,GAAG,GAAI,CAAoCF,kCAAAA,EAAAA,GAAG,CAACpN,QAAQ,EAAG,CAA6S,4SAAA,CAAA,CAAA;IAC7WjD,CAAC,CAACwQ,MAAM,CAAC,MAAM3V,OAAO,CAACC,IAAI,CAACyV,GAAG,CAAC,EAAE,gCAAgC,GAAGpH,QAAQ,CAACoD,SAAS,EAAE,CAACtJ,QAAQ,EAAE,CAAC,CAAA;AACzG,GAAA;AACJ,CAAC,CAAA;AAED,MAAMyN,QAAQ,GAAIpa,KAIjB,IAAK;EAEF,MAAM;IAAE6S,QAAQ;IAAEwH,WAAW;AAAEC,IAAAA,UAAAA;AAAW,GAAC,GAAGta,KAAK,CAAA;EAEnD,MAAM,CAACua,aAAa,EAAEC,gBAAgB,CAAE,GAAGhX,YAAY,EAAiB,CAAA;EACxE,MAAM,CAACiS,WAAW,EAAEgF,cAAc,CAAE,GAAGjX,YAAY,EAAe,CAAA;EAElE,IAAIkX,iBAAiB,GAAG,CAAC,CAAA;EACzB,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGpX,YAAY,CAAW,CAACkX,iBAAiB,CAAC,CAAC,CAAA;EAErG,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGtX,YAAY,EAAa,CAAA;AAE7D,EAAA,MAAM,CAACuX,QAAQ,EAAEC,WAAW,CAAC,GAAGxX,YAAY,CAAmBqP,QAAQ,CAACoI,WAAW,EAAE,CAAC,CAAA;AACtF,EAAA,MAAM,CAACC,KAAK,EAAEtO,QAAQ,CAAC,GAAGpJ,YAAY,CAASqP,QAAQ,CAACsI,oBAAoB,EAAE,CAAC,CAAA;EAC/E,MAAM,CAACC,mBAAmB,EAAE3C,sBAAsB,CAAC,GAAGjV,YAAY,EAAU,CAAA;EAC5E,MAAM,CAAC8U,gBAAgB,EAAE+C,mBAAmB,CAAC,GAAG7X,YAAY,CAAU,KAAK,CAAC,CAAA;EAC5E,MAAM,CAACsV,cAAc,EAAEwC,iBAAiB,CAAC,GAAG9X,YAAY,CAAU,KAAK,CAAC,CAAA;EACxE,MAAM,CAACmV,gBAAgB,EAAE4C,mBAAmB,CAAC,GAAG/X,YAAY,CAAU,KAAK,CAAC,CAAA;AAE5E,EAAA,MAAMgY,YAAY,GAAG3I,QAAQ,CAAC4I,cAAc,EAAE,CAAA;AAE9C,EAAA,IAAIC,YAA4B,CAAA;AAChC,EAAA,IAAIC,UAAuB,CAAA;EAC3B,MAAMhC,aAAa,GAAIiC,GAAgB,IAAI;AACvCD,IAAAA,UAAU,GAAGC,GAAG,CAAA;GACnB,CAAA;AAED,EAAA,IAAI3b,IAAoB,CAAA;EACxB,IAAI4b,YAAkC,GAAG,IAAI,CAAA;EAE7C,IAAI/B,UAA8B,GAAG,IAAI,CAAA;AACzC,EAAA,MAAMgC,YAAY,GAAGA,CAAChE,KAAc,EAAEtX,GAAgB,KAAI;AACtDsZ,IAAAA,UAAU,GAAGtZ,GAAG,CAAA;IAChB,IAAI,CAACsZ,UAAU,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAA;AAE3BD,IAAAA,2BAA2B,CAAC/B,KAAK,EAAEgC,UAAU,EAAEjH,QAAQ,CAAC,CAAA;IAExD,MAAMkJ,0BAA0B,GAAGjC,UAAU,CAACkC,mBAAmB,IAAIlC,UAAU,CAACkC,mBAAmB,EAAE,CAAA;AACrG,IAAA,IAAID,0BAA0B,EAAE;AAC5B;AACArW,MAAAA,UAAU,CAAC,MAAM;AACbmN,QAAAA,QAAQ,CAACoJ,WAAW,CAAC,IAAI,CAAC,CAAA;AAC1BpJ,QAAAA,QAAQ,CAACqJ,SAAS,CAAC,IAAI,CAAC,CAAA;AAC5B,OAAC,CAAC,CAAA;AACN,KAAA;IAEA,MAAMC,MAAM,GAAG3b,GAAU,CAAA;IACzB,IAAI2b,MAAM,CAACC,gBAAgB,EAAE;MACzB1W,UAAU,CAAC,MAAMyW,MAAM,CAACC,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAA;AAClD,KAAA;GACH,CAAA;EACD,MAAMC,iBAAiB,GAAI7b,GAAgB,IAAKsb,YAAY,CAAC,IAAI,EAAEtb,GAAG,CAAC,CAAA;EACvE,MAAM8b,kBAAkB,GAAI9b,GAAgB,IAAKsb,YAAY,CAAC,KAAK,EAAEtb,GAAG,CAAC,CAAA;AAEzE,EAAA,MAAM4M,eAAe,GAAG,IAAIC,eAAe,CAAC,MAAMpN,IAAI,CAAC,CAAA;EAEvD,MAAMuZ,SAAS,GAAGtV,UAAU,CAAC,MAAMqW,aAAa,EAAE,IAAI,IAAI,KAAKjC,gBAAgB,EAAE,IAAIK,gBAAgB,EAAE,IAAIG,cAAc,EAAE,CAAE,CAAC,CAAA;EAC9H,MAAMY,eAAe,GAAGxV,UAAU,CAAC,MAAMsX,YAAY,IAAIhC,SAAS,EAAE,CAAC,CAAA;AAErE,EAAA,MAAMI,cAAc,GAAG/G,QAAQ,CAACb,aAAa,EAAE,CAAA;AAE/C3N,EAAAA,OAAO,CAAE,MAAM;IACX,IAAI,CAACwO,QAAQ,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAA;AAEzB,IAAA,MAAMpO,SAAoB,GAAG;AACzBC,MAAAA,mBAAmB,EAAEA,CAAC3D,IAAI,EAAEwB,EAAE,KAAK6K,eAAe,CAAC1I,mBAAmB,CAAC3D,IAAI,EAAEwB,EAAE,CAAC;AAChFuY,MAAAA,aAAa,EAAGyB,MAAiB,IAAKzB,aAAa,CAACyB,MAAM,CAAC;MAC3DC,mBAAmB,EAAEA,MAAMvc,IAAI;AAC/Bob,MAAAA,mBAAmB,EAAEoB,OAAO,IAAIpB,mBAAmB,CAACoB,OAAO,CAAC;AAC5DnB,MAAAA,iBAAiB,EAAEmB,OAAO,IAAInB,iBAAiB,CAACmB,OAAO,CAAC;AACxDlB,MAAAA,mBAAmB,EAAEkB,OAAO,IAAIlB,mBAAmB,CAACkB,OAAO,CAAC;MAE5DC,aAAa,EAAEA,MAAM5C,UAAU;AAC/B6C,MAAAA,eAAe,EAAEA,MAAMd,YAAY,GAAGA,YAAY,GAAG,IAAI;MACzDe,gBAAgB,EAAEA,MAAMjB,UAAU,GAAGA,UAAU,GAAGD,YAAY,GAAGA,YAAY,GAAGzb,IAAI;AAEpFua,MAAAA,gBAAgB,EAAEA,CAACvT,WAAW,EAAE+H,KAAK,EAAE6N,KAAK,KAAK;AAC7CrC,QAAAA,gBAAgB,CAAC;UACbxL,KAAK;UACL/H,WAAW;AACX4V,UAAAA,KAAAA;AACJ,SAAC,CAAC,CAAA;OACL;AAEDpC,MAAAA,cAAc,EAAEA,CAACxT,WAAW,EAAE6Q,KAAK,EAAEtB,aAAa,KAAK;AACnD,QAAA,IAAIvP,WAAW,EAAE;AACb;AACAwT,UAAAA,cAAc,CAAC;AACXxT,YAAAA,WAAW,EAAEA,WAAY;YACzB6Q,KAAK;AACLtB,YAAAA,aAAAA;AACJ,WAAC,CAAC,CAAA;UACF,IAAI,CAACsB,KAAK,EAAE;YACR0C,gBAAgB,CAAChT,SAAS,CAAC,CAAA;AAC/B,WAAA;AACJ,SAAC,MAAM;AACH;UACAiT,cAAc,CAACjT,SAAS,CAAC,CAAA;AAC7B,SAAA;AACJ,OAAA;KACH,CAAA;AAEDqL,IAAAA,QAAQ,CAACpF,OAAO,CAAChJ,SAAS,EAAExE,IAAI,EAAEyb,YAAY,EAAErB,WAAW,EAAEC,UAAU,CAAC,CAAA;AAC5E,GAAC,CAAC,CAAA;AAEF5J,EAAAA,YAAY,CAAC,MAAM;AACf,IAAA,MAAMoM,SAAS,GAAG,CAAC,CAACrH,WAAW,EAAE,CAAA;IACjC,MAAMuE,OAAO,GAAG8C,SAAS,IAAI,CAAC,CAACrH,WAAW,EAAE,EAAEqC,KAAK,CAAA;IAEnD1K,eAAe,CAAC1I,mBAAmB,CAAC,eAAe,EAAE,CAACgV,eAAe,EAAE,CAAC,CAAA;IACxEtM,eAAe,CAAC1I,mBAAmB,CAAC,wBAAwB,EAAEoY,SAAS,IAAI,CAAC9C,OAAO,CAAC,CAAA;IACpF5M,eAAe,CAAC1I,mBAAmB,CAAC,uBAAuB,EAAEoY,SAAS,IAAI9C,OAAO,CAAC,CAAA;IAClF5M,eAAe,CAAC1I,mBAAmB,CAAC,4BAA4B,EAAE,CAACoY,SAAS,IAAI9C,OAAO,CAAC,CAAA;IACxFnH,QAAQ,CAACkK,UAAU,EAAE,EAAEC,mBAAmB,CAACF,SAAS,CAAC,CAAA;AACzD,GAAC,CAAC,CAAA;;AAEF;EACA,IAAIG,eAAe,GAAG,KAAK,CAAA;AAC3BvM,EAAAA,YAAY,CAAC,MAAM;AACf,IAAA,MAAM3I,OAAO,GAAGwS,aAAa,EAAE,CAAA;AAC/B,IAAA,MAAM2C,gBAAgB,GAAGnV,OAAO,IAAI,IAAI,IAAIA,OAAO,CAACd,WAAW,IAAI,IAAI,IAAI,CAACc,OAAO,CAACd,WAAW,CAACe,sBAAsB,CAAA;IACtH,IAAI,CAACkV,gBAAgB,EAAE;AACnBD,MAAAA,eAAe,GAAG,KAAK,CAAA;AACvB,MAAA,OAAA;AACJ,KAAA;IACA,IAAI,CAACA,eAAe,EAAE;AAClBA,MAAAA,eAAe,GAAG,IAAI,CAAA;AACtB,MAAA,OAAA;AACJ,KAAA;IAEA,IAAI,CAACpB,YAAY,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAA;AAE7B,IAAA,MAAMjU,MAAM,GAAGG,OAAO,CAACd,WAAW,CAAEW,MAAM,CAAA;AAC1C,IAAA,MAAMuV,MAAM,GAAGtB,YAAY,CAACzX,OAAO,GAAGyX,YAAY,CAACzX,OAAO,CAACwD,MAAM,CAAC,GAAG,KAAK,CAAA;IAC1E,IAAIuV,MAAM,IAAI,IAAI,EAAE;AAChB;AACA;AACA;AACAzC,MAAAA,iBAAiB,EAAE,CAAA;AACnBE,MAAAA,wBAAwB,CAAC,CAACF,iBAAiB,CAAC,CAAC,CAAA;AACjD,KAAA;AACJ,GAAC,CAAC,CAAA;;AAEF;AACA;AACA;AACA;AACA,EAAA,MAAM3C,MAAM,GAAGA,MAAM9X,IAAI,CAAA;AAEzB,EAAA,MAAMmZ,WAAW,GAAGA,MAAA5S,CAAAA,eAAA,CAEP0M,GAAG,EAAA;AAAA,IAAA,IAACC,IAAIA,GAAA;MAAA,OACLwH,qBAAqB,EAAE,CAAA;AAAA,KAAA;IAAAvH,QAAA,EAAGA,MAAA7M,IAAA,CAAA,CAAA,MAAA;AAAA,MAAA,IAAA4B,IAAA,GAAA5B,IAAA,CAEpBgU,MAAAA,CAAAA,CAAAA,aAAa,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAAfpS,IAAA,EAAA,IAAA3B,eAAA,CAAoBwS,iBAAiB,EAAA;AAAA,QAAA,IACnCC,WAAWA,GAAA;UAAA,OAAEsB,aAAa,EAAE,CAAA;AAAA,SAAA;AAAA/Z,QAAAA,GAAAA,CAAA0H,EAAA,EAAA;UAAA,IAAA/B,KAAA,GACvB0V,YAAY,CAAA;UAAA,OAAA1V,KAAA,kBAAAA,KAAA,CAAA+B,EAAA,CAAZ2T,GAAAA,YAAY,GAAA3T,EAAA,CAAA;AAAA,SAAA;AACjB0R,QAAAA,cAAc,EAAEA,cAAc;AAAA,QAAA,IAC9BF,eAAeA,GAAA;UAAA,OAAEA,eAAe,EAAE,CAAA;AAAA,SAAA;AAClC7G,QAAAA,QAAQ,EAAEA,QAAQ;AAAA,QAAA,IAClB8F,gBAAgBA,GAAA;UAAA,OAAEA,gBAAgB,EAAE,CAAA;AAAA,SAAA;AAAA,QAAA,IACpCG,cAAcA,GAAA;UAAA,OAAEA,cAAc,EAAE,CAAA;AAAA,SAAA;AAAA,QAAA,IAChCR,gBAAgBA,GAAA;UAAA,OAAEA,gBAAgB,EAAE,CAAA;AAAA,SAAA;AACpCG,QAAAA,sBAAsB,EAAEA,sBAAsB;AAAA,QAAA,IAC9Ce,SAASA,GAAA;UAAA,OAAEA,SAAS,EAAE,CAAA;AAAA,SAAA;AACtBG,QAAAA,aAAa,EAAEA,aAAAA;OACjB,CAAA,CAAA;AAAA,KAAA,GAAA,CAAA;AACH,GAAA,CAAA,EAAApT,IAAA,CAAA,CAAA,MAAA;AAAA,IAAA,IAAAD,GAAA,GAAAC,IAAA,CAELkP,MAAAA,CAAAA,CAAAA,WAAW,EAAE,CAAA,CAAA;AAAA,IAAA,OAAA,MAAbnP,GAAA,EAAA,IAAAE,eAAA,CACGmR,eAAe,EAAA;AAAA,MAAA,IACZlC,WAAWA,GAAA;QAAA,OAAEA,WAAW,EAAE,CAAA;AAAA,OAAA;AAC1B5C,MAAAA,QAAQ,EAAEA,QAAQ;AAClBkF,MAAAA,MAAM,EAAEA,MAAM;AACdE,MAAAA,YAAY,EAAEqE,kBAAkB;AAChCtE,MAAAA,WAAW,EAAEqE,iBAAAA;KACf,CAAA,CAAA;GAEV,GAAA,CAAA,CAAA,CAAA;AAER,EAAA,OAAA,CAAA,MAAA;IAAApW,IAAAA,IAAA,GAAAC,QAAA,EAAA,CAAA;MAAAD,IAAA,CAAA2E,WAAA;IAAA,IAAAxC,MAAA,GAEcnI,IAAI,CAAA;IAAA,OAAAmI,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAnC,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;AAAAI,IAAAA,MAAA,CAAAJ,IAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAA4S,IAAA,GAAAtS,IAAA,CAMVmT,MAAAA,CAAAA,CAAAA,eAAe,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAAjBb,IAAA,EAAA,GAAA,CAAA,MAAA;QAAA,IAAAhO,KAAA,GAAAmK,SAAA,EAAA,CAAA;QAAA,IAAA5J,MAAA,GAE+DsQ,YAAY,CAAA;QAAA,OAAAtQ,MAAA,KAAAhF,UAAAA,GAAAA,GAAA,CAAAgF,MAAA,EAAAP,KAAA,CAAA,GAAZ6Q,YAAY,GAAA7Q,KAAA,CAAA;QAAAxE,MAAA,CAAAwE,KAAA,EAC7DuO,WAAW,CAAA,CAAA;AAAA,QAAA,OAAAvO,KAAA,CAAA;OAGnBuO,GAAAA,GAAAA,WAAW,EAAE,CAAA;AAAA,KAAA,GAAA,EAAA,IAAA,CAAA,CAAA;AAAAxS,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GAXXqP,UAAU,EAAE;QAAApP,IAAA,GACTsP,QAAQ,EAAE;AAAArP,QAAAA,IAAA,GACdmH,QAAQ,CAACzI,eAAe,EAAE;QAAAyF,IAAA,GACxBqL,KAAK,EAAE,CAAA;MAAA3P,GAAA,CAAAI,CAAA,GAAAoC,KAAA,CAAA9H,IAAA,EAAAuF,GAAA,EAAAD,GAAA,CAAAI,CAAA,CAAA,CAAA;AAAAF,MAAAA,IAAA,KAAAF,GAAA,CAAAK,CAAA,IAAAoC,YAAA,CAAA/H,IAAA,EAAAsF,UAAAA,EAAAA,GAAA,CAAAK,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAH,GAAA,CAAAM,CAAA,IAAAmC,YAAA,CAAA/H,IAAA,EAAAsF,MAAAA,EAAAA,GAAA,CAAAM,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAmE,MAAAA,IAAA,KAAAtE,GAAA,CAAAwE,CAAA,IAAA/B,YAAA,CAAA/H,IAAA,EAAAsF,QAAAA,EAAAA,GAAA,CAAAwE,CAAA,GAAAF,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAtE,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAA;AAAAuI,MAAAA,CAAA,EAAAvI,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAY5B,CAAC;;;ACvND,MAAMmX,sBAAsB,GAAGA,CAACnO,IAAe,EAAEwC,IAAgB,EAAE4L,QAAiB,KAAgB;AAChG,EAAA,IAAIA,QAAQ,EAAE;AACV,IAAA,MAAM5a,GAAc,GAAG;AAAEZ,MAAAA,IAAI,EAAE4P,IAAI;MAAE6L,aAAa,EAAE,IAAIC,GAAG,EAAC;KAAG,CAAA;AAC/D9L,IAAAA,IAAI,CAACpP,OAAO,CAAC0P,CAAC,IAAItP,GAAG,CAAC6a,aAAa,CAACE,GAAG,CAACzL,CAAC,CAACC,aAAa,EAAE,EAAED,CAAC,CAAC,CAAC,CAAA;AAE9D,IAAA,OAAOtP,GAAG,CAAA;AACd,GAAA;;AAEA;AACA;EACA,MAAMgb,YAAwB,GAAG,EAAE,CAAA;EACnC,MAAMC,YAAwB,GAAG,EAAE,CAAA;AACnC,EAAA,MAAMC,gBAAuC,GAAG,IAAIJ,GAAG,EAAE,CAAA;AACzD,EAAA,MAAMK,OAA8B,GAAG,IAAIL,GAAG,EAAE,CAAA;AAEhD9L,EAAAA,IAAI,CAACpP,OAAO,CAAC0P,CAAC,IAAI6L,OAAO,CAACJ,GAAG,CAACzL,CAAC,CAACC,aAAa,EAAE,EAAED,CAAC,CAAC,CAAC,CAAA;AAEpD9C,EAAAA,IAAI,CAACpN,IAAI,CAACQ,OAAO,CAAC0P,CAAC,IAAI;AACnB,IAAA,MAAM8L,UAAU,GAAG9L,CAAC,CAACC,aAAa,EAAE,CAAA;AACpC,IAAA,IAAI4L,OAAO,CAACzL,GAAG,CAAC0L,UAAU,CAAC,EAAE;AACzBJ,MAAAA,YAAY,CAAC7I,IAAI,CAAC7C,CAAC,CAAC,CAAA;AACpB4L,MAAAA,gBAAgB,CAACH,GAAG,CAACK,UAAU,EAAE9L,CAAC,CAAC,CAAA;AACvC,KAAA;AACJ,GAAC,CAAC,CAAA;AAEFN,EAAAA,IAAI,CAACpP,OAAO,CAAC0P,CAAC,IAAI;AACd,IAAA,MAAM8L,UAAU,GAAG9L,CAAC,CAACC,aAAa,EAAE,CAAA;IACpC,IAAI,CAAC/C,IAAI,CAACqO,aAAa,CAACnL,GAAG,CAAC0L,UAAU,CAAC,EAAE;AACrCH,MAAAA,YAAY,CAAC9I,IAAI,CAAC7C,CAAC,CAAC,CAAA;AACpB4L,MAAAA,gBAAgB,CAACH,GAAG,CAACK,UAAU,EAAE9L,CAAC,CAAC,CAAA;AACvC,KAAA;AACJ,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMtP,GAAc,GAAG;AACnBZ,IAAAA,IAAI,EAAE,CAAC,GAAG4b,YAAY,EAAE,GAAGC,YAAY,CAAC;AACxCJ,IAAAA,aAAa,EAAEK,gBAAAA;GAClB,CAAA;AAED,EAAA,OAAOlb,GAAG,CAAA;AACd,CAAC,CAAA;AAED,MAAMqb,OAAO,GAAIlW,MAA2D,IAAK;EAE7E,MAAM;IAAEmW,OAAO;AAAEC,IAAAA,aAAAA;AAAc,GAAC,GAAGpW,MAAM,CAAA;EAEzC,MAAM,CAACqW,WAAW,EAAEC,WAAW,CAAC,GAAG1a,YAAY,EAAU,CAAA;EACzD,MAAM,CAAC2a,QAAQ,EAAEC,QAAQ,CAAC,GAAG5a,YAAY,EAAU,CAAA;EACnD,MAAM,CAAC6a,iBAAiB,EAAEC,iBAAiB,CAAC,GAAG9a,YAAY,EAAU,CAAA;AACrE,EAAA,MAAM,CAACyX,WAAW,EAAED,WAAW,CAAC,GAAGxX,YAAY,CAAqBua,OAAO,CAAC9C,WAAW,EAAE,CAAC,CAAA;EAC1F,MAAM,CAACsD,aAAa,EAAEzD,aAAa,CAAC,GAAGtX,YAAY,EAAY,CAAA;AAC/D,EAAA,MAAM,CAAC8N,YAAY,EAAEC,YAAY,CAAC,GAAG/N,YAAY,CAAY;AAAE3B,IAAAA,IAAI,EAAE,EAAE;IAAEyb,aAAa,EAAE,IAAIC,GAAG,EAAC;AAAE,GAAC,CAAC,CAAA;EACpG,MAAM,CAACiB,uBAAuB,EAAEC,uBAAuB,CAAC,GAAGjb,YAAY,EAAmB,CAAA;EAC1F,MAAM,CAACkb,WAAW,EAAEC,WAAW,CAAC,GAAGnb,YAAY,CAAU,KAAK,CAAC,CAAA;;AAE/D;AACA;AACA,EAAA,MAAM,CAAC0N,MAAM,EAAEC,MAAM,CAAC,GAAG3N,YAAY,CAAqBua,OAAO,CAACa,gBAAgB,CAACZ,aAAa,CAAC,CAAC,CAAA;AAClG,EAAA,MAAM,CAACa,YAAY,EAAEC,YAAY,CAAC,GAAGtb,YAAY,CAAqBua,OAAO,CAACgB,mBAAmB,CAACf,aAAa,CAAC,CAAC,CAAA;AAEjH,EAAA,IAAI/d,IAAoB,CAAA;AACxB,EAAA,IAAI+e,gBAA+B,CAAA;EAEnC,MAAMC,eAAe,GAAIC,MAAqB,IAAI;AAC9CF,IAAAA,gBAAgB,GAAGE,MAAM,CAAA;GAC5B,CAAA;AAEDxO,EAAAA,YAAY,CAAC,MAAM;AACf,IAAA,MAAMzJ,WAAW,GAAGuX,uBAAuB,EAAE,CAAA;IAC7C,IAAI,CAACvX,WAAW,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAA;IAE5B,IAAIkY,QAAQ,GAAG,CAAC,CAAA;;AAEhB;AACA;AACA;AACA;IACA,MAAMC,QAAQ,GAAGA,MAAK;AAClB,MAAA,MAAMlI,MAAM,GAAGjX,IAAI,CAAC2K,UAAyB,CAAA;AAC7C,MAAA,IAAIsM,MAAM,EAAE;AACR6G,QAAAA,OAAO,CAACsB,wBAAwB,CAACnI,MAAM,CAAC,CAAA;AACxC,QAAA,OAAA;AACJ,OAAA;MAEA,IAAIiI,QAAQ,IAAE,EAAE,EAAE;AAAE,QAAA,OAAA;AAAQ,OAAA;AAE5BA,MAAAA,QAAQ,EAAE,CAAA;AACVzZ,MAAAA,UAAU,CAAC0Z,QAAQ,EAAE,CAAC,CAAC,CAAA;KAC1B,CAAA;AAEDA,IAAAA,QAAQ,EAAE,CAAA;AACd,GAAC,CAAC,CAAA;AAEF/a,EAAAA,OAAO,CAAC,MAAM;AACV;AACA;AACA;AACA,IAAA,IAAI,CAAC0Z,OAAO,CAACuB,OAAO,EAAE,EAAE;AAAG,MAAA,OAAA;AAAQ,KAAA;AAEnC,IAAA,MAAMlS,eAAe,GAAG,IAAIC,eAAe,CAAC,MAAMpN,IAAI,CAAC,CAAA;AAEvD,IAAA,MAAMwE,SAAmB,GAAG;AACxB;AACA;AACA0M,MAAAA,MAAM,EAAEnC,KAAK,IAAImC,MAAM,CAACnC,KAAK,CAAC;AAC9B8P,MAAAA,YAAY,EAAE9P,KAAK,IAAI8P,YAAY,CAAC9P,KAAK,CAAC;AAE1C;AACA;AACAtK,MAAAA,mBAAmB,EAAEA,CAAC3D,IAAI,EAAEwB,EAAE,KAAK6K,eAAe,CAAC1I,mBAAmB,CAAC3D,IAAI,EAAEwB,EAAE,CAAC;AAEhFoc,MAAAA,WAAW,EAAEtB,QAAQ,IAAIsB,WAAW,CAACtB,QAAQ,CAAC;AAC9Ca,MAAAA,WAAW,EAAElP,KAAK,IAAIkP,WAAW,CAAClP,KAAK,CAAC;AACxCoP,MAAAA,QAAQ,EAAEpP,KAAK,IAAIoP,QAAQ,CAACpP,KAAK,CAAC;AAClCsP,MAAAA,iBAAiB,EAAEtP,KAAK,IAAIsP,iBAAiB,CAACtP,KAAK,CAAC;AACpD8L,MAAAA,aAAa,EAAGyB,MAAgB,IAAKzB,aAAa,CAACyB,MAAM,CAAC;AAC1D;AACA;AACAhL,MAAAA,YAAY,EAAEE,IAAI,IAAIF,YAAY,CAAC6L,sBAAsB,CAAC9L,YAAY,EAAE,EAAEG,IAAI,EAAEiN,WAAW,EAAE,CAAC,CAAC;AAC/Fa,MAAAA,aAAa,EAAEtY,WAAW,IAAIwX,uBAAuB,CAACxX,WAAW,CAAC;MAClEuY,wBAAwB,EAAEA,MAAKR,gBAAgB;MAC/CS,gBAAgB,EAAEC,gBAAgB,IAAI;AAClC,QAAA,IAAI,CAACV,gBAAgB,IAAI,CAACA,gBAAgB,CAAC5a,OAAO,EAAE;AAChD,UAAA,OAAO,KAAK,CAAA;AAChB,SAAA;AACA,QAAA,OAAO4a,gBAAgB,CAAC5a,OAAO,CAACsb,gBAAgB,EAAE,CAAC,CAAA;AACvD,OAAA;KACH,CAAA;IACD3B,OAAO,CAACtQ,OAAO,CAAChJ,SAAS,EAAExE,IAAI,EAAE+d,aAAa,CAAC,CAAA;IAC/CzW,SAAS,CAAC,MAAMwW,OAAO,CAAC4B,SAAS,CAAC3B,aAAa,CAAC,CAAC,CAAA;AACrD,GAAC,CAAC,CAAA;AAGF,EAAA,MAAM4B,YAAY,GAAG1b,UAAU,CAAC,MAAM;AAClC,IAAA,MAAMzB,GAAG,GAAG;MACR8P,GAAG,EAAErB,MAAM,EAAE;MACb2O,SAAS,EAAEhB,YAAY,EAAC;KAC3B,CAAA;IAEDlc,MAAM,CAACmd,MAAM,CAACrd,GAAG,EAAE8b,aAAa,EAAE,CAAC,CAAA;AACnC,IAAA,OAAO9b,GAAG,CAAA;AACd,GAAC,CAAC,CAAA;EAEF,MAAMsd,WAAW,GAAG7b,UAAU,CAAE,MAAKoN,YAAY,EAAE,IAAE,IAAK,CAAC,CAAA;EAC3D,MAAM0O,eAAe,GAAG9b,UAAU,CAAE,MAAKsa,uBAAuB,EAAE,IAAE,IAAK,CAAC,CAAA;AAE1E,EAAA,MAAMyB,YAAY,GAAGA,MAAAzZ,eAAA,CACZ0M,GAAG,EAAA;AAAA,IAAA,IAACC,IAAIA,GAAA;AAAA,MAAA,OAAE7B,YAAY,EAAE,CAACzP,IAAI,CAAA;AAAA,KAAA;AAAAuR,IAAAA,QAAA,EAAIP,QAAQ,IAAArM,eAAA,CACrC4T,QAAQ,EAAA;AACDvH,MAAAA,QAAQ,EAAGA,QAAQ;AAAA,MAAA,IACnByH,UAAUA,GAAA;AAAA,QAAA,OAAGyD,OAAO,CAACjB,SAAS,EAAE,CAAA;AAAA,OAAA;AAAA,MAAA,IAChCzC,WAAWA,GAAA;AAAA,QAAA,OAAG0D,OAAO,CAACpM,aAAa,EAAE,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA;GAGxD,CAAA,CAAA;AAED,EAAA,MAAMuO,gBAAgB,GAAGA,MAAA1Z,eAAA,CACpBqB,QAAQ,EAAA;AAAA,IAAA,IAACZ,WAAWA,GAAA;MAAA,OAAGuX,uBAAuB,EAAE,CAAA;AAAA,KAAA;AAAAhe,IAAAA,GAAA,EAASye,eAAAA;GAC7D,CAAA,CAAA;AAED,EAAA,OAAA,CAAA,MAAA;IAAA,IAAAhZ,IAAA,GAAAC,QAAA,EAAA,CAAA;IAAA,IAAAC,KAAA,GAEclG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;AAAAI,IAAAA,MAAA,CAAAJ,IAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAAK,GAAA,GAAAC,IAAA,CAQRyZ,MAAAA,CAAAA,CAAAA,eAAe,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAAjB1Z,GAAA,EAAA,IAAqB4Z,gBAAgB,EAAE,CAAA;AAAA,KAAA,GAAA,EAAA,IAAA,CAAA,CAAA;AAAA7Z,IAAAA,MAAA,CAAAJ,IAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAAkC,IAAA,GAAA5B,IAAA,CACvCwZ,MAAAA,CAAAA,CAAAA,WAAW,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAAb5X,IAAA,EAAA,IAAiB8X,YAAY,EAAE,CAAA;AAAA,KAAA,GAAA,EAAA,IAAA,CAAA,CAAA;AAAArZ,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GAPzBoU,YAAY,EAAE;QAAAnU,IAAA,GACVwS,WAAW,EAAE;QAAAvS,IAAA,GAChByS,QAAQ,EAAE;QAAAtO,IAAA,GACAwO,iBAAiB,EAAE;QAAAvO,IAAA,GAC3BmL,WAAW,EAAE,CAAA;MAAA1P,GAAA,CAAAI,CAAA,GAAAoC,KAAA,CAAA9H,IAAA,EAAAuF,GAAA,EAAAD,GAAA,CAAAI,CAAA,CAAA,CAAA;AAAAF,MAAAA,IAAA,KAAAF,GAAA,CAAAK,CAAA,IAAAoC,YAAA,CAAA/H,IAAA,EAAAsF,WAAAA,EAAAA,GAAA,CAAAK,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAH,GAAA,CAAAM,CAAA,IAAAmC,YAAA,CAAA/H,IAAA,EAAAsF,QAAAA,EAAAA,GAAA,CAAAM,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAmE,MAAAA,IAAA,KAAAtE,GAAA,CAAAwE,CAAA,IAAA/B,YAAA,CAAA/H,IAAA,EAAAsF,kBAAAA,EAAAA,GAAA,CAAAwE,CAAA,GAAAF,IAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAvE,GAAA,CAAAyE,CAAA,IAAAhC,YAAA,CAAA/H,IAAA,EAAAsF,UAAAA,EAAAA,GAAA,CAAAyE,CAAA,GAAAF,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAvE,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAA;AAAAuI,MAAAA,CAAA,EAAAvI,SAAA;AAAAwI,MAAAA,CAAA,EAAAxI,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAOpC,CAAC;;;;AClLD,MAAMka,gBAAgB,GAAIngB,KAA+B,IAAI;EAEzD,MAAM;AAACgD,IAAAA,OAAAA;AAAO,GAAC,GAAGK,UAAU,CAAC3B,YAAY,CAAC,CAAA;EAE1C,MAAM,CAAC0e,cAAc,EAAEC,iBAAiB,CAAC,GAAG7c,YAAY,CAAS,EAAE,CAAC,CAAA;EACpE,MAAM,CAAC8c,eAAe,EAAEC,kBAAkB,CAAC,GAAG/c,YAAY,CAAY,EAAE,CAAC,CAAA;EACzE,MAAM,CAACgd,QAAQ,EAAEC,WAAW,CAAC,GAAGjd,YAAY,CAAY,EAAE,CAAC,CAAA;EAC3D,MAAM,CAAC6Z,QAAQ,EAAEsB,WAAW,CAAC,GAAGnb,YAAY,CAAU,KAAK,CAAC,CAAA;EAE5D,MAAM;AAAEzC,IAAAA,IAAAA;AAAK,GAAC,GAAGf,KAAK,CAAA;EACtB,MAAMge,aAAa,GAAG9Z,UAAU,CAAC,MAAMwc,0BAA0B,CAAC3f,IAAI,CAAC,CAAC,CAAA;AAExE,EAAA,IAAI4f,SAAyB,CAAA;AAC7B,EAAA,IAAIC,UAA0B,CAAA;EAE9B,MAAMlO,UAAU,GAAGxO,UAAU,CAAC,MAAM2c,gBAAgB,CAACC,yBAAyB,CAAC/f,IAAI,CAAC,CAAC,CAAA;AACrF,EAAA,MAAMggB,eAAe,GAAG7c,UAAU,CAAC,MAAMtC,WAAW,CAAC8Q,UAAU,EAAE,CAACsO,QAAQ,CAAC,CAAC,CAAA;AAC5E,EAAA,MAAMC,gBAAgB,GAAG/c,UAAU,CAAC,MAAMtC,WAAW,CAAC8Q,UAAU,EAAE,CAACwO,SAAS,CAAC,CAAC,CAAA;;AAE9E;EACA,MAAMC,cAAc,GAAGpgB,IAAI,KAAKqgB,gBAAgB,CAACC,MAAM,IAChDtgB,IAAI,KAAKqgB,gBAAgB,CAACE,UAAU,IACpCvgB,IAAI,KAAKqgB,gBAAgB,CAACG,aAAa,IACvCxgB,IAAI,KAAKqgB,gBAAgB,CAACI,iBAAiB,CAAA;;AAElD;AACA;EACA,IAAIC,mBAA8B,GAAG,EAAE,CAAA;AACvC/Q,EAAAA,YAAY,CAAC,MAAM;IACf,IAAI2M,QAAQ,EAAE,EAAE;AACZkD,MAAAA,kBAAkB,CAACC,QAAQ,EAAE,CAAC,CAAA;AAC9B,MAAA,OAAA;AACJ,KAAA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMvR,IAAI,GAAGwS,mBAAmB,CAAA;AAChC,IAAA,MAAMC,OAAO,GAAGzS,IAAI,CAAClN,MAAM,CAAC4f,CAAC,IAAInB,QAAQ,EAAE,CAACoB,OAAO,CAACD,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AAC5D,IAAA,MAAME,OAAO,GAAGrB,QAAQ,EAAE,CAACze,MAAM,CAAC4f,CAAC,IAAID,OAAO,CAACE,OAAO,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IAC9D,MAAMlQ,IAAI,GAAG,CAAC,GAAGiQ,OAAO,EAAE,GAAGG,OAAO,CAAC,CAAA;IACrCtB,kBAAkB,CAAC9O,IAAI,CAAC,CAAA;AACxBgQ,IAAAA,mBAAmB,GAAGhQ,IAAI,CAAA;AAC9B,GAAC,CAAC,CAAA;AAEFpN,EAAAA,OAAO,CAAC,MAAM;AACV,IAAA,MAAMI,SAA4B,GAAG;AACjC4b,MAAAA,iBAAiB,EAAEA,iBAAiB;AACpCI,MAAAA,WAAW,EAAEA,CAAC;AAAED,QAAAA,QAAAA;AAAS,OAAC,KAAKC,WAAW,CAACD,QAAQ,CAAC;AACpD7B,MAAAA,WAAW,EAAEtB,QAAQ,IAAIsB,WAAW,CAACtB,QAAQ,CAAC;MAC9CyE,iBAAiB,EAAExU,KAAK,IAAI;AACxB,QAAA,IAAIsT,UAAU,EAAE;AACZA,UAAAA,UAAU,CAAC9S,KAAK,CAACR,KAAK,GAAGA,KAAK,CAAA;AAClC,SAAA;AACJ,OAAA;KACH,CAAA;IAED,MAAMvJ,IAAI,GAAGf,OAAO,CAACiC,UAAU,CAAC,IAAI4b,gBAAgB,CAAC9f,IAAI,CAAC,CAAC,CAAA;IAC3DwG,SAAS,CAAC,MAAMvE,OAAO,CAAC4C,WAAW,CAAC7B,IAAI,CAAC,CAAC,CAAA;IAE1CA,IAAI,CAAC0J,OAAO,CAAChJ,SAAS,EAAEmc,UAAU,EAAED,SAAS,CAAC,CAAA;AAClD,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMoB,aAAa,GAAG7d,UAAU,CAAC,OAAO;IACpCoO,MAAM,EAAE8N,cAAc,EAAC;AAC3B,GAAC,CAAC,CAAC,CAAA;EAEH,MAAM4B,cAAc,GAAGA,MAAA,CAAA,MAAA;IAAA,IAAA/b,IAAA,GAAAC,QAAA,EAAA,CAAA;IAAA,IAAAC,KAAA,GAGTya,UAAU,CAAA;IAAA,OAAAza,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAV2a,UAAU,GAAA3a,IAAA,CAAA;AAAAI,IAAAA,MAAA,CAAAJ,IAAA,EAAAO,eAAA,CAGX0M,GAAG,EAAA;AAAA,MAAA,IAACC,IAAIA,GAAA;QAAA,OAAEmN,eAAe,EAAE,CAAA;AAAA,OAAA;MAAAlN,QAAA,EAAGA,CAAC2K,OAAO,EAAE/N,CAAC,KAAAxJ,eAAA,CACrCsX,OAAO,EAAA;AAACC,QAAAA,OAAO,EAAGA,OAAO;AAAA,QAAA,IAAGC,aAAaA,GAAA;UAAA,OAAGA,aAAa,EAAE,CAAA;AAAA,SAAA;AAAA,OAAA,CAAA;AAAa,KAAA,CAAA,CAAA,CAAA;AAAApX,IAAAA,MAAA,OAAAC,SAAA,CAAAZ,IAAA,EALzEgb,gBAAgB,EAAE,CAAA,CAAA,CAAA;AAAA,IAAA,OAAAhb,IAAA,CAAA;GAQjC,GAAA,CAAA;EAED,OAAAM,IAAA,OAGY4a,cAAc,GAAA,CAAA,MAAA;IAAA,IAAAxW,KAAA,GAAAqK,OAAA,EAAA,CAAA;IAAA,IAAA5M,MAAA,GAC0BuY,SAAS,CAAA;IAAA,OAAAvY,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAuC,KAAA,CAAA,GAATgW,SAAS,GAAAhW,KAAA,CAAA;IAAAtE,MAAA,CAAAsE,KAAA,EAC3CqX,cAAc,CAAA,CAAA;AAAApb,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GADPuV,eAAe,EAAE;QAAAtV,IAAA,GAAmDsW,aAAa,EAAE,CAAA;AAAAvW,MAAAA,GAAA,KAAAD,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAA8D,KAAA,EAAAY,GAAA,CAAAI,CAAA,GAAAH,GAAA,CAAA,CAAA;MAAAD,GAAA,CAAAK,CAAA,GAAAmC,KAAA,CAAApD,KAAA,EAAAc,IAAA,EAAAF,GAAA,CAAAK,CAAA,CAAA,CAAA;AAAA,MAAA,OAAAL,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAmD,KAAA,CAAA;GAGhGqX,GAAAA,GAAAA,cAAc,EAAE,CAAA,CAAA;AAKhC,CAAC;;;AC3FD,MAAMC,YAAY,GAAGA,MAAM;EAEvB,MAAM;IAACjf,OAAO;IAAEkf,yBAAyB;AAAEhf,IAAAA,qBAAAA;AAAqB,GAAC,GAAGG,UAAU,CAAC3B,YAAY,CAAC,CAAA;EAE5F,MAAM,CAACygB,oBAAoB,EAAEC,oBAAoB,CAAC,GAAG5e,YAAY,CAAS,EAAE,CAAC,CAAA;EAC7E,MAAM,CAAC6e,eAAe,EAAEC,eAAe,CAAC,GAAG9e,YAAY,CAAS,CAAC,CAAC,CAAA;EAClE,MAAM,CAAC+e,eAAe,EAAEC,eAAe,CAAC,GAAGhf,YAAY,CAAS,CAAC,CAAC,CAAA;EAClE,MAAM,CAACif,YAAY,EAAEC,YAAY,CAAC,GAAGlf,YAAY,CAAS,CAAC,CAAC,CAAA;EAC5D,MAAM,CAACmf,eAAe,EAAEC,eAAe,CAAC,GAAGpf,YAAY,CAAS,CAAC,CAAC,CAAA;EAClE,MAAM,CAACqf,kBAAkB,EAAEC,kBAAkB,CAAC,GAAGtf,YAAY,CAAS,KAAK,CAAC,CAAA;EAC5E,MAAM,CAACuf,eAAe,EAAEC,eAAe,CAAC,GAAGxf,YAAY,CAAS,KAAK,CAAC,CAAA;EACtE,MAAM,CAACyf,iBAAiB,EAAEC,iBAAiB,CAAC,GAAG1f,YAAY,CAAS,MAAM,CAAC,CAAA;EAC3E,MAAM,CAAC2f,aAAa,EAAEC,aAAa,CAAC,GAAG5f,YAAY,CAAS,EAAE,CAAC,CAAA;EAC/D,MAAM,CAAC6f,gBAAgB,EAAEC,gBAAgB,CAAC,GAAG9f,YAAY,CAAS,EAAE,CAAC,CAAA;EACrE,MAAM,CAAC+f,oBAAoB,EAAEC,oBAAoB,CAAC,GAAGhgB,YAAY,CAAS,EAAE,CAAC,CAAA;EAE7E,MAAM,CAACigB,YAAY,EAAEC,YAAY,CAAC,GAAGlgB,YAAY,CAAgB,IAAI,CAAC,CAAA;EACtE,MAAM,CAACmgB,2BAA2B,EAAEC,2BAA2B,CAAC,GAAGpgB,YAAY,CAAgB,IAAI,CAAC,CAAA;EACpG,MAAM,CAACqgB,wBAAwB,EAAEC,wBAAwB,CAAC,GAAGtgB,YAAY,CAA6B,IAAI,CAAC,CAAA;EAC3G,MAAM,CAACugB,oBAAoB,EAAEC,oBAAoB,CAAC,GAAGxgB,YAAY,CAAgB,IAAI,CAAC,CAAA;;AAEtF;AACA;AACA;AACA;AACA;EACA,MAAM,CAACygB,cAAc,EAAEC,cAAc,CAAC,GAAG1gB,YAAY,CAAS,kBAAkB,CAAC,CAAA;AAEjF,EAAA,IAAI2gB,KAAqB,CAAA;AACzB,EAAA,IAAIC,IAAoB,CAAA;AACxB,EAAA,IAAIC,UAA0B,CAAA;AAC9B,EAAA,IAAIC,KAAqB,CAAA;AACzB,EAAA,IAAIC,aAA6B,CAAA;AACjC,EAAA,IAAIC,OAAuB,CAAA;EAE3B,MAAMtQ,YAA4B,GAAG,EAAE,CAAA;AACvC3M,EAAAA,SAAS,CAAC,MAAM;IACZ2M,YAAY,CAAC7R,OAAO,CAAE8R,CAAC,IAAIA,CAAC,EAAG,CAAC,CAAA;IAChCD,YAAY,CAACE,MAAM,GAAG,CAAC,CAAA;AAC3B,GAAC,CAAC,CAAA;AAEF/P,EAAAA,OAAO,CAAC,MAAM;IACV,IAAI,CAACrB,OAAO,EAAE;AAAE,MAAA,OAAA;AAAQ,KAAA;IAExB,MAAMyhB,OAAO,GAAIC,GAAW,IAAK;AAC7B,MAAA,MAAMC,SAAS,GAAGzC,yBAAyB,CAAC0C,iBAAiB,CAACF,GAAG,CAAC,CAAA;MAClE,MAAMvd,IAAI,GAAGnE,OAAO,CAACiC,UAAU,CAAC,IAAI0f,SAAS,EAAE,CAAC,CAAA;MAChDpd,SAAS,CAAE,MAAKvE,OAAO,CAAC4C,WAAW,CAACuB,IAAI,CAAE,CAAC,CAAA;AAC3C,MAAA,OAAOA,IAAI,CAAA;KACd,CAAA;IAEDgd,KAAK,CAAC3U,WAAW,CAACiV,OAAO,CAAC,2BAA2B,CAAC,CAAC5jB,MAAM,EAAE,CAAC,CAAA;IAChEsjB,KAAK,CAAC3U,WAAW,CAACiV,OAAO,CAAC,oBAAoB,CAAC,CAAC5jB,MAAM,EAAE,CAAC,CAAA;IACzDyjB,KAAK,CAAC9U,WAAW,CAACiV,OAAO,CAAC,yBAAyB,CAAC,CAAC5jB,MAAM,EAAE,CAAC,CAAA;AAE9D,IAAA,MAAM4D,SAAwB,GAAG;AAC7BogB,MAAAA,gCAAgC,EAAEzC,oBAAoB;AACtD0C,MAAAA,cAAc,EAAExC,eAAe;AAC/ByC,MAAAA,WAAW,EAAEvC,eAAe;MAC5BE,YAAY;MACZE,eAAe;MACfE,kBAAkB;MAClBE,eAAe;MACfE,iBAAiB;MACjBE,aAAa;MACbE,gBAAgB;AAChB0B,MAAAA,kBAAkB,EAAEtB,YAAY;AAChCuB,MAAAA,mBAAmB,EAAEf,cAAc;AACnCgB,MAAAA,4BAA4B,EAAEtB,2BAA2B;AACzDuB,MAAAA,2BAA2B,EAAErB,wBAAwB;AACrDE,MAAAA,oBAAoB,EAAEA,CAACoB,QAAuB,EAAEC,IAAa,KAAKrB,oBAAoB,CAACqB,IAAI,GAAGD,QAAQ,GAAG,IAAI,CAAC;AAC9G5B,MAAAA,oBAAoB,EAAEA,oBAAoB;MAE1C8B,kCAAkC,EAAGC,QAAoB,IAAK;QAC1D,MAAMC,qBAAqB,GAAGtiB,qBAAqB,CAACyC,aAAa,CAAC4e,aAAa,EAAGgB,QAAQ,CAAC,CAAA;AAC3FrR,QAAAA,YAAY,CAACU,IAAI,CAAC,MAAM4Q,qBAAqB,EAAE,CAAC,CAAA;AACpD,OAAA;KACH,CAAA;IAED,MAAMzhB,IAAI,GAAGf,OAAO,CAACiC,UAAU,CAAC,IAAIwgB,YAAY,EAAE,CAAC,CAAA;IACnDle,SAAS,CAAC,MAAMvE,OAAO,CAAC4C,WAAW,CAAC7B,IAAI,CAAE,CAAC,CAAA;;AAE3C;AACA;IACA2B,UAAU,CAAC,MACP3B,IAAI,CAAC0J,OAAO,CACRhJ,SAAS,EACT0f,KAAK,EACLI,aAAa,EACbH,IAAI,EACJI,OAAO,EACPH,UACJ,CAAC,EAAE,CAAC,CAAC,CAAA;AACb,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMqB,cAAc,GAAGxhB,UAAU,CAAC,MAC9BtC,WAAW,CAAC,SAAS,EAAC,iBAAiB,EAAE6hB,YAAY,EAAE,EAAEQ,cAAc,EAAE,CAC7E,CAAC,CAAA;AACD,EAAA,MAAM0B,cAAc,GAAGzhB,UAAU,CAAC,MAC9BtC,WAAW,CAAC,SAAS,EAAEqiB,cAAc,EAAE,CAC3C,CAAC,CAAA;EACD,MAAM2B,sBAAsB,GAAG1hB,UAAU,CAAC,MACtCtC,WAAW,CAAC,kBAAkB,EAAEugB,oBAAoB,EAAE,EAAE8B,cAAc,EAAE,EAAEN,2BAA2B,EAAE,EAAEI,oBAAoB,EAAE,CACnI,CAAC,CAAA;AACD,EAAA,MAAM8B,aAAa,GAAG3hB,UAAU,CAAC,MAC7BtC,WAAW,CAAC,iBAAiB,EAAEmiB,oBAAoB,EAAE,CACzD,CAAC,CAAA;AACD,EAAA,MAAM+B,mBAAmB,GAAG5hB,UAAU,CAAC,MACnCtC,WAAW,CAAC,eAAe,EAAEmiB,oBAAoB,EAAE,CACvD,CAAC,CAAA;AACD,EAAA,MAAMgC,gBAAgB,GAAG7hB,UAAU,CAAC,MAChCtC,WAAW,CAAC,oBAAoB,EAAEmiB,oBAAoB,EAAE,CAC5D,CAAC,CAAA;AAED,EAAA,MAAMiC,WAAiB,GAAG9hB,UAAU,CAAC,OAAO;IACzCoO,MAAM,EAAEmQ,YAAY,EAAE;IACrB,YAAY,EAAEA,YAAY,EAAE;IAC5BwD,OAAO,EAAE9C,aAAa,EAAE;IACxB,YAAY,EAAEU,wBAAwB,EAAC;AAC3C,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,MAAMqC,iBAAiB,GAAGhiB,UAAU,CAAC,OAAO;IACxCoO,MAAM,EAAEuQ,kBAAkB,EAAE;IAC5BtQ,GAAG,EAAEwQ,eAAe,EAAE;IACtBzV,KAAK,EAAE2V,iBAAiB,EAAC;AAC7B,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,MAAMkD,cAAmB,GAAGjiB,UAAU,CAAC,OAAO;IAC1CoO,MAAM,EAAEqQ,eAAe,EAAE;IACzB,YAAY,EAAEA,eAAe,EAAE;IAC/BsD,OAAO,EAAE5C,gBAAgB,EAAE;IAC3B,YAAY,EAAEQ,wBAAwB,EAAC;AAC3C,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,MAAMuC,oBAAoB,GAAGliB,UAAU,CAAC,OAAO;IAC3CoJ,KAAK,EAAEiW,oBAAoB,EAAC;AAChC,GAAC,CAAC,CAAC,CAAA;AAIH,EAAA,OAAA,CAAA,MAAA;IAAA,IAAAtd,IAAA,GAAAC,QAAA,EAAA;MAAAyE,KAAA,GAAA1E,IAAA,CAAA2E,UAAA;MAAAC,KAAA,GAAAF,KAAA,CAAAG,WAAA;MAAAC,KAAA,GAAAF,KAAA,CAAAD,UAAA;MAAAI,KAAA,GAAAH,KAAA,CAAAC,WAAA;MAAAG,KAAA,GAAAD,KAAA,CAAAF,WAAA,CAAA;IAAA,IAAA3E,KAAA,GACege,KAAK,CAAA;IAAA,OAAAhe,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAALke,KAAK,GAAAle,IAAA,CAAA;AAAAI,IAAAA,MAAA,CAAAJ,IAAA,EAAAO,eAAA,CACX2O,cAAc,OAAAxK,KAAA,CAAA,CAAA;IAAA,IAAAvC,MAAA,GACJgc,IAAI,CAAA;IAAA,OAAAhc,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAuC,KAAA,CAAA,GAAJyZ,IAAI,GAAAzZ,KAAA,CAAA;AAAAtE,IAAAA,MAAA,CAAAsE,KAAA,EAAAnE,eAAA,CACV2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACiF,QAAQ,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAhgB,IAAAA,MAAA,CAAAsE,KAAA,EAAAnE,eAAA,CACjD2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACE,UAAU,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAjb,IAAAA,MAAA,CAAAsE,KAAA,EAAAnE,eAAA,CACnD2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACkF,SAAS,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAjgB,IAAAA,MAAA,CAAAsE,KAAA,EAAAnE,eAAA,CAClD2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACmF,cAAc,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;IAAA,IAAAnb,MAAA,GAEzBkZ,KAAK,CAAA;IAAA,OAAAlZ,MAAA,KAAAhF,UAAAA,GAAAA,GAAA,CAAAgF,MAAA,EAAAP,KAAA,CAAA,GAALyZ,KAAK,GAAAzZ,KAAA,CAAA;IAAA,IAAAQ,MAAA,GACzBkZ,aAAa,CAAA;IAAA,OAAAlZ,MAAA,KAAAjF,UAAAA,GAAAA,GAAA,CAAAiF,MAAA,EAAAN,KAAA,CAAA,GAAbwZ,aAAa,GAAAxZ,KAAA,CAAA;AAAA1E,IAAAA,MAAA,CAAA0E,KAAA,EAAAvE,eAAA,CACnB2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACoF,IAAI,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAngB,IAAAA,MAAA,CAAA0E,KAAA,EAAAvE,eAAA,CAC7C2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACC,MAAM,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAhb,IAAAA,MAAA,CAAA0E,KAAA,EAAAvE,eAAA,CAC/C2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACqF,KAAK,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAApgB,IAAAA,MAAA,CAAA0E,KAAA,EAAAvE,eAAA,CAC9C2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACsF,UAAU,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;IAAA,IAAApb,MAAA,GAGjD+Y,UAAU,CAAA;IAAA,OAAA/Y,MAAA,KAAAlF,UAAAA,GAAAA,GAAA,CAAAkF,MAAA,EAAAN,KAAA,CAAA,GAAVqZ,UAAU,GAAArZ,KAAA,CAAA;AAAA3E,IAAAA,MAAA,CAAA2E,KAAA,EAAAxE,eAAA,CAChB2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACuF,eAAe,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAtgB,IAAAA,MAAA,CAAA2E,KAAA,EAAAxE,eAAA,CACxD2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACI,iBAAiB,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAnb,IAAAA,MAAA,CAAA2E,KAAA,EAAAxE,eAAA,CAC1D2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACwF,gBAAgB,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAvgB,IAAAA,MAAA,CAAA2E,KAAA,EAAAxE,eAAA,CACzD2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACyF,qBAAqB,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;IAAA,IAAAC,MAAA,GAExDtC,OAAO,CAAA;IAAA,OAAAsC,MAAA,KAAA1gB,UAAAA,GAAAA,GAAA,CAAA0gB,MAAA,EAAA7b,KAAA,CAAA,GAAPuZ,OAAO,GAAAvZ,KAAA,CAAA;AAAA5E,IAAAA,MAAA,CAAA4E,KAAA,EAAAzE,eAAA,CACb2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAAC2F,WAAW,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAA1gB,IAAAA,MAAA,CAAA4E,KAAA,EAAAzE,eAAA,CACpD2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAACG,aAAa,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAAlb,IAAAA,MAAA,CAAA4E,KAAA,EAAAzE,eAAA,CACtD2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAAC4F,YAAY,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAA3gB,IAAAA,MAAA,CAAA4E,KAAA,EAAAzE,eAAA,CACrD2Z,gBAAgB,EAAA;AAAA,MAAA,IAACpf,IAAIA,GAAA;QAAA,OAAGqgB,gBAAgB,CAAC6F,iBAAiB,CAAA;AAAA,OAAA;AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAArgB,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GA1BvCka,cAAc,EAAE;QAAAja,IAAA,GAAmC4W,eAAe,EAAE;QAAA3W,IAAA,GAAmB6W,eAAe,EAAE;QAAA1S,IAAA,GAErGgW,aAAa,EAAE;QAAA/V,IAAA,GAA+BkW,WAAW,EAAE;QAAAnV,IAAA,GAM1E8U,cAAc,EAAE;QAAA1Q,IAAA,GACY2Q,sBAAsB,EAAE;QAAA1Q,IAAA,GAA+BkR,oBAAoB,EAAE;QAAAc,IAAA,GAOpFpB,mBAAmB,EAAE;QAAAqB,KAAA,GAA+BjB,iBAAiB,EAAE;QAAAkB,KAAA,GAM1ErB,gBAAgB,EAAE;QAAAsB,KAAA,GAA+BlB,cAAc,EAAE,CAAA;AAAA3a,MAAAA,GAAA,KAAAD,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAAZ,IAAA,EAAAsF,GAAA,CAAAI,CAAA,GAAAH,GAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAF,GAAA,CAAAK,CAAA,IAAAoC,YAAA,CAAA/H,IAAA,EAAAsF,eAAAA,EAAAA,GAAA,CAAAK,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAH,GAAA,CAAAM,CAAA,IAAAmC,YAAA,CAAA/H,IAAA,EAAAsF,eAAAA,EAAAA,GAAA,CAAAM,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAAmE,MAAAA,IAAA,KAAAtE,GAAA,CAAAwE,CAAA,IAAAlJ,SAAA,CAAA8D,KAAA,EAAAY,GAAA,CAAAwE,CAAA,GAAAF,IAAA,CAAA,CAAA;MAAAtE,GAAA,CAAAyE,CAAA,GAAAjC,KAAA,CAAApD,KAAA,EAAAmF,IAAA,EAAAvE,GAAA,CAAAyE,CAAA,CAAA,CAAA;AAAAa,MAAAA,IAAA,KAAAtF,GAAA,CAAAuF,CAAA,IAAAjK,SAAA,CAAAgE,KAAA,EAAAU,GAAA,CAAAuF,CAAA,GAAAD,IAAA,CAAA,CAAA;AAAAoE,MAAAA,IAAA,KAAA1J,GAAA,CAAAvJ,CAAA,IAAA6E,SAAA,CAAAkE,KAAA,EAAAQ,GAAA,CAAAvJ,CAAA,GAAAiT,IAAA,CAAA,CAAA;MAAA1J,GAAA,CAAA+b,CAAA,GAAAvZ,KAAA,CAAAhD,KAAA,EAAAmK,IAAA,EAAA3J,GAAA,CAAA+b,CAAA,CAAA,CAAA;AAAAJ,MAAAA,IAAA,KAAA3b,GAAA,CAAAoW,CAAA,IAAA9a,SAAA,CAAAmE,KAAA,EAAAO,GAAA,CAAAoW,CAAA,GAAAuF,IAAA,CAAA,CAAA;MAAA3b,GAAA,CAAAgc,CAAA,GAAAxZ,KAAA,CAAA/C,KAAA,EAAAmc,KAAA,EAAA5b,GAAA,CAAAgc,CAAA,CAAA,CAAA;AAAAH,MAAAA,KAAA,KAAA7b,GAAA,CAAAic,CAAA,IAAA3gB,SAAA,CAAAoE,KAAA,EAAAM,GAAA,CAAAic,CAAA,GAAAJ,KAAA,CAAA,CAAA;MAAA7b,GAAA,CAAAkc,CAAA,GAAA1Z,KAAA,CAAA9C,KAAA,EAAAoc,KAAA,EAAA9b,GAAA,CAAAkc,CAAA,CAAA,CAAA;AAAA,MAAA,OAAAlc,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAA;AAAAuI,MAAAA,CAAA,EAAAvI,SAAA;AAAAwI,MAAAA,CAAA,EAAAxI,SAAA;AAAAsJ,MAAAA,CAAA,EAAAtJ,SAAA;AAAAxF,MAAAA,CAAA,EAAAwF,SAAA;AAAA8f,MAAAA,CAAA,EAAA9f,SAAA;AAAAma,MAAAA,CAAA,EAAAna,SAAA;AAAA+f,MAAAA,CAAA,EAAA/f,SAAA;AAAAggB,MAAAA,CAAA,EAAAhgB,SAAA;AAAAigB,MAAAA,CAAA,EAAAjgB,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAQ3G,CAAC;;;ACjKD,MAAMyhB,YAAY,GAAI1nB,KAAoB,IAAI;EAE1C,MAAM;IAAEoT,QAAQ;IAAEuU,iBAAiB;IAAEC,YAAY;IAAEC,QAAQ;AAAEC,IAAAA,kCAAAA;AAAmC,GAAC,GAAG9nB,KAAK,CAAA;EACzG,MAAM,CAAC+a,QAAQ,EAAEC,WAAW,CAAC,GAAGxX,YAAY,EAAU,CAAA;AAEtD,EAAA,IAAIukB,SAAyB,CAAA;AAC7B,EAAA,IAAIC,YAA4B,CAAA;AAChC,EAAA,IAAIjkB,IAAkB,CAAA;EAEtB,MAAM;AAAEf,IAAAA,OAAAA;AAAQ,GAAC,GAAGK,UAAU,CAAC3B,YAAY,CAAC,CAAA;AAE5C2C,EAAAA,OAAO,CAAC,MAAM;AAEV,IAAA,MAAMI,SAAoB,GAAG;AACzBuW,MAAAA,WAAW,EAAEhM,KAAK,IAAIA,KAAK,IAAI,IAAI,GAAGgM,WAAW,CAACxT,SAAS,CAAC,GAAGwT,WAAW,CAACiN,QAAQ,CAACjZ,KAAK,EAAE,EAAE,CAAC,CAAA;KACjG,CAAA;AAEDjL,IAAAA,IAAI,GAAGf,OAAO,CAACiC,UAAU,CAAC,IAAIijB,YAAY,CAAC;AACvC/gB,MAAAA,IAAI,EAAE1C,SAAS;AACfsjB,MAAAA,SAAS,EAAEA,SAAS;AACpBC,MAAAA,YAAY,EAAEA,YAAY;AAC1BL,MAAAA,iBAAiB,EAAEA,iBAAiB;AACpCC,MAAAA,YAAY,EAAEA,YAAY;AAC1BE,MAAAA,kCAAkC,EAAEA,kCAAkC;AACtEK,MAAAA,iBAAiB,EAAEC,UAAU,IAAIP,QAAQ,CAACM,iBAAiB,CAACC,UAAU,CAAA;AAC1E,KAAC,CAAC,CAAC,CAAA;IAEHpoB,KAAK,CAACQ,GAAG,CAAC;MACN6nB,wBAAwBA,CAACC,EAAY,EAAE;AACnCvkB,QAAAA,IAAI,CAACskB,wBAAwB,CAACC,EAAE,CAAC,CAAA;AACrC,OAAA;AACJ,KAAC,CAAC,CAAA;AACN,GAAC,CAAC,CAAA;EAEF/gB,SAAS,CAAC,MAAMvE,OAAO,CAAC4C,WAAW,CAAC7B,IAAI,CAAE,CAAC,CAAA;AAE3C,EAAA,OAAA,CAAA,CAAA,MAAA;IAAA,IAAAkC,IAAA,GAAAC,QAAA,EAAA,CAAA;IAAA,IAAAC,KAAA,GAKkB4hB,SAAS,CAAA;IAAA,OAAA5hB,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAT8hB,SAAS,GAAA9hB,IAAA,CAAA;AAAAW,IAAAA,MAAA,CAAA2E,GAAA,IAAA;MAAA,IAAAC,GAAA,GAHL,CAAA,EAAE+c,kBAAkB,CAACC,SAAU,CAAGD,CAAAA,EAAAA,kBAAkB,CAACE,aAAc,CAAC,CAAA;QAAAhd,IAAA,GAEnEsP,QAAQ,EAAE,CAAA;AAAAvP,MAAAA,GAAA,KAAAD,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAAZ,IAAA,EAAAsF,GAAA,CAAAI,CAAA,GAAAH,GAAA,CAAA,CAAA;AAAAC,MAAAA,IAAA,KAAAF,GAAA,CAAAK,CAAA,IAAAoC,YAAA,CAAA/H,IAAA,EAAAsF,UAAAA,EAAAA,GAAA,CAAAK,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAF,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,EAGvBmN,QAAQ,EAAA,CAAA,MAAA;IAAA,IAAAzI,KAAA,GAAAzE,QAAA,EAAA,CAAA;IAAA,IAAAkC,MAAA,GAKA4f,YAAY,CAAA;IAAA,OAAA5f,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAuC,KAAA,CAAA,GAAZqd,YAAY,GAAArd,KAAA,CAAA;AAAA/D,IAAAA,MAAA,CAAA2E,GAAA,IAAA;MAAA,IAAAG,IAAA,GAHR,CAAA,EAAE6c,kBAAkB,CAACC,SAAU,CAAGD,CAAAA,EAAAA,kBAAkB,CAACG,gBAAiB,CAAC,CAAA;QAAA7Y,IAAA,GAEtEkL,QAAQ,EAAE,CAAA;AAAArP,MAAAA,IAAA,KAAAH,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAA8D,KAAA,EAAAY,GAAA,CAAAI,CAAA,GAAAD,IAAA,CAAA,CAAA;AAAAmE,MAAAA,IAAA,KAAAtE,GAAA,CAAAK,CAAA,IAAAoC,YAAA,CAAArD,KAAA,EAAAY,UAAAA,EAAAA,GAAA,CAAAK,CAAA,GAAAiE,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAtE,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAmD,KAAA,CAAA;AAAA,GAAA,GAAA,CAAA,CAAA;AAIrC,CAAC;;;ACxDD,MAAMge,QAAQ,GAAI3oB,KAAyC,IAAI;EAE3D,MAAM,CAAC4oB,QAAQ,EAAEC,WAAW,CAAC,GAAGrlB,YAAY,CAAS,EAAE,CAAC,CAAA;EACxD,MAAM,CAACslB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvlB,YAAY,CAAS,EAAE,CAAC,CAAA;EAC5E,MAAM,CAACwlB,WAAW,EAAE9E,cAAc,CAAC,GAAG1gB,YAAY,CAAS,EAAE,CAAC,CAAA;EAC9D,MAAM,CAACylB,MAAM,EAAEC,SAAS,CAAC,GAAG1lB,YAAY,CAAgB,IAAI,CAAC,CAAA;EAC7D,MAAM,CAAC2lB,UAAU,EAAEC,aAAa,CAAC,GAAG5lB,YAAY,CAAgB,IAAI,CAAC,CAAA;EACrE,MAAM,CAAC6lB,WAAW,EAAEC,cAAc,CAAC,GAAG9lB,YAAY,CAAU,KAAK,CAAC,CAAA;EAElE,MAAM;AAACR,IAAAA,OAAAA;AAAO,GAAC,GAAGhD,KAAK,CAAA;AACvB,EAAA,MAAMupB,KAAK,GAAGvmB,OAAO,CAACwmB,OAAO,CAAC,OAAO,CAAC,CAAA;AAEtC,EAAA,IAAIC,WAAwB,CAAA;EAC5B,MAAMC,cAAc,GAAIxK,MAAmB,IAAI;AAC3CuK,IAAAA,WAAW,GAAGvK,MAAM,CAAA;IACpBuK,WAAW,IAAIE,aAAa,EAAE,CAAA;GACjC,CAAA;AAED,EAAA,IAAI1pB,IAAoB,CAAA;AACxB,EAAA,IAAIqkB,KAAqB,CAAA;AACzB,EAAA,IAAIuD,QAAkB,CAAA;AAEtB,EAAA,MAAMD,YAAY,GAAGA,MAAMpgB,SAAS,CAAA;EAEpC,MAAM0M,YAA0B,GAAG,EAAE,CAAA;AACrC3M,EAAAA,SAAS,CAAE,MAAK;IACZ2M,YAAY,CAAC7R,OAAO,CAAE8R,CAAC,IAAIA,CAAC,EAAG,CAAC,CAAA;IAChCD,YAAY,CAACE,MAAM,GAAG,CAAC,CAAA;AAC3B,GAAC,CAAC,CAAA;EAEF,MAAMuV,aAAa,GAAGA,MAAK;IAEvB,MAAMC,cAAqB,GAAG,EAAE,CAAA;IAEhC,MAAM;AAAC1H,MAAAA,yBAAAA;AAAyB,KAAC,GAAGqH,KAAK,CAAA;AAEzC,IAAA,MAAMM,oBAAoB,GAAG3H,yBAAyB,CAAC0C,iBAAiB,CAAC,2BAA2B,CAAC,CAAA;AACrG,IAAA,MAAMkF,YAAY,GAAG5H,yBAAyB,CAAC0C,iBAAiB,CAAC,aAAa,CAAC,CAAA;AAC/E,IAAA,MAAMmF,cAAc,GAAG7H,yBAAyB,CAAC0C,iBAAiB,CAAC,eAAe,CAAC,CAAA;AACnF,IAAA,MAAMoF,cAAc,GAAG9H,yBAAyB,CAAC0C,iBAAiB,CAAC,cAAc,CAAC,CAAA;AAClF,IAAA,MAAMqF,eAAe,GAAG/H,yBAAyB,CAAC0C,iBAAiB,CAAC,eAAe,CAAC,CAAA;IACpF,MAAMsF,aAA+B,GAAG,EAAE,CAAA;AAE1C,IAAA,IAAIrC,QAAQ,CAACsC,aAAa,EAAE,IAAIN,oBAAoB,EAAE;MAClD,MAAMO,mBAAmB,GAAGpnB,OAAO,CAACiC,UAAU,CAAC,IAAI4kB,oBAAoB,EAAE,CAAC,CAAA;AAC1E,MAAA,MAAMQ,EAAE,GAAGD,mBAAmB,CAACvpB,MAAM,EAAE,CAAA;AACvCZ,MAAAA,IAAI,CAAC2N,qBAAqB,CAAC,YAAY,EAAEyc,EAAE,CAAC,CAAA;AAC5CH,MAAAA,aAAa,CAACtV,IAAI,CAACyV,EAAE,CAAC,CAAA;AACtBT,MAAAA,cAAc,CAAChV,IAAI,CAACwV,mBAAmB,CAAC,CAAA;AAC5C,KAAA;AAEA,IAAA,IAAIvC,QAAQ,CAACyC,WAAW,EAAE,IAAIR,YAAY,EAAE;MACxC,MAAMS,WAAW,GAAGvnB,OAAO,CAACiC,UAAU,CAAC,IAAI6kB,YAAY,EAAE,CAAC,CAAA;AAC1D,MAAA,MAAMO,EAAE,GAAGE,WAAW,CAAC1pB,MAAM,EAAE,CAAA;AAC/B,MAAA,MAAM2pB,cAAc,GAAGlG,KAAK,CAACmG,aAAa,CAAC,sBAAsB,CAAC,CAAA;AAClE,MAAA,IAAID,cAAc,EAAE;AAChBA,QAAAA,cAAc,CAAC5c,qBAAqB,CAAC,aAAa,EAAEyc,EAAE,CAAC,CAAA;AACvDH,QAAAA,aAAa,CAACtV,IAAI,CAACyV,EAAE,CAAC,CAAA;AAC1B,OAAA;AAEAT,MAAAA,cAAc,CAAChV,IAAI,CAAC2V,WAAW,CAAC,CAAA;AACpC,KAAA;AAEA,IAAA,IAAI1C,QAAQ,CAAC6C,aAAa,EAAE,IAAIX,cAAc,EAAE;MAC5C,MAAMY,aAAa,GAAG3nB,OAAO,CAACiC,UAAU,CAAC,IAAI8kB,cAAc,EAAE,CAAC,CAAA;AAC9D,MAAA,MAAMM,EAAE,GAAGM,aAAa,CAAC9pB,MAAM,EAAE,CAAA;AACjCZ,MAAAA,IAAI,CAAC2N,qBAAqB,CAAC,WAAW,EAAEyc,EAAE,CAAC,CAAA;AAC3CH,MAAAA,aAAa,CAACtV,IAAI,CAACyV,EAAE,CAAC,CAAA;AACtBT,MAAAA,cAAc,CAAChV,IAAI,CAAC+V,aAAa,CAAC,CAAA;AACtC,KAAA;AAEA,IAAA,IAAIV,eAAe,EAAE;MACjB,MAAMW,cAAc,GAAG5nB,OAAO,CAACiC,UAAU,CAAC,IAAIglB,eAAe,EAAE,CAAC,CAAA;AAChE,MAAA,MAAMI,EAAE,GAAGO,cAAc,CAAC/pB,MAAM,EAAE,CAAA;AAClCZ,MAAAA,IAAI,CAAC2N,qBAAqB,CAAC,WAAW,EAAEyc,EAAE,CAAC,CAAA;AAC3CH,MAAAA,aAAa,CAACtV,IAAI,CAACyV,EAAE,CAAC,CAAA;AACtBT,MAAAA,cAAc,CAAChV,IAAI,CAACgW,cAAc,CAAC,CAAA;AACvC,KAAA;AAEA,IAAA,IAAI/C,QAAQ,CAACgD,aAAa,EAAE,IAAIb,cAAc,EAAE;MAC5C,MAAMc,aAAa,GAAG9nB,OAAO,CAACiC,UAAU,CAAC,IAAI+kB,cAAc,EAAE,CAAC,CAAA;AAC9D,MAAA,MAAMK,EAAE,GAAGS,aAAa,CAACjqB,MAAM,EAAE,CAAA;AACjCZ,MAAAA,IAAI,CAAC2N,qBAAqB,CAAC,WAAW,EAAEyc,EAAE,CAAC,CAAA;AAC3CH,MAAAA,aAAa,CAACtV,IAAI,CAACyV,EAAE,CAAC,CAAA;AACtBT,MAAAA,cAAc,CAAChV,IAAI,CAACkW,aAAa,CAAC,CAAA;AACtC,KAAA;IAEA5W,YAAY,CAACU,IAAI,CAAE,MAAK;AACpB5R,MAAAA,OAAO,CAAC+nB,YAAY,CAACnB,cAAc,CAAC,CAAA;AACpCM,MAAAA,aAAa,CAAC7nB,OAAO,CAACgoB,EAAE,IAAI;QACxB,IAAIA,EAAE,CAACW,aAAa,EAAE;AAClBX,UAAAA,EAAE,CAACW,aAAa,CAACC,WAAW,CAACZ,EAAE,CAAC,CAAA;AACpC,SAAA;AACJ,OAAC,CAAC,CAAA;AACN,KAAC,CAAC,CAAA;GACL,CAAA;AAEDhmB,EAAAA,OAAO,CAAC,MAAM;IACVwjB,QAAQ,GAAG7kB,OAAO,CAACiC,UAAU,CAAC,IAAIimB,QAAQ,EAAE,CAAC,CAAA;IAC7ChX,YAAY,CAACU,IAAI,CAAE,MAAK5R,OAAO,CAAC4C,WAAW,CAACiiB,QAAQ,CAAE,CAAC,CAAA;AAEvD,IAAA,MAAMpjB,SAAoB,GAAG;AACzB0mB,MAAAA,aAAa,EACTA,MAAM,EAAE;AAAE;AACdtC,MAAAA,WAAW,EAAEA,WAAW;MACxBR,wBAAwB,EAAGC,EAAY,IAAK;AACxCmB,QAAAA,WAAW,IAAIA,WAAW,CAACpB,wBAAwB,CAACC,EAAE,CAAC,CAAA;OAC1D;AACDrD,MAAAA,mBAAmB,EAAEf,cAAc;MACnCkH,sBAAsB,EAAEA,MAAM;QAC1B,MAAMC,GAAkB,GAAG,EAAE,CAAA;AAE7B,QAAA,MAAMC,cAAc,GAAGrrB,IAAI,CAACwqB,aAAa,CAAC,UAAU,CAAC,CAAA;AACrD,QAAA,MAAMc,SAAS,GAAGtrB,IAAI,CAACwqB,aAAa,CAAC,8BAA8B,CAAC,CAAA;AAEpE,QAAA,IAAIa,cAAc,EAAE;AAChBD,UAAAA,GAAG,CAACzW,IAAI,CAAC0W,cAA6B,CAAC,CAAA;AAC3C,SAAA;AAEA,QAAA,IAAIC,SAAS,EAAE;AACXF,UAAAA,GAAG,CAACzW,IAAI,CAAC2W,SAAwB,CAAC,CAAA;AACtC,SAAA;AAEA,QAAA,OAAOF,GAAG,CAAA;OACb;MACDnC,SAAS;AACTE,MAAAA,aAAAA;KACH,CAAA;IAEDvB,QAAQ,CAACpa,OAAO,CAAChJ,SAAS,EAAExE,IAAI,EAAEA,IAAI,CAAC,CAAA;IACvCqpB,cAAc,CAAC,IAAI,CAAC,CAAA;AACxB,GAAC,CAAC,CAAA;EAEF,MAAM5W,UAAU,GAAGxO,UAAU,CAAE,MAAMtC,WAAW,CAAC,iBAAiB,EAAEgnB,QAAQ,EAAE,EAAEE,kBAAkB,EAAE,EAAEE,WAAW,EAAE,EAAEhpB,KAAK,CAAC2G,KAAK,CAAE,CAAC,CAAA;AACnI,EAAA,MAAM6kB,cAAc,GAAGtnB,UAAU,CAAE,MAAMtC,WAAW,CAAC,sBAAsB,EAAE,kBAAkB,EAAEonB,WAAW,EAAE,CAAC,CAAC,CAAA;AAEhH,EAAA,MAAMyC,QAAa,GAAGvnB,UAAU,CAAE,OAAO;IACrCilB,UAAU,EAAEA,UAAU,IAAI,IAAI,GAAGA,UAAU,EAAE,GAAG,EAAE;IAClDuC,gBAAgB,EAAEvC,UAAU,IAAI,IAAI,GAAGA,UAAU,EAAE,GAAG,EAAE;IACxDF,MAAM,EAAEA,MAAM,IAAI,IAAI,GAAGA,MAAM,EAAE,GAAG,EAAA;AACxC,GAAC,CAAC,CAAC,CAAA;AAEH,EAAA,OAAA,CAAA,MAAA;IAAA,IAAAhjB,IAAA,GAAAC,QAAA,EAAA;MAAAyE,KAAA,GAAA1E,IAAA,CAAA2E,UAAA,CAAA;IAAA,IAAAzE,KAAA,GACelG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;IAAA,IAAAmC,MAAA,GAC2Bkc,KAAK,CAAA;IAAA,OAAAlc,MAAA,KAAAhC,UAAAA,GAAAA,GAAA,CAAAgC,MAAA,EAAAuC,KAAA,CAAA,GAAL2Z,KAAK,GAAA3Z,KAAA,CAAA;AAAAtE,IAAAA,MAAA,CAAAsE,KAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAArE,GAAA,GAAAC,IAAA,CACrC8iB,MAAAA,CAAAA,CAAAA,WAAW,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAAb/iB,GAAA,EACE;AACA;AACA;AACA;AACA;MAAAE,eAAA,CACC9E,YAAY,CAACiqB,QAAQ,EAAA;AAAC3c,QAAAA,KAAK,EAAEua,KAAK;AAAA,QAAA,IAAAnW,QAAA,GAAA;UAAA,OAAA5M,eAAA,CAC9BkhB,YAAY,EAAA;AAAAlnB,YAAAA,GAAA,EACHkpB,cAAc;AACpB/B,YAAAA,iBAAiB,EAAI1nB,IAAI;AACzB2nB,YAAAA,YAAY,EAAGA,YAAY;AAC3BC,YAAAA,QAAQ,EAAGA,QAAQ;AACnBC,YAAAA,kCAAkC,EAAG,IAAI;AAAA,YAAA,IAAA1U,QAAA,GAAA;cAAA,OAAA5M,eAAA,CACxCyb,YAAY,EAAA,EAAA,CAAA,CAAA;AAAA,aAAA;AAAA,WAAA,CAAA,CAAA;AAAA,SAAA;OAEG,CAAA,CAAA;AAAA,KAAA,GAAA,CAAA,CAAA;AAAArb,IAAAA,MAAA,CAAA2E,GAAA,IAAA;AAAA,MAAA,IAAAC,GAAA,GAjBTkH,UAAU,EAAE;QAAAjH,IAAA,GAAWggB,QAAQ,EAAE;QAAA/f,IAAA,GAC3C8f,cAAc,EAAE,CAAA;AAAAhgB,MAAAA,GAAA,KAAAD,GAAA,CAAAI,CAAA,IAAA9E,SAAA,CAAAZ,IAAA,EAAAsF,GAAA,CAAAI,CAAA,GAAAH,GAAA,CAAA,CAAA;MAAAD,GAAA,CAAAK,CAAA,GAAAmC,KAAA,CAAA9H,IAAA,EAAAwF,IAAA,EAAAF,GAAA,CAAAK,CAAA,CAAA,CAAA;AAAAF,MAAAA,IAAA,KAAAH,GAAA,CAAAM,CAAA,IAAAhF,SAAA,CAAA8D,KAAA,EAAAY,GAAA,CAAAM,CAAA,GAAAH,IAAA,CAAA,CAAA;AAAA,MAAA,OAAAH,GAAA,CAAA;AAAA,KAAA,EAAA;AAAAI,MAAAA,CAAA,EAAAnE,SAAA;AAAAoE,MAAAA,CAAA,EAAApE,SAAA;AAAAqE,MAAAA,CAAA,EAAArE,SAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,OAAAvB,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAqBzC,CAAC;;;AChJKQ,MAAAA,WAAW,GAAIzG,KAAuB,IAAK;AAC7C,EAAA,IAAIC,IAAoB,CAAA;AACxB,EAAA,IAAI8F,GAAY,CAAA;EAEhB,MAAM,CAAC/C,OAAO,EAAE4oB,UAAU,CAAC,GAAGpoB,YAAY,EAAW,CAAA;EACrD,MAAM,CAACqoB,UAAU,EAAEC,UAAU,CAAC,GAAGtoB,YAAY,CAAe,EAAE,CAAC,CAAA;EAE/D,MAAM0Q,YAA4B,GAAG,EAAE,CAAA;AACvC3M,EAAAA,SAAS,CAAC,MAAM;IACZ2M,YAAY,CAAC7R,OAAO,CAAC8R,CAAC,IAAIA,CAAC,EAAE,CAAC,CAAA;IAC9BD,YAAY,CAACE,MAAM,GAAG,CAAC,CAAA;AAC3B,GAAC,CAAC,CAAA;;AAEF;AACA;AACA;EACA,MAAM2X,SAAc,GAAG,EAAE,CAAA;AACzBppB,EAAAA,MAAM,CAACC,IAAI,CAAC5C,KAAK,CAAC,CAACqC,OAAO,CAACQ,GAAG,IAAIkpB,SAAS,CAAClpB,GAAG,CAAC,GAAI7C,KAAK,CAAS6C,GAAG,CAAC,CAAC,CAAA;AAEvE6N,EAAAA,YAAY,CAAC,MAAM;AACf,IAAA,MAAM9N,IAAI,GAAGD,MAAM,CAACC,IAAI,CAAC5C,KAAK,CAAC,CAAA;IAC/B,MAAMgsB,OAAqE,GAAG,EAAE,CAAA;IAChF,IAAIC,YAAY,GAAG,KAAK,CAAA;AAExBrpB,IAAAA,IAAI,CAACP,OAAO,CAACQ,GAAG,IAAI;AAChB;AACA;AACA,MAAA,MAAMqpB,YAAY,GAAIlsB,KAAK,CAAS6C,GAAG,CAAC,CAAA;AAExC,MAAA,MAAMspB,aAAa,GAAGJ,SAAS,CAAClpB,GAAG,CAAC,CAAA;MACpC,IAAIspB,aAAa,KAAKD,YAAY,EAAE;AAChCF,QAAAA,OAAO,CAACnpB,GAAG,CAAC,GAAGqpB,YAAY,CAAA;AAC3BH,QAAAA,SAAS,CAAClpB,GAAG,CAAC,GAAGqpB,YAAY,CAAA;AAC7BD,QAAAA,YAAY,GAAG,IAAI,CAAA;AACvB,OAAA;AACJ,KAAC,CAAC,CAAA;AAEF,IAAA,IAAIA,YAAY,EAAE;AACdG,MAAAA,aAAa,CAACC,eAAe,CAACL,OAAO,EAAEjmB,GAAI,CAAC,CAAA;AAChD,KAAA;AACJ,GAAC,CAAC,CAAA;AAEF1B,EAAAA,OAAO,CAAC,MAAM;AAEV,IAAA,MAAMioB,OAAO,GAAGtsB,KAAK,CAACssB,OAAO,IAAI,EAAE,CAAA;AAEnC,IAAA,MAAMxsB,aAA4B,GAAG;MACjCY,SAAS,EAAE6rB,IAAI,IAAI;QACfT,UAAU,CAAC,CAAC,GAAGD,UAAU,EAAE,EAAEU,IAAI,CAAC,CAAC,CAAA;OACtC;MACD3rB,YAAY,EAAE2rB,IAAI,IAAI;AAClBT,QAAAA,UAAU,CAACD,UAAU,EAAE,CAAC9pB,MAAM,CAACyqB,IAAI,IAAIA,IAAI,IAAID,IAAI,CAAC,CAAC,CAAA;AACzD,OAAA;KACH,CAAA;AAED,IAAA,MAAME,UAAsB,GAAG;AAC3BC,MAAAA,qBAAqB,EAAE;AACnBC,QAAAA,yBAAyB,EAAE,IAAIrrB,uBAAuB,CAACxB,aAAa,CAAA;OACvE;MACDwsB,OAAO;MACPM,kBAAkB,EAAE,IAAI9gB,uBAAuB,EAAC;KACnD,CAAA;IAED,MAAMjH,WAAW,GAAGunB,aAAa,CAACS,+BAA+B,CAAC7sB,KAAK,CAAC6E,WAAW,EAAE7E,KAAK,CAAC,CAAA;IAE3F,MAAM8sB,gBAAgB,GAAI9pB,OAAgB,IAAK;MAC3C4oB,UAAU,CAAC5oB,OAAO,CAAC,CAAA;AACnB;MACA,MAAM+pB,YAAY,GAAG/pB,OAAO,CAACwmB,OAAO,CAACwD,YAAY,CAACC,IAAI,CAAiB,CAAA;MACvEF,YAAY,CAACG,SAAS,CAAC,MAAM;QACzB,MAAMC,WAAW,GAAGntB,KAAK,CAACQ,GAAG,IAAKR,KAAK,CAACQ,GAAqC,CAAA;AAC7E,QAAA,IAAI2sB,WAAW,EAAE;AACb,UAAA,MAAMC,OAAuB,GAAG;AAC5BrnB,YAAAA,GAAG,EAAEA,GAAI;AACTC,YAAAA,SAAS,EAAE,IAAIqnB,SAAS,CAACtnB,GAAI,CAAA;WAChC,CAAA;UACDonB,WAAW,CAACC,OAAO,CAAC,CAAA;AACxB,SAAA;QACAlZ,YAAY,CAACU,IAAI,CAAC,MAAM7O,GAAG,CAAEpF,OAAO,EAAE,CAAC,CAAA;AAC3C,OAAC,CAAC,CAAA;KACL,CAAA;IAED,MAAM2sB,qBAAqB,GAAGA,MAAM;AAChC;KACH,CAAA;AAED,IAAA,MAAMC,eAAe,GAAG,IAAIC,eAAe,EAAE,CAAA;AAC7CznB,IAAAA,GAAG,GAAGwnB,eAAe,CAACE,MAAM,CAACxtB,IAAI,EAAE4E,WAAW,EAAEioB,gBAAgB,EAAEQ,qBAAqB,EAAEb,UAAU,CAAC,CAAA;AACxG,GAAC,CAAC,CAAA;AAEF,EAAA,OAAA,CAAA,MAAA;IAAA,IAAAxmB,IAAA,GAAAC,MAAA,EAAA,CAAA;IAAA,IAAAC,KAAA,GACclG,IAAI,CAAA;IAAA,OAAAkG,KAAA,KAAAC,UAAAA,GAAAA,GAAA,CAAAD,KAAA,EAAAF,IAAA,CAAA,GAAJhG,IAAI,GAAAgG,IAAA,CAAA;IAAAA,IAAA,CAAA6H,KAAA,CAAA4f,WAAA,CAAA,QAAA,EAAA,MAAA,CAAA,CAAA;AAAArnB,IAAAA,MAAA,CAAAJ,IAAA,EAAA,CAAA,MAAA;AAAA,MAAA,IAAAK,GAAA,GAAAC,IAAA,CACTvD,MAAAA,CAAAA,CAAAA,OAAO,EAAE,CAAA,CAAA;AAAA,MAAA,OAAA,MAATsD,GAAA,EAAA,IAAAE,eAAA,CACImiB,QAAQ,EAAA;AAAA,QAAA,KAAA,OAAA,CAAAhiB,GAAA;UAAA,OAAQ3G,KAAK,CAAC2G,KAAK,CAAA;AAAA,SAAA;AAAA,QAAA,IAAE3D,OAAOA,GAAA;UAAA,OAAEA,OAAO,EAAE,CAAA;AAAA,SAAA;OAAc,CAAA,CAAA;AAAA,KAAA,GAAA,EAAA,IAAA,CAAA,CAAA;AAAAqD,IAAAA,MAAA,CAAAJ,IAAA,EAAAO,eAAA,CAEjE0M,GAAG,EAAA;AAAA,MAAA,IAACC,IAAIA,GAAA;QAAA,OAAE0Y,UAAU,EAAE,CAAA;AAAA,OAAA;MAAAzY,QAAA,EAAGA,CAACmZ,IAAI,EAAEvc,CAAC,KAAAxJ,eAAA,CAC7BkR,MAAM,EAAA;AAAA,QAAA,IAACpX,KAAKA,GAAA;UAAA,OAAEisB,IAAI,CAACjsB,KAAK,CAAA;AAAA,SAAA;AAAA,QAAA,IAAA8S,QAAA,GAAA;UAAA,OAAA5M,eAAA,CACpB+lB,IAAI,CAAChsB,UAAU,EAAAmG,UAAA,CAAA,MAAK6lB,IAAI,CAACvsB,KAAK,EAAA;AAAAQ,YAAAA,GAAAA,CAAA0H,EAAA,EAAA;AAAA,cAAA,IAAAE,MAAA,GAAOmkB,IAAI,CAAC/rB,GAAG,CAAA;cAAA,OAAA4H,MAAA,KAAAA,UAAAA,GAAAA,MAAA,CAAAF,EAAA,IAARqkB,IAAI,CAAC/rB,GAAG,GAAA0H,EAAA,CAAA;AAAA,aAAA;AAAA,WAAA,CAAA,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA,CAAA;AACzC,KAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAA,IAAA,OAAAjC,IAAA,CAAA;AAAA,GAAA,GAAA,CAAA;AAIzB;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}